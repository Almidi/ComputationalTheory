Terminals unused in grammar

   CAST
   BOOL
   KW_AND
   KW_DIV
   KW_MOD
   KW_NOT
   KW_OR


State 17 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_decl type_def var_decl subprogram body SY_PERIOD

    2 program_decl: KW_PROGRAM IDENT SY_SEMICOLON

    3 body: KW_BEGIN statements KW_END

    4 statements: %empty
    5           | statement_list

    6 statement_list: statement
    7               | statement_list SY_SEMICOLON statement

    8 statement: proc_call

    9 proc_call: IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

   10 arguments: %empty
   11          | arglist

   12 arglist: expression
   13        | arglist SY_COMMA expression

   14 unary_exp: SY_DASH expression
   15          | SY_NOT expression
   16          | expression SY_NOT

   17 binary_exp: expression SY_DASH expression
   18           | expression SY_PLUS expression
   19           | expression SY_STAR expression
   20           | expression SY_SLASH expression
   21           | expression SY_EQUALS expression
   22           | expression SY_LESS expression
   23           | expression SY_GREATER expression
   24           | expression SY_LESS_EQUALS expression
   25           | expression SY_GREATER_EQUALS expression
   26           | expression SY_LESS_BIGGER expression
   27           | expression SY_AND expression
   28           | expression SY_OR expression
   29           | expression SY_ASSIGN expression

   30 expression: POSINT
   31           | REAL
   32           | STRING
   33           | IDENT
   34           | SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | unary_exp
   36           | binary_exp

   37 type_def: %empty
   38         | KW_TYPE type_list SY_SEMICOLON

   39 type_list: shortcut_data_type
   40          | type_list SY_SEMICOLON shortcut_data_type

   41 shortcut_data_type: IDENT SY_EQUALS advanced_data_type

   42 advanced_data_type: simple_data_type
   43                   | KW_ARRAY KW_OF simple_data_type
   44                   | KW_ARRAY matrix_n KW_OF simple_data_type

   45 matrix_n: SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   46         | matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

   47 simple_data_type: KW_INTEGER
   48                 | KW_CHAR
   49                 | KW_BOOLEAN
   50                 | KW_REAL

   51 var_decl: %empty
   52         | KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   53         | var_decl1 var_decl2 var_decl3 var_decl

   54 var_decl1: IDENT
   55          | var_decl1 SY_COMMA IDENT

   56 var_decl2: SY_COLON
   57          | SY_COLON KW_ARRAY matrix_n KW_OF
   58          | SY_COLON KW_ARRAY KW_OF

   59 var_decl3: simple_data_type SY_SEMICOLON

   60 subprogram: %empty
   61           | procedure_header
   62           | function_header

   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON

   65 args_decl: %empty
   66          | args_decl_list

   67 args_decl_list: IDENT SY_COLON advanced_data_type
   68               | args_decl_list SY_COMMA IDENT SY_COLON advanced_data_type

   69 return_type: %empty
   70            | advanced_data_type

   71 procedure_body: var_decl subprogram command

   72 command: complex_cmd

   73 complex_cmd: KW_BEGIN simple_cmd KW_END

   74 simple_cmd: SY_SEMICOLON
   75           | IDENT SY_ASSIGN expression
   76           | KW_RESULT SY_ASSIGN expression
   77           | if_cmd
   78           | for_cmd
   79           | while_cmd
   80           | IDENT SY_COLON complex_cmd
   81           | KW_GOTO IDENT
   82           | KW_RETURN
   83           | IDENT SY_LEFT_BRACKET arglist

   84 while_cmd: KW_WHILE expression KW_DO complex_cmd
   85          | KW_REPEAT complex_cmd KW_UNTIL expression

   86 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO complex_cmd
   87        | KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO complex_cmd

   88 if_cmd: KW_IF expression KW_THEN complex_cmd else_state

   89 else_state: %empty
   90           | KW_ELSE complex_cmd


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 2 9 33 41 54 55 63 64 67 68 75 80 81 83 86 87
POSINT (259) 30 45 46
REAL (260) 31
STRING (261) 32
CAST (262)
BOOL (263)
KW_PROGRAM (264) 2
KW_BEGIN (265) 3 73
KW_END (266) 3 73
KW_AND (267)
KW_DIV (268)
KW_FUNCTION (269) 64
KW_MOD (270)
KW_PROCEDURE (271) 63
KW_RESULT (272) 76
KW_ARRAY (273) 43 44 57 58
KW_DO (274) 84 86 87
KW_GOTO (275) 81
KW_NOT (276)
KW_RETURN (277) 82
KW_BOOLEAN (278) 49
KW_ELSE (279) 90
KW_IF (280) 88
KW_OF (281) 43 44 57 58
KW_REAL (282) 50
KW_THEN (283) 88
KW_CHAR (284) 48
KW_FOR (285) 86 87
KW_INTEGER (286) 47
KW_OR (287)
KW_REPEAT (288) 85
KW_UNTIL (289) 85
KW_VAR (290) 52
KW_WHILE (291) 84
KW_TO (292) 86
KW_DOWNTO (293) 87
KW_TYPE (294) 38
SY_DASH (295) 14 17
SY_PLUS (296) 18
SY_STAR (297) 19
SY_SLASH (298) 20
SY_EQUALS (299) 21 41
SY_LESS (300) 22
SY_GREATER (301) 23
SY_LESS_EQUALS (302) 24
SY_GREATER_EQUALS (303) 25
SY_LESS_BIGGER (304) 26
SY_AND (305) 27
SY_OR (306) 28
SY_ASSIGN (307) 29 75 76 86 87
SY_NOT (308) 15 16
SY_COMMA (309) 13 55 68
SY_LEFT_SQR_BRACKET (310) 45 46
SY_RIGHT_SQR_BRACKET (311) 45 46
SY_COLON (312) 56 57 58 67 68 80
SY_SEMICOLON (313) 2 7 38 40 59 63 64 74
SY_PERIOD (314) 1
SY_LEFT_BRACKET (315) 9 34 63 64 83
SY_RIGHT_BRACKET (316) 9 34 63 64


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
program (63)
    on left: 1, on right: 0
program_decl (64)
    on left: 2, on right: 1
body (65)
    on left: 3, on right: 1
statements (66)
    on left: 4 5, on right: 3
statement_list (67)
    on left: 6 7, on right: 5 7
statement (68)
    on left: 8, on right: 6 7
proc_call (69)
    on left: 9, on right: 8
arguments (70)
    on left: 10 11, on right: 9
arglist (71)
    on left: 12 13, on right: 11 13 83
unary_exp (72)
    on left: 14 15 16, on right: 35
binary_exp (73)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29, on right: 36
expression (74)
    on left: 30 31 32 33 34 35 36, on right: 12 13 14 15 16 17 18 19
    20 21 22 23 24 25 26 27 28 29 34 75 76 84 85 86 87 88
type_def (75)
    on left: 37 38, on right: 1
type_list (76)
    on left: 39 40, on right: 38 40
shortcut_data_type (77)
    on left: 41, on right: 39 40
advanced_data_type (78)
    on left: 42 43 44, on right: 41 67 68 70
matrix_n (79)
    on left: 45 46, on right: 44 46 57
simple_data_type (80)
    on left: 47 48 49 50, on right: 42 43 44 59
var_decl (81)
    on left: 51 52 53, on right: 1 52 53 71
var_decl1 (82)
    on left: 54 55, on right: 52 53 55
var_decl2 (83)
    on left: 56 57 58, on right: 52 53
var_decl3 (84)
    on left: 59, on right: 52 53
subprogram (85)
    on left: 60 61 62, on right: 1 71
procedure_header (86)
    on left: 63, on right: 61
function_header (87)
    on left: 64, on right: 62
args_decl (88)
    on left: 65 66, on right: 63 64
args_decl_list (89)
    on left: 67 68, on right: 66 68
return_type (90)
    on left: 69 70, on right: 64
procedure_body (91)
    on left: 71, on right: 63
command (92)
    on left: 72, on right: 71
complex_cmd (93)
    on left: 73, on right: 72 80 84 85 86 87 88 90
simple_cmd (94)
    on left: 74 75 76 77 78 79 80 81 82 83, on right: 73
while_cmd (95)
    on left: 84 85, on right: 79
for_cmd (96)
    on left: 86 87, on right: 78
if_cmd (97)
    on left: 88, on right: 77
else_state (98)
    on left: 89 90, on right: 88


State 0

    0 $accept: . program $end
    1 program: . program_decl type_def var_decl subprogram body SY_PERIOD
    2 program_decl: . KW_PROGRAM IDENT SY_SEMICOLON

    KW_PROGRAM  shift, and go to state 1

    program       go to state 2
    program_decl  go to state 3


State 1

    2 program_decl: KW_PROGRAM . IDENT SY_SEMICOLON

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: program_decl . type_def var_decl subprogram body SY_PERIOD
   37 type_def: . %empty  [IDENT, KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   38         | . KW_TYPE type_list SY_SEMICOLON

    KW_TYPE  shift, and go to state 6

    $default  reduce using rule 37 (type_def)

    type_def  go to state 7


State 4

    2 program_decl: KW_PROGRAM IDENT . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 8


State 5

    0 $accept: program $end .

    $default  accept


State 6

   38 type_def: KW_TYPE . type_list SY_SEMICOLON
   39 type_list: . shortcut_data_type
   40          | . type_list SY_SEMICOLON shortcut_data_type
   41 shortcut_data_type: . IDENT SY_EQUALS advanced_data_type

    IDENT  shift, and go to state 9

    type_list           go to state 10
    shortcut_data_type  go to state 11


State 7

    1 program: program_decl type_def . var_decl subprogram body SY_PERIOD
   51 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   52         | . KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   53         | . var_decl1 var_decl2 var_decl3 var_decl
   54 var_decl1: . IDENT
   55          | . var_decl1 SY_COMMA IDENT

    IDENT   shift, and go to state 12
    KW_VAR  shift, and go to state 13

    $default  reduce using rule 51 (var_decl)

    var_decl   go to state 14
    var_decl1  go to state 15


State 8

    2 program_decl: KW_PROGRAM IDENT SY_SEMICOLON .

    $default  reduce using rule 2 (program_decl)


State 9

   41 shortcut_data_type: IDENT . SY_EQUALS advanced_data_type

    SY_EQUALS  shift, and go to state 16


State 10

   38 type_def: KW_TYPE type_list . SY_SEMICOLON
   40 type_list: type_list . SY_SEMICOLON shortcut_data_type

    SY_SEMICOLON  shift, and go to state 17


State 11

   39 type_list: shortcut_data_type .

    $default  reduce using rule 39 (type_list)


State 12

   54 var_decl1: IDENT .

    $default  reduce using rule 54 (var_decl1)


State 13

   52 var_decl: KW_VAR . var_decl1 var_decl2 var_decl3 var_decl
   54 var_decl1: . IDENT
   55          | . var_decl1 SY_COMMA IDENT

    IDENT  shift, and go to state 12

    var_decl1  go to state 18


State 14

    1 program: program_decl type_def var_decl . subprogram body SY_PERIOD
   60 subprogram: . %empty  [KW_BEGIN]
   61           | . procedure_header
   62           | . function_header
   63 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   64 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON

    KW_FUNCTION   shift, and go to state 19
    KW_PROCEDURE  shift, and go to state 20

    $default  reduce using rule 60 (subprogram)

    subprogram        go to state 21
    procedure_header  go to state 22
    function_header   go to state 23


State 15

   53 var_decl: var_decl1 . var_decl2 var_decl3 var_decl
   55 var_decl1: var_decl1 . SY_COMMA IDENT
   56 var_decl2: . SY_COLON
   57          | . SY_COLON KW_ARRAY matrix_n KW_OF
   58          | . SY_COLON KW_ARRAY KW_OF

    SY_COMMA  shift, and go to state 24
    SY_COLON  shift, and go to state 25

    var_decl2  go to state 26


State 16

   41 shortcut_data_type: IDENT SY_EQUALS . advanced_data_type
   42 advanced_data_type: . simple_data_type
   43                   | . KW_ARRAY KW_OF simple_data_type
   44                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL

    KW_ARRAY    shift, and go to state 27
    KW_BOOLEAN  shift, and go to state 28
    KW_REAL     shift, and go to state 29
    KW_CHAR     shift, and go to state 30
    KW_INTEGER  shift, and go to state 31

    advanced_data_type  go to state 32
    simple_data_type    go to state 33


State 17

   38 type_def: KW_TYPE type_list SY_SEMICOLON .  [IDENT, KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   40 type_list: type_list SY_SEMICOLON . shortcut_data_type
   41 shortcut_data_type: . IDENT SY_EQUALS advanced_data_type

    IDENT  shift, and go to state 9

    IDENT     [reduce using rule 38 (type_def)]
    $default  reduce using rule 38 (type_def)

    shortcut_data_type  go to state 34


State 18

   52 var_decl: KW_VAR var_decl1 . var_decl2 var_decl3 var_decl
   55 var_decl1: var_decl1 . SY_COMMA IDENT
   56 var_decl2: . SY_COLON
   57          | . SY_COLON KW_ARRAY matrix_n KW_OF
   58          | . SY_COLON KW_ARRAY KW_OF

    SY_COMMA  shift, and go to state 24
    SY_COLON  shift, and go to state 25

    var_decl2  go to state 35


State 19

   64 function_header: KW_FUNCTION . IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON

    IDENT  shift, and go to state 36


State 20

   63 procedure_header: KW_PROCEDURE . IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    IDENT  shift, and go to state 37


State 21

    1 program: program_decl type_def var_decl subprogram . body SY_PERIOD
    3 body: . KW_BEGIN statements KW_END

    KW_BEGIN  shift, and go to state 38

    body  go to state 39


State 22

   61 subprogram: procedure_header .

    $default  reduce using rule 61 (subprogram)


State 23

   62 subprogram: function_header .

    $default  reduce using rule 62 (subprogram)


State 24

   55 var_decl1: var_decl1 SY_COMMA . IDENT

    IDENT  shift, and go to state 40


State 25

   56 var_decl2: SY_COLON .  [KW_BOOLEAN, KW_REAL, KW_CHAR, KW_INTEGER]
   57          | SY_COLON . KW_ARRAY matrix_n KW_OF
   58          | SY_COLON . KW_ARRAY KW_OF

    KW_ARRAY  shift, and go to state 41

    $default  reduce using rule 56 (var_decl2)


State 26

   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL
   53 var_decl: var_decl1 var_decl2 . var_decl3 var_decl
   59 var_decl3: . simple_data_type SY_SEMICOLON

    KW_BOOLEAN  shift, and go to state 28
    KW_REAL     shift, and go to state 29
    KW_CHAR     shift, and go to state 30
    KW_INTEGER  shift, and go to state 31

    simple_data_type  go to state 42
    var_decl3         go to state 43


State 27

   43 advanced_data_type: KW_ARRAY . KW_OF simple_data_type
   44                   | KW_ARRAY . matrix_n KW_OF simple_data_type
   45 matrix_n: . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   46         | . matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

    KW_OF                shift, and go to state 44
    SY_LEFT_SQR_BRACKET  shift, and go to state 45

    matrix_n  go to state 46


State 28

   49 simple_data_type: KW_BOOLEAN .

    $default  reduce using rule 49 (simple_data_type)


State 29

   50 simple_data_type: KW_REAL .

    $default  reduce using rule 50 (simple_data_type)


State 30

   48 simple_data_type: KW_CHAR .

    $default  reduce using rule 48 (simple_data_type)


State 31

   47 simple_data_type: KW_INTEGER .

    $default  reduce using rule 47 (simple_data_type)


State 32

   41 shortcut_data_type: IDENT SY_EQUALS advanced_data_type .

    $default  reduce using rule 41 (shortcut_data_type)


State 33

   42 advanced_data_type: simple_data_type .

    $default  reduce using rule 42 (advanced_data_type)


State 34

   40 type_list: type_list SY_SEMICOLON shortcut_data_type .

    $default  reduce using rule 40 (type_list)


State 35

   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL
   52 var_decl: KW_VAR var_decl1 var_decl2 . var_decl3 var_decl
   59 var_decl3: . simple_data_type SY_SEMICOLON

    KW_BOOLEAN  shift, and go to state 28
    KW_REAL     shift, and go to state 29
    KW_CHAR     shift, and go to state 30
    KW_INTEGER  shift, and go to state 31

    simple_data_type  go to state 42
    var_decl3         go to state 47


State 36

   64 function_header: KW_FUNCTION IDENT . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON

    SY_LEFT_BRACKET  shift, and go to state 48


State 37

   63 procedure_header: KW_PROCEDURE IDENT . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    SY_LEFT_BRACKET  shift, and go to state 49


State 38

    3 body: KW_BEGIN . statements KW_END
    4 statements: . %empty  [KW_END]
    5           | . statement_list
    6 statement_list: . statement
    7               | . statement_list SY_SEMICOLON statement
    8 statement: . proc_call
    9 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT  shift, and go to state 50

    $default  reduce using rule 4 (statements)

    statements      go to state 51
    statement_list  go to state 52
    statement       go to state 53
    proc_call       go to state 54


State 39

    1 program: program_decl type_def var_decl subprogram body . SY_PERIOD

    SY_PERIOD  shift, and go to state 55


State 40

   55 var_decl1: var_decl1 SY_COMMA IDENT .

    $default  reduce using rule 55 (var_decl1)


State 41

   45 matrix_n: . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   46         | . matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   57 var_decl2: SY_COLON KW_ARRAY . matrix_n KW_OF
   58          | SY_COLON KW_ARRAY . KW_OF

    KW_OF                shift, and go to state 56
    SY_LEFT_SQR_BRACKET  shift, and go to state 45

    matrix_n  go to state 57


State 42

   59 var_decl3: simple_data_type . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 58


State 43

   51 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   52         | . KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   53         | . var_decl1 var_decl2 var_decl3 var_decl
   53         | var_decl1 var_decl2 var_decl3 . var_decl
   54 var_decl1: . IDENT
   55          | . var_decl1 SY_COMMA IDENT

    IDENT   shift, and go to state 12
    KW_VAR  shift, and go to state 13

    $default  reduce using rule 51 (var_decl)

    var_decl   go to state 59
    var_decl1  go to state 15


State 44

   43 advanced_data_type: KW_ARRAY KW_OF . simple_data_type
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL

    KW_BOOLEAN  shift, and go to state 28
    KW_REAL     shift, and go to state 29
    KW_CHAR     shift, and go to state 30
    KW_INTEGER  shift, and go to state 31

    simple_data_type  go to state 60


State 45

   45 matrix_n: SY_LEFT_SQR_BRACKET . POSINT SY_RIGHT_SQR_BRACKET

    POSINT  shift, and go to state 61


State 46

   44 advanced_data_type: KW_ARRAY matrix_n . KW_OF simple_data_type
   46 matrix_n: matrix_n . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

    KW_OF                shift, and go to state 62
    SY_LEFT_SQR_BRACKET  shift, and go to state 63


State 47

   51 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   52         | . KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   52         | KW_VAR var_decl1 var_decl2 var_decl3 . var_decl
   53         | . var_decl1 var_decl2 var_decl3 var_decl
   54 var_decl1: . IDENT
   55          | . var_decl1 SY_COMMA IDENT

    IDENT   shift, and go to state 12
    KW_VAR  shift, and go to state 13

    $default  reduce using rule 51 (var_decl)

    var_decl   go to state 64
    var_decl1  go to state 15


State 48

   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON
   65 args_decl: . %empty  [SY_RIGHT_BRACKET]
   66          | . args_decl_list
   67 args_decl_list: . IDENT SY_COLON advanced_data_type
   68               | . args_decl_list SY_COMMA IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 65

    $default  reduce using rule 65 (args_decl)

    args_decl       go to state 66
    args_decl_list  go to state 67


State 49

   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   65 args_decl: . %empty  [SY_RIGHT_BRACKET]
   66          | . args_decl_list
   67 args_decl_list: . IDENT SY_COLON advanced_data_type
   68               | . args_decl_list SY_COMMA IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 65

    $default  reduce using rule 65 (args_decl)

    args_decl       go to state 68
    args_decl_list  go to state 67


State 50

    9 proc_call: IDENT . SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    SY_LEFT_BRACKET  shift, and go to state 69


State 51

    3 body: KW_BEGIN statements . KW_END

    KW_END  shift, and go to state 70


State 52

    5 statements: statement_list .  [KW_END]
    7 statement_list: statement_list . SY_SEMICOLON statement

    SY_SEMICOLON  shift, and go to state 71

    $default  reduce using rule 5 (statements)


State 53

    6 statement_list: statement .

    $default  reduce using rule 6 (statement_list)


State 54

    8 statement: proc_call .

    $default  reduce using rule 8 (statement)


State 55

    1 program: program_decl type_def var_decl subprogram body SY_PERIOD .

    $default  reduce using rule 1 (program)


State 56

   58 var_decl2: SY_COLON KW_ARRAY KW_OF .

    $default  reduce using rule 58 (var_decl2)


State 57

   46 matrix_n: matrix_n . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   57 var_decl2: SY_COLON KW_ARRAY matrix_n . KW_OF

    KW_OF                shift, and go to state 72
    SY_LEFT_SQR_BRACKET  shift, and go to state 63


State 58

   59 var_decl3: simple_data_type SY_SEMICOLON .

    $default  reduce using rule 59 (var_decl3)


State 59

   53 var_decl: var_decl1 var_decl2 var_decl3 var_decl .

    $default  reduce using rule 53 (var_decl)


State 60

   43 advanced_data_type: KW_ARRAY KW_OF simple_data_type .

    $default  reduce using rule 43 (advanced_data_type)


State 61

   45 matrix_n: SY_LEFT_SQR_BRACKET POSINT . SY_RIGHT_SQR_BRACKET

    SY_RIGHT_SQR_BRACKET  shift, and go to state 73


State 62

   44 advanced_data_type: KW_ARRAY matrix_n KW_OF . simple_data_type
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL

    KW_BOOLEAN  shift, and go to state 28
    KW_REAL     shift, and go to state 29
    KW_CHAR     shift, and go to state 30
    KW_INTEGER  shift, and go to state 31

    simple_data_type  go to state 74


State 63

   46 matrix_n: matrix_n SY_LEFT_SQR_BRACKET . POSINT SY_RIGHT_SQR_BRACKET

    POSINT  shift, and go to state 75


State 64

   52 var_decl: KW_VAR var_decl1 var_decl2 var_decl3 var_decl .

    $default  reduce using rule 52 (var_decl)


State 65

   67 args_decl_list: IDENT . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 76


State 66

   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET return_type SY_SEMICOLON

    SY_RIGHT_BRACKET  shift, and go to state 77


State 67

   66 args_decl: args_decl_list .  [SY_RIGHT_BRACKET]
   68 args_decl_list: args_decl_list . SY_COMMA IDENT SY_COLON advanced_data_type

    SY_COMMA  shift, and go to state 78

    $default  reduce using rule 66 (args_decl)


State 68

   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    SY_RIGHT_BRACKET  shift, and go to state 79


State 69

    9 proc_call: IDENT SY_LEFT_BRACKET . arguments SY_RIGHT_BRACKET
   10 arguments: . %empty  [SY_RIGHT_BRACKET]
   11          | . arglist
   12 arglist: . expression
   13        | . arglist SY_COMMA expression
   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    $default  reduce using rule 10 (arguments)

    arguments   go to state 87
    arglist     go to state 88
    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 91


State 70

    3 body: KW_BEGIN statements KW_END .

    $default  reduce using rule 3 (body)


State 71

    7 statement_list: statement_list SY_SEMICOLON . statement
    8 statement: . proc_call
    9 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT  shift, and go to state 50

    statement  go to state 92
    proc_call  go to state 54


State 72

   57 var_decl2: SY_COLON KW_ARRAY matrix_n KW_OF .

    $default  reduce using rule 57 (var_decl2)


State 73

   45 matrix_n: SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET .

    $default  reduce using rule 45 (matrix_n)


State 74

   44 advanced_data_type: KW_ARRAY matrix_n KW_OF simple_data_type .

    $default  reduce using rule 44 (advanced_data_type)


State 75

   46 matrix_n: matrix_n SY_LEFT_SQR_BRACKET POSINT . SY_RIGHT_SQR_BRACKET

    SY_RIGHT_SQR_BRACKET  shift, and go to state 93


State 76

   42 advanced_data_type: . simple_data_type
   43                   | . KW_ARRAY KW_OF simple_data_type
   44                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL
   67 args_decl_list: IDENT SY_COLON . advanced_data_type

    KW_ARRAY    shift, and go to state 27
    KW_BOOLEAN  shift, and go to state 28
    KW_REAL     shift, and go to state 29
    KW_CHAR     shift, and go to state 30
    KW_INTEGER  shift, and go to state 31

    advanced_data_type  go to state 94
    simple_data_type    go to state 33


State 77

   42 advanced_data_type: . simple_data_type
   43                   | . KW_ARRAY KW_OF simple_data_type
   44                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL
   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . return_type SY_SEMICOLON
   69 return_type: . %empty  [SY_SEMICOLON]
   70            | . advanced_data_type

    KW_ARRAY    shift, and go to state 27
    KW_BOOLEAN  shift, and go to state 28
    KW_REAL     shift, and go to state 29
    KW_CHAR     shift, and go to state 30
    KW_INTEGER  shift, and go to state 31

    $default  reduce using rule 69 (return_type)

    advanced_data_type  go to state 95
    simple_data_type    go to state 33
    return_type         go to state 96


State 78

   68 args_decl_list: args_decl_list SY_COMMA . IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 97


State 79

   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . SY_SEMICOLON procedure_body

    SY_SEMICOLON  shift, and go to state 98


State 80

   33 expression: IDENT .

    $default  reduce using rule 33 (expression)


State 81

   30 expression: POSINT .

    $default  reduce using rule 30 (expression)


State 82

   31 expression: REAL .

    $default  reduce using rule 31 (expression)


State 83

   32 expression: STRING .

    $default  reduce using rule 32 (expression)


State 84

   14 unary_exp: . SY_DASH expression
   14          | SY_DASH . expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 99


State 85

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   15          | SY_NOT . expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 100


State 86

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   34           | SY_LEFT_BRACKET . expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 101


State 87

    9 proc_call: IDENT SY_LEFT_BRACKET arguments . SY_RIGHT_BRACKET

    SY_RIGHT_BRACKET  shift, and go to state 102


State 88

   11 arguments: arglist .  [SY_RIGHT_BRACKET]
   13 arglist: arglist . SY_COMMA expression

    SY_COMMA  shift, and go to state 103

    $default  reduce using rule 11 (arguments)


State 89

   35 expression: unary_exp .

    $default  reduce using rule 35 (expression)


State 90

   36 expression: binary_exp .

    $default  reduce using rule 36 (expression)


State 91

   12 arglist: expression .  [KW_END, SY_COMMA, SY_RIGHT_BRACKET]
   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_DASH            shift, and go to state 104
    SY_PLUS            shift, and go to state 105
    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 12 (arglist)


State 92

    7 statement_list: statement_list SY_SEMICOLON statement .

    $default  reduce using rule 7 (statement_list)


State 93

   46 matrix_n: matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET .

    $default  reduce using rule 46 (matrix_n)


State 94

   67 args_decl_list: IDENT SY_COLON advanced_data_type .

    $default  reduce using rule 67 (args_decl_list)


State 95

   70 return_type: advanced_data_type .

    $default  reduce using rule 70 (return_type)


State 96

   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 118


State 97

   68 args_decl_list: args_decl_list SY_COMMA IDENT . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 119


State 98

   51 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   52         | . KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   53         | . var_decl1 var_decl2 var_decl3 var_decl
   54 var_decl1: . IDENT
   55          | . var_decl1 SY_COMMA IDENT
   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON . procedure_body
   71 procedure_body: . var_decl subprogram command

    IDENT   shift, and go to state 12
    KW_VAR  shift, and go to state 13

    $default  reduce using rule 51 (var_decl)

    var_decl        go to state 120
    var_decl1       go to state 15
    procedure_body  go to state 121


State 99

   14 unary_exp: SY_DASH expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_COMMA, SY_RIGHT_BRACKET]
   16          | expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_PLUS            shift, and go to state 105
    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 14 (unary_exp)

    Conflict between rule 14 and token SY_DASH resolved as reduce (%left SY_DASH).
    Conflict between rule 14 and token SY_PLUS resolved as shift (SY_DASH < SY_PLUS).
    Conflict between rule 14 and token SY_STAR resolved as shift (SY_DASH < SY_STAR).
    Conflict between rule 14 and token SY_SLASH resolved as shift (SY_DASH < SY_SLASH).
    Conflict between rule 14 and token SY_EQUALS resolved as shift (SY_DASH < SY_EQUALS).
    Conflict between rule 14 and token SY_LESS resolved as shift (SY_DASH < SY_LESS).
    Conflict between rule 14 and token SY_GREATER resolved as shift (SY_DASH < SY_GREATER).
    Conflict between rule 14 and token SY_LESS_EQUALS resolved as shift (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 14 and token SY_GREATER_EQUALS resolved as shift (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 14 and token SY_LESS_BIGGER resolved as shift (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 14 and token SY_AND resolved as shift (SY_DASH < SY_AND).
    Conflict between rule 14 and token SY_OR resolved as shift (SY_DASH < SY_OR).
    Conflict between rule 14 and token SY_ASSIGN resolved as shift (SY_DASH < SY_ASSIGN).
    Conflict between rule 14 and token SY_NOT resolved as shift (SY_DASH < SY_NOT).


State 100

   15 unary_exp: SY_NOT expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_NOT, SY_COMMA, SY_RIGHT_BRACKET]
   16          | expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    $default  reduce using rule 15 (unary_exp)

    Conflict between rule 15 and token SY_DASH resolved as reduce (SY_DASH < SY_NOT).
    Conflict between rule 15 and token SY_PLUS resolved as reduce (SY_PLUS < SY_NOT).
    Conflict between rule 15 and token SY_STAR resolved as reduce (SY_STAR < SY_NOT).
    Conflict between rule 15 and token SY_SLASH resolved as reduce (SY_SLASH < SY_NOT).
    Conflict between rule 15 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_NOT).
    Conflict between rule 15 and token SY_LESS resolved as reduce (SY_LESS < SY_NOT).
    Conflict between rule 15 and token SY_GREATER resolved as reduce (SY_GREATER < SY_NOT).
    Conflict between rule 15 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_NOT).
    Conflict between rule 15 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_NOT).
    Conflict between rule 15 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_NOT).
    Conflict between rule 15 and token SY_AND resolved as reduce (SY_AND < SY_NOT).
    Conflict between rule 15 and token SY_OR resolved as reduce (SY_OR < SY_NOT).
    Conflict between rule 15 and token SY_ASSIGN resolved as reduce (SY_ASSIGN < SY_NOT).
    Conflict between rule 15 and token SY_NOT resolved as reduce (%left SY_NOT).


State 101

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   34 expression: SY_LEFT_BRACKET expression . SY_RIGHT_BRACKET

    SY_DASH            shift, and go to state 104
    SY_PLUS            shift, and go to state 105
    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117
    SY_RIGHT_BRACKET   shift, and go to state 122


State 102

    9 proc_call: IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET .

    $default  reduce using rule 9 (proc_call)


State 103

   13 arglist: arglist SY_COMMA . expression
   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 123


State 104

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   17           | expression SY_DASH . expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 124


State 105

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   18           | expression SY_PLUS . expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 125


State 106

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   19           | expression SY_STAR . expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 126


State 107

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   20           | expression SY_SLASH . expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 127


State 108

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   21           | expression SY_EQUALS . expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 128


State 109

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   22           | expression SY_LESS . expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 129


State 110

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   23           | expression SY_GREATER . expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 130


State 111

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   24           | expression SY_LESS_EQUALS . expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 131


State 112

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   25           | expression SY_GREATER_EQUALS . expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 132


State 113

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   26           | expression SY_LESS_BIGGER . expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 133


State 114

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   27           | expression SY_AND . expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 134


State 115

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   28           | expression SY_OR . expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 135


State 116

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   29           | expression SY_ASSIGN . expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 136


State 117

   16 unary_exp: expression SY_NOT .

    $default  reduce using rule 16 (unary_exp)


State 118

   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON .

    $default  reduce using rule 64 (function_header)


State 119

   42 advanced_data_type: . simple_data_type
   43                   | . KW_ARRAY KW_OF simple_data_type
   44                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL
   68 args_decl_list: args_decl_list SY_COMMA IDENT SY_COLON . advanced_data_type

    KW_ARRAY    shift, and go to state 27
    KW_BOOLEAN  shift, and go to state 28
    KW_REAL     shift, and go to state 29
    KW_CHAR     shift, and go to state 30
    KW_INTEGER  shift, and go to state 31

    advanced_data_type  go to state 137
    simple_data_type    go to state 33


State 120

   60 subprogram: . %empty  [KW_BEGIN]
   61           | . procedure_header
   62           | . function_header
   63 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   64 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON
   71 procedure_body: var_decl . subprogram command

    KW_FUNCTION   shift, and go to state 19
    KW_PROCEDURE  shift, and go to state 20

    $default  reduce using rule 60 (subprogram)

    subprogram        go to state 138
    procedure_header  go to state 22
    function_header   go to state 23


State 121

   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body .

    $default  reduce using rule 63 (procedure_header)


State 122

   34 expression: SY_LEFT_BRACKET expression SY_RIGHT_BRACKET .

    $default  reduce using rule 34 (expression)


State 123

   13 arglist: arglist SY_COMMA expression .  [KW_END, SY_COMMA, SY_RIGHT_BRACKET]
   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_DASH            shift, and go to state 104
    SY_PLUS            shift, and go to state 105
    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 13 (arglist)


State 124

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   17           | expression SY_DASH expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_COMMA, SY_RIGHT_BRACKET]
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_PLUS            shift, and go to state 105
    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 17 (binary_exp)

    Conflict between rule 17 and token SY_DASH resolved as reduce (%left SY_DASH).
    Conflict between rule 17 and token SY_PLUS resolved as shift (SY_DASH < SY_PLUS).
    Conflict between rule 17 and token SY_STAR resolved as shift (SY_DASH < SY_STAR).
    Conflict between rule 17 and token SY_SLASH resolved as shift (SY_DASH < SY_SLASH).
    Conflict between rule 17 and token SY_EQUALS resolved as shift (SY_DASH < SY_EQUALS).
    Conflict between rule 17 and token SY_LESS resolved as shift (SY_DASH < SY_LESS).
    Conflict between rule 17 and token SY_GREATER resolved as shift (SY_DASH < SY_GREATER).
    Conflict between rule 17 and token SY_LESS_EQUALS resolved as shift (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_GREATER_EQUALS resolved as shift (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 17 and token SY_LESS_BIGGER resolved as shift (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 17 and token SY_AND resolved as shift (SY_DASH < SY_AND).
    Conflict between rule 17 and token SY_OR resolved as shift (SY_DASH < SY_OR).
    Conflict between rule 17 and token SY_ASSIGN resolved as shift (SY_DASH < SY_ASSIGN).
    Conflict between rule 17 and token SY_NOT resolved as shift (SY_DASH < SY_NOT).


State 125

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   18           | expression SY_PLUS expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_COMMA, SY_RIGHT_BRACKET]
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 18 (binary_exp)

    Conflict between rule 18 and token SY_DASH resolved as reduce (SY_DASH < SY_PLUS).
    Conflict between rule 18 and token SY_PLUS resolved as reduce (%left SY_PLUS).
    Conflict between rule 18 and token SY_STAR resolved as shift (SY_PLUS < SY_STAR).
    Conflict between rule 18 and token SY_SLASH resolved as shift (SY_PLUS < SY_SLASH).
    Conflict between rule 18 and token SY_EQUALS resolved as shift (SY_PLUS < SY_EQUALS).
    Conflict between rule 18 and token SY_LESS resolved as shift (SY_PLUS < SY_LESS).
    Conflict between rule 18 and token SY_GREATER resolved as shift (SY_PLUS < SY_GREATER).
    Conflict between rule 18 and token SY_LESS_EQUALS resolved as shift (SY_PLUS < SY_LESS_EQUALS).
    Conflict between rule 18 and token SY_GREATER_EQUALS resolved as shift (SY_PLUS < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_LESS_BIGGER resolved as shift (SY_PLUS < SY_LESS_BIGGER).
    Conflict between rule 18 and token SY_AND resolved as shift (SY_PLUS < SY_AND).
    Conflict between rule 18 and token SY_OR resolved as shift (SY_PLUS < SY_OR).
    Conflict between rule 18 and token SY_ASSIGN resolved as shift (SY_PLUS < SY_ASSIGN).
    Conflict between rule 18 and token SY_NOT resolved as shift (SY_PLUS < SY_NOT).


State 126

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   19           | expression SY_STAR expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_COMMA, SY_RIGHT_BRACKET]
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 19 (binary_exp)

    Conflict between rule 19 and token SY_DASH resolved as reduce (SY_DASH < SY_STAR).
    Conflict between rule 19 and token SY_PLUS resolved as reduce (SY_PLUS < SY_STAR).
    Conflict between rule 19 and token SY_STAR resolved as reduce (%left SY_STAR).
    Conflict between rule 19 and token SY_SLASH resolved as shift (SY_STAR < SY_SLASH).
    Conflict between rule 19 and token SY_EQUALS resolved as shift (SY_STAR < SY_EQUALS).
    Conflict between rule 19 and token SY_LESS resolved as shift (SY_STAR < SY_LESS).
    Conflict between rule 19 and token SY_GREATER resolved as shift (SY_STAR < SY_GREATER).
    Conflict between rule 19 and token SY_LESS_EQUALS resolved as shift (SY_STAR < SY_LESS_EQUALS).
    Conflict between rule 19 and token SY_GREATER_EQUALS resolved as shift (SY_STAR < SY_GREATER_EQUALS).
    Conflict between rule 19 and token SY_LESS_BIGGER resolved as shift (SY_STAR < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_AND resolved as shift (SY_STAR < SY_AND).
    Conflict between rule 19 and token SY_OR resolved as shift (SY_STAR < SY_OR).
    Conflict between rule 19 and token SY_ASSIGN resolved as shift (SY_STAR < SY_ASSIGN).
    Conflict between rule 19 and token SY_NOT resolved as shift (SY_STAR < SY_NOT).


State 127

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   20           | expression SY_SLASH expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_COMMA, SY_RIGHT_BRACKET]
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 20 (binary_exp)

    Conflict between rule 20 and token SY_DASH resolved as reduce (SY_DASH < SY_SLASH).
    Conflict between rule 20 and token SY_PLUS resolved as reduce (SY_PLUS < SY_SLASH).
    Conflict between rule 20 and token SY_STAR resolved as reduce (SY_STAR < SY_SLASH).
    Conflict between rule 20 and token SY_SLASH resolved as reduce (%left SY_SLASH).
    Conflict between rule 20 and token SY_EQUALS resolved as shift (SY_SLASH < SY_EQUALS).
    Conflict between rule 20 and token SY_LESS resolved as shift (SY_SLASH < SY_LESS).
    Conflict between rule 20 and token SY_GREATER resolved as shift (SY_SLASH < SY_GREATER).
    Conflict between rule 20 and token SY_LESS_EQUALS resolved as shift (SY_SLASH < SY_LESS_EQUALS).
    Conflict between rule 20 and token SY_GREATER_EQUALS resolved as shift (SY_SLASH < SY_GREATER_EQUALS).
    Conflict between rule 20 and token SY_LESS_BIGGER resolved as shift (SY_SLASH < SY_LESS_BIGGER).
    Conflict between rule 20 and token SY_AND resolved as shift (SY_SLASH < SY_AND).
    Conflict between rule 20 and token SY_OR resolved as shift (SY_SLASH < SY_OR).
    Conflict between rule 20 and token SY_ASSIGN resolved as shift (SY_SLASH < SY_ASSIGN).
    Conflict between rule 20 and token SY_NOT resolved as shift (SY_SLASH < SY_NOT).


State 128

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   21           | expression SY_EQUALS expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_COMMA, SY_RIGHT_BRACKET]
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 21 (binary_exp)

    Conflict between rule 21 and token SY_DASH resolved as reduce (SY_DASH < SY_EQUALS).
    Conflict between rule 21 and token SY_PLUS resolved as reduce (SY_PLUS < SY_EQUALS).
    Conflict between rule 21 and token SY_STAR resolved as reduce (SY_STAR < SY_EQUALS).
    Conflict between rule 21 and token SY_SLASH resolved as reduce (SY_SLASH < SY_EQUALS).
    Conflict between rule 21 and token SY_EQUALS resolved as reduce (%left SY_EQUALS).
    Conflict between rule 21 and token SY_LESS resolved as shift (SY_EQUALS < SY_LESS).
    Conflict between rule 21 and token SY_GREATER resolved as shift (SY_EQUALS < SY_GREATER).
    Conflict between rule 21 and token SY_LESS_EQUALS resolved as shift (SY_EQUALS < SY_LESS_EQUALS).
    Conflict between rule 21 and token SY_GREATER_EQUALS resolved as shift (SY_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 21 and token SY_LESS_BIGGER resolved as shift (SY_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 21 and token SY_AND resolved as shift (SY_EQUALS < SY_AND).
    Conflict between rule 21 and token SY_OR resolved as shift (SY_EQUALS < SY_OR).
    Conflict between rule 21 and token SY_ASSIGN resolved as shift (SY_EQUALS < SY_ASSIGN).
    Conflict between rule 21 and token SY_NOT resolved as shift (SY_EQUALS < SY_NOT).


State 129

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   22           | expression SY_LESS expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_COMMA, SY_RIGHT_BRACKET]
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 22 (binary_exp)

    Conflict between rule 22 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS).
    Conflict between rule 22 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS).
    Conflict between rule 22 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS).
    Conflict between rule 22 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS).
    Conflict between rule 22 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS).
    Conflict between rule 22 and token SY_LESS resolved as reduce (%left SY_LESS).
    Conflict between rule 22 and token SY_GREATER resolved as shift (SY_LESS < SY_GREATER).
    Conflict between rule 22 and token SY_LESS_EQUALS resolved as shift (SY_LESS < SY_LESS_EQUALS).
    Conflict between rule 22 and token SY_GREATER_EQUALS resolved as shift (SY_LESS < SY_GREATER_EQUALS).
    Conflict between rule 22 and token SY_LESS_BIGGER resolved as shift (SY_LESS < SY_LESS_BIGGER).
    Conflict between rule 22 and token SY_AND resolved as shift (SY_LESS < SY_AND).
    Conflict between rule 22 and token SY_OR resolved as shift (SY_LESS < SY_OR).
    Conflict between rule 22 and token SY_ASSIGN resolved as shift (SY_LESS < SY_ASSIGN).
    Conflict between rule 22 and token SY_NOT resolved as shift (SY_LESS < SY_NOT).


State 130

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   23           | expression SY_GREATER expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_COMMA, SY_RIGHT_BRACKET]
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 23 (binary_exp)

    Conflict between rule 23 and token SY_DASH resolved as reduce (SY_DASH < SY_GREATER).
    Conflict between rule 23 and token SY_PLUS resolved as reduce (SY_PLUS < SY_GREATER).
    Conflict between rule 23 and token SY_STAR resolved as reduce (SY_STAR < SY_GREATER).
    Conflict between rule 23 and token SY_SLASH resolved as reduce (SY_SLASH < SY_GREATER).
    Conflict between rule 23 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_GREATER).
    Conflict between rule 23 and token SY_LESS resolved as reduce (SY_LESS < SY_GREATER).
    Conflict between rule 23 and token SY_GREATER resolved as reduce (%left SY_GREATER).
    Conflict between rule 23 and token SY_LESS_EQUALS resolved as shift (SY_GREATER < SY_LESS_EQUALS).
    Conflict between rule 23 and token SY_GREATER_EQUALS resolved as shift (SY_GREATER < SY_GREATER_EQUALS).
    Conflict between rule 23 and token SY_LESS_BIGGER resolved as shift (SY_GREATER < SY_LESS_BIGGER).
    Conflict between rule 23 and token SY_AND resolved as shift (SY_GREATER < SY_AND).
    Conflict between rule 23 and token SY_OR resolved as shift (SY_GREATER < SY_OR).
    Conflict between rule 23 and token SY_ASSIGN resolved as shift (SY_GREATER < SY_ASSIGN).
    Conflict between rule 23 and token SY_NOT resolved as shift (SY_GREATER < SY_NOT).


State 131

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   24           | expression SY_LESS_EQUALS expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_COMMA, SY_RIGHT_BRACKET]
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 24 (binary_exp)

    Conflict between rule 24 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_LESS resolved as reduce (SY_LESS < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_GREATER resolved as reduce (SY_GREATER < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_LESS_EQUALS resolved as reduce (%left SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_GREATER_EQUALS resolved as shift (SY_LESS_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 24 and token SY_LESS_BIGGER resolved as shift (SY_LESS_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 24 and token SY_AND resolved as shift (SY_LESS_EQUALS < SY_AND).
    Conflict between rule 24 and token SY_OR resolved as shift (SY_LESS_EQUALS < SY_OR).
    Conflict between rule 24 and token SY_ASSIGN resolved as shift (SY_LESS_EQUALS < SY_ASSIGN).
    Conflict between rule 24 and token SY_NOT resolved as shift (SY_LESS_EQUALS < SY_NOT).


State 132

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   25           | expression SY_GREATER_EQUALS expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_COMMA, SY_RIGHT_BRACKET]
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_LESS_BIGGER  shift, and go to state 113
    SY_AND          shift, and go to state 114
    SY_OR           shift, and go to state 115
    SY_ASSIGN       shift, and go to state 116
    SY_NOT          shift, and go to state 117

    $default  reduce using rule 25 (binary_exp)

    Conflict between rule 25 and token SY_DASH resolved as reduce (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_PLUS resolved as reduce (SY_PLUS < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_STAR resolved as reduce (SY_STAR < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_SLASH resolved as reduce (SY_SLASH < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_LESS resolved as reduce (SY_LESS < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_GREATER resolved as reduce (SY_GREATER < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_GREATER_EQUALS resolved as reduce (%left SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_LESS_BIGGER resolved as shift (SY_GREATER_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 25 and token SY_AND resolved as shift (SY_GREATER_EQUALS < SY_AND).
    Conflict between rule 25 and token SY_OR resolved as shift (SY_GREATER_EQUALS < SY_OR).
    Conflict between rule 25 and token SY_ASSIGN resolved as shift (SY_GREATER_EQUALS < SY_ASSIGN).
    Conflict between rule 25 and token SY_NOT resolved as shift (SY_GREATER_EQUALS < SY_NOT).


State 133

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   26           | expression SY_LESS_BIGGER expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_COMMA, SY_RIGHT_BRACKET]
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_AND     shift, and go to state 114
    SY_OR      shift, and go to state 115
    SY_ASSIGN  shift, and go to state 116
    SY_NOT     shift, and go to state 117

    $default  reduce using rule 26 (binary_exp)

    Conflict between rule 26 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_LESS resolved as reduce (SY_LESS < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_GREATER resolved as reduce (SY_GREATER < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_LESS_BIGGER resolved as reduce (%left SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_AND resolved as shift (SY_LESS_BIGGER < SY_AND).
    Conflict between rule 26 and token SY_OR resolved as shift (SY_LESS_BIGGER < SY_OR).
    Conflict between rule 26 and token SY_ASSIGN resolved as shift (SY_LESS_BIGGER < SY_ASSIGN).
    Conflict between rule 26 and token SY_NOT resolved as shift (SY_LESS_BIGGER < SY_NOT).


State 134

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   27           | expression SY_AND expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_COMMA, SY_RIGHT_BRACKET]
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_OR      shift, and go to state 115
    SY_ASSIGN  shift, and go to state 116
    SY_NOT     shift, and go to state 117

    $default  reduce using rule 27 (binary_exp)

    Conflict between rule 27 and token SY_DASH resolved as reduce (SY_DASH < SY_AND).
    Conflict between rule 27 and token SY_PLUS resolved as reduce (SY_PLUS < SY_AND).
    Conflict between rule 27 and token SY_STAR resolved as reduce (SY_STAR < SY_AND).
    Conflict between rule 27 and token SY_SLASH resolved as reduce (SY_SLASH < SY_AND).
    Conflict between rule 27 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_AND).
    Conflict between rule 27 and token SY_LESS resolved as reduce (SY_LESS < SY_AND).
    Conflict between rule 27 and token SY_GREATER resolved as reduce (SY_GREATER < SY_AND).
    Conflict between rule 27 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_AND).
    Conflict between rule 27 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_AND).
    Conflict between rule 27 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_AND).
    Conflict between rule 27 and token SY_AND resolved as reduce (%left SY_AND).
    Conflict between rule 27 and token SY_OR resolved as shift (SY_AND < SY_OR).
    Conflict between rule 27 and token SY_ASSIGN resolved as shift (SY_AND < SY_ASSIGN).
    Conflict between rule 27 and token SY_NOT resolved as shift (SY_AND < SY_NOT).


State 135

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   28           | expression SY_OR expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_COMMA, SY_RIGHT_BRACKET]
   29           | expression . SY_ASSIGN expression

    SY_ASSIGN  shift, and go to state 116
    SY_NOT     shift, and go to state 117

    $default  reduce using rule 28 (binary_exp)

    Conflict between rule 28 and token SY_DASH resolved as reduce (SY_DASH < SY_OR).
    Conflict between rule 28 and token SY_PLUS resolved as reduce (SY_PLUS < SY_OR).
    Conflict between rule 28 and token SY_STAR resolved as reduce (SY_STAR < SY_OR).
    Conflict between rule 28 and token SY_SLASH resolved as reduce (SY_SLASH < SY_OR).
    Conflict between rule 28 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_OR).
    Conflict between rule 28 and token SY_LESS resolved as reduce (SY_LESS < SY_OR).
    Conflict between rule 28 and token SY_GREATER resolved as reduce (SY_GREATER < SY_OR).
    Conflict between rule 28 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_OR).
    Conflict between rule 28 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_OR).
    Conflict between rule 28 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_OR).
    Conflict between rule 28 and token SY_AND resolved as reduce (SY_AND < SY_OR).
    Conflict between rule 28 and token SY_OR resolved as reduce (%left SY_OR).
    Conflict between rule 28 and token SY_ASSIGN resolved as shift (SY_OR < SY_ASSIGN).
    Conflict between rule 28 and token SY_NOT resolved as shift (SY_OR < SY_NOT).


State 136

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   29           | expression SY_ASSIGN expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_COMMA, SY_RIGHT_BRACKET]

    SY_NOT  shift, and go to state 117

    $default  reduce using rule 29 (binary_exp)

    Conflict between rule 29 and token SY_DASH resolved as reduce (SY_DASH < SY_ASSIGN).
    Conflict between rule 29 and token SY_PLUS resolved as reduce (SY_PLUS < SY_ASSIGN).
    Conflict between rule 29 and token SY_STAR resolved as reduce (SY_STAR < SY_ASSIGN).
    Conflict between rule 29 and token SY_SLASH resolved as reduce (SY_SLASH < SY_ASSIGN).
    Conflict between rule 29 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_ASSIGN).
    Conflict between rule 29 and token SY_LESS resolved as reduce (SY_LESS < SY_ASSIGN).
    Conflict between rule 29 and token SY_GREATER resolved as reduce (SY_GREATER < SY_ASSIGN).
    Conflict between rule 29 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_ASSIGN).
    Conflict between rule 29 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_ASSIGN).
    Conflict between rule 29 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_ASSIGN).
    Conflict between rule 29 and token SY_AND resolved as reduce (SY_AND < SY_ASSIGN).
    Conflict between rule 29 and token SY_OR resolved as reduce (SY_OR < SY_ASSIGN).
    Conflict between rule 29 and token SY_ASSIGN resolved as reduce (%left SY_ASSIGN).
    Conflict between rule 29 and token SY_NOT resolved as shift (SY_ASSIGN < SY_NOT).


State 137

   68 args_decl_list: args_decl_list SY_COMMA IDENT SY_COLON advanced_data_type .

    $default  reduce using rule 68 (args_decl_list)


State 138

   71 procedure_body: var_decl subprogram . command
   72 command: . complex_cmd
   73 complex_cmd: . KW_BEGIN simple_cmd KW_END

    KW_BEGIN  shift, and go to state 139

    command      go to state 140
    complex_cmd  go to state 141


State 139

   73 complex_cmd: KW_BEGIN . simple_cmd KW_END
   74 simple_cmd: . SY_SEMICOLON
   75           | . IDENT SY_ASSIGN expression
   76           | . KW_RESULT SY_ASSIGN expression
   77           | . if_cmd
   78           | . for_cmd
   79           | . while_cmd
   80           | . IDENT SY_COLON complex_cmd
   81           | . KW_GOTO IDENT
   82           | . KW_RETURN
   83           | . IDENT SY_LEFT_BRACKET arglist
   84 while_cmd: . KW_WHILE expression KW_DO complex_cmd
   85          | . KW_REPEAT complex_cmd KW_UNTIL expression
   86 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO complex_cmd
   87        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO complex_cmd
   88 if_cmd: . KW_IF expression KW_THEN complex_cmd else_state

    IDENT         shift, and go to state 142
    KW_RESULT     shift, and go to state 143
    KW_GOTO       shift, and go to state 144
    KW_RETURN     shift, and go to state 145
    KW_IF         shift, and go to state 146
    KW_FOR        shift, and go to state 147
    KW_REPEAT     shift, and go to state 148
    KW_WHILE      shift, and go to state 149
    SY_SEMICOLON  shift, and go to state 150

    simple_cmd  go to state 151
    while_cmd   go to state 152
    for_cmd     go to state 153
    if_cmd      go to state 154


State 140

   71 procedure_body: var_decl subprogram command .

    $default  reduce using rule 71 (procedure_body)


State 141

   72 command: complex_cmd .

    $default  reduce using rule 72 (command)


State 142

   75 simple_cmd: IDENT . SY_ASSIGN expression
   80           | IDENT . SY_COLON complex_cmd
   83           | IDENT . SY_LEFT_BRACKET arglist

    SY_ASSIGN        shift, and go to state 155
    SY_COLON         shift, and go to state 156
    SY_LEFT_BRACKET  shift, and go to state 157


State 143

   76 simple_cmd: KW_RESULT . SY_ASSIGN expression

    SY_ASSIGN  shift, and go to state 158


State 144

   81 simple_cmd: KW_GOTO . IDENT

    IDENT  shift, and go to state 159


State 145

   82 simple_cmd: KW_RETURN .

    $default  reduce using rule 82 (simple_cmd)


State 146

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   88 if_cmd: KW_IF . expression KW_THEN complex_cmd else_state

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 160


State 147

   86 for_cmd: KW_FOR . IDENT SY_ASSIGN expression KW_TO expression KW_DO complex_cmd
   87        | KW_FOR . IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO complex_cmd

    IDENT  shift, and go to state 161


State 148

   73 complex_cmd: . KW_BEGIN simple_cmd KW_END
   85 while_cmd: KW_REPEAT . complex_cmd KW_UNTIL expression

    KW_BEGIN  shift, and go to state 139

    complex_cmd  go to state 162


State 149

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   84 while_cmd: KW_WHILE . expression KW_DO complex_cmd

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 163


State 150

   74 simple_cmd: SY_SEMICOLON .

    $default  reduce using rule 74 (simple_cmd)


State 151

   73 complex_cmd: KW_BEGIN simple_cmd . KW_END

    KW_END  shift, and go to state 164


State 152

   79 simple_cmd: while_cmd .

    $default  reduce using rule 79 (simple_cmd)


State 153

   78 simple_cmd: for_cmd .

    $default  reduce using rule 78 (simple_cmd)


State 154

   77 simple_cmd: if_cmd .

    $default  reduce using rule 77 (simple_cmd)


State 155

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   75 simple_cmd: IDENT SY_ASSIGN . expression

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 165


State 156

   73 complex_cmd: . KW_BEGIN simple_cmd KW_END
   80 simple_cmd: IDENT SY_COLON . complex_cmd

    KW_BEGIN  shift, and go to state 139

    complex_cmd  go to state 166


State 157

   12 arglist: . expression
   13        | . arglist SY_COMMA expression
   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   83 simple_cmd: IDENT SY_LEFT_BRACKET . arglist

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    arglist     go to state 167
    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 91


State 158

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   76 simple_cmd: KW_RESULT SY_ASSIGN . expression

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 168


State 159

   81 simple_cmd: KW_GOTO IDENT .

    $default  reduce using rule 81 (simple_cmd)


State 160

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   88 if_cmd: KW_IF expression . KW_THEN complex_cmd else_state

    KW_THEN            shift, and go to state 169
    SY_DASH            shift, and go to state 104
    SY_PLUS            shift, and go to state 105
    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117


State 161

   86 for_cmd: KW_FOR IDENT . SY_ASSIGN expression KW_TO expression KW_DO complex_cmd
   87        | KW_FOR IDENT . SY_ASSIGN expression KW_DOWNTO expression KW_DO complex_cmd

    SY_ASSIGN  shift, and go to state 170


State 162

   85 while_cmd: KW_REPEAT complex_cmd . KW_UNTIL expression

    KW_UNTIL  shift, and go to state 171


State 163

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   84 while_cmd: KW_WHILE expression . KW_DO complex_cmd

    KW_DO              shift, and go to state 172
    SY_DASH            shift, and go to state 104
    SY_PLUS            shift, and go to state 105
    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117


State 164

   73 complex_cmd: KW_BEGIN simple_cmd KW_END .

    $default  reduce using rule 73 (complex_cmd)


State 165

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   75 simple_cmd: IDENT SY_ASSIGN expression .  [KW_END]

    SY_DASH            shift, and go to state 104
    SY_PLUS            shift, and go to state 105
    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 75 (simple_cmd)


State 166

   80 simple_cmd: IDENT SY_COLON complex_cmd .

    $default  reduce using rule 80 (simple_cmd)


State 167

   13 arglist: arglist . SY_COMMA expression
   83 simple_cmd: IDENT SY_LEFT_BRACKET arglist .  [KW_END]

    SY_COMMA  shift, and go to state 103

    $default  reduce using rule 83 (simple_cmd)


State 168

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   76 simple_cmd: KW_RESULT SY_ASSIGN expression .  [KW_END]

    SY_DASH            shift, and go to state 104
    SY_PLUS            shift, and go to state 105
    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 76 (simple_cmd)


State 169

   73 complex_cmd: . KW_BEGIN simple_cmd KW_END
   88 if_cmd: KW_IF expression KW_THEN . complex_cmd else_state

    KW_BEGIN  shift, and go to state 139

    complex_cmd  go to state 173


State 170

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   86 for_cmd: KW_FOR IDENT SY_ASSIGN . expression KW_TO expression KW_DO complex_cmd
   87        | KW_FOR IDENT SY_ASSIGN . expression KW_DOWNTO expression KW_DO complex_cmd

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 174


State 171

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   85 while_cmd: KW_REPEAT complex_cmd KW_UNTIL . expression

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 175


State 172

   73 complex_cmd: . KW_BEGIN simple_cmd KW_END
   84 while_cmd: KW_WHILE expression KW_DO . complex_cmd

    KW_BEGIN  shift, and go to state 139

    complex_cmd  go to state 176


State 173

   88 if_cmd: KW_IF expression KW_THEN complex_cmd . else_state
   89 else_state: . %empty  [KW_END]
   90           | . KW_ELSE complex_cmd

    KW_ELSE  shift, and go to state 177

    $default  reduce using rule 89 (else_state)

    else_state  go to state 178


State 174

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   86 for_cmd: KW_FOR IDENT SY_ASSIGN expression . KW_TO expression KW_DO complex_cmd
   87        | KW_FOR IDENT SY_ASSIGN expression . KW_DOWNTO expression KW_DO complex_cmd

    KW_TO              shift, and go to state 179
    KW_DOWNTO          shift, and go to state 180
    SY_DASH            shift, and go to state 104
    SY_PLUS            shift, and go to state 105
    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117


State 175

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   85 while_cmd: KW_REPEAT complex_cmd KW_UNTIL expression .  [KW_END]

    SY_DASH            shift, and go to state 104
    SY_PLUS            shift, and go to state 105
    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117

    $default  reduce using rule 85 (while_cmd)


State 176

   84 while_cmd: KW_WHILE expression KW_DO complex_cmd .

    $default  reduce using rule 84 (while_cmd)


State 177

   73 complex_cmd: . KW_BEGIN simple_cmd KW_END
   90 else_state: KW_ELSE . complex_cmd

    KW_BEGIN  shift, and go to state 139

    complex_cmd  go to state 181


State 178

   88 if_cmd: KW_IF expression KW_THEN complex_cmd else_state .

    $default  reduce using rule 88 (if_cmd)


State 179

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   86 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO . expression KW_DO complex_cmd

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 182


State 180

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   87 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO . expression KW_DO complex_cmd

    IDENT            shift, and go to state 80
    POSINT           shift, and go to state 81
    REAL             shift, and go to state 82
    STRING           shift, and go to state 83
    SY_DASH          shift, and go to state 84
    SY_NOT           shift, and go to state 85
    SY_LEFT_BRACKET  shift, and go to state 86

    unary_exp   go to state 89
    binary_exp  go to state 90
    expression  go to state 183


State 181

   90 else_state: KW_ELSE complex_cmd .

    $default  reduce using rule 90 (else_state)


State 182

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   86 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression . KW_DO complex_cmd

    KW_DO              shift, and go to state 184
    SY_DASH            shift, and go to state 104
    SY_PLUS            shift, and go to state 105
    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117


State 183

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   87 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression . KW_DO complex_cmd

    KW_DO              shift, and go to state 185
    SY_DASH            shift, and go to state 104
    SY_PLUS            shift, and go to state 105
    SY_STAR            shift, and go to state 106
    SY_SLASH           shift, and go to state 107
    SY_EQUALS          shift, and go to state 108
    SY_LESS            shift, and go to state 109
    SY_GREATER         shift, and go to state 110
    SY_LESS_EQUALS     shift, and go to state 111
    SY_GREATER_EQUALS  shift, and go to state 112
    SY_LESS_BIGGER     shift, and go to state 113
    SY_AND             shift, and go to state 114
    SY_OR              shift, and go to state 115
    SY_ASSIGN          shift, and go to state 116
    SY_NOT             shift, and go to state 117


State 184

   73 complex_cmd: . KW_BEGIN simple_cmd KW_END
   86 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO . complex_cmd

    KW_BEGIN  shift, and go to state 139

    complex_cmd  go to state 186


State 185

   73 complex_cmd: . KW_BEGIN simple_cmd KW_END
   87 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO . complex_cmd

    KW_BEGIN  shift, and go to state 139

    complex_cmd  go to state 187


State 186

   86 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO complex_cmd .

    $default  reduce using rule 86 (for_cmd)


State 187

   87 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO complex_cmd .

    $default  reduce using rule 87 (for_cmd)
