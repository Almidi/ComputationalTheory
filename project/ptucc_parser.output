Nonterminals useless in grammar

   else_state


Terminals unused in grammar

   CAST
   KW_NOT
   KW_OR


<<<<<<< HEAD
State 119 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: program_decl type_def var_decl subprogram_list complex_cmd SY_PERIOD

    2 program_decl: KW_PROGRAM IDENT SY_SEMICOLON

    3 arguments: %empty
    4          | arglist

    5 arglist: expression
    6        | arglist SY_COMMA expression

    7 unary_exp: SY_DASH expression
    8          | SY_NOT expression
    9          | expression SY_NOT

   10 binary_exp: expression SY_DASH expression
   11           | expression SY_PLUS expression
   12           | expression SY_STAR expression
   13           | expression SY_SLASH expression
   14           | expression SY_EQUALS expression
   15           | expression SY_LESS expression
   16           | expression SY_GREATER expression
   17           | expression SY_LESS_EQUALS expression
   18           | expression SY_GREATER_EQUALS expression
   19           | expression SY_LESS_BIGGER expression
   20           | expression SY_AND expression
   21           | expression SY_OR expression
   22           | expression SY_ASSIGN expression

   23 expression: POSINT
   24           | REAL
   25           | STRING
   26           | IDENT
   27           | KW_RESULT
   28           | SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | unary_exp
   30           | binary_exp
   31           | proc_call
   32           | SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET

   33 type_def: %empty
   34         | KW_TYPE type_list

   35 type_list: shortcut_data_type
   36          | type_list shortcut_data_type

   37 shortcut_data_type: IDENT SY_EQUALS advanced_data_type SY_SEMICOLON

   38 advanced_data_type: simple_data_type
   39                   | KW_ARRAY KW_OF simple_data_type
   40                   | KW_ARRAY matrix_n KW_OF simple_data_type
   41                   | KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type

   42 matrix_n: SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   43         | matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

   44 simple_data_type: KW_INTEGER
   45                 | KW_CHAR
   46                 | KW_BOOLEAN
   47                 | KW_REAL
   48                 | IDENT

   49 var_decl: %empty
   50         | KW_VAR var_decl_list

   51 var_decl_list: var_decl1 var_decl2 var_decl3
   52              | var_decl_list var_decl1 var_decl2 var_decl3

   53 var_decl1: IDENT
   54          | var_decl1 SY_COMMA IDENT

   55 var_decl2: SY_COLON
   56          | SY_COLON KW_ARRAY matrix_n KW_OF
   57          | SY_COLON KW_ARRAY KW_OF

   58 var_decl3: simple_data_type SY_SEMICOLON
=======
Rules useless in parser due to conflicts

   98 if_cmd: KW_ELSE KW_IF expression KW_THEN all_commands


State 185 conflicts: 3 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: program_decl type_def var_decl subprogram_list complex_cmd SY_PERIOD

    2 program_decl: KW_PROGRAM IDENT SY_SEMICOLON

    3 arguments: %empty
    4          | arglist

    5 arglist: expression
    6        | arglist SY_COMMA expression

    7 unary_exp: SY_DASH expression
    8          | SY_NOT expression
    9          | expression SY_NOT

   10 binary_exp: expression SY_DASH expression
   11           | expression SY_PLUS expression
   12           | expression SY_STAR expression
   13           | expression SY_SLASH expression
   14           | expression SY_EQUALS expression
   15           | expression SY_LESS expression
   16           | expression SY_GREATER expression
   17           | expression SY_LESS_EQUALS expression
   18           | expression SY_GREATER_EQUALS expression
   19           | expression SY_LESS_BIGGER expression
   20           | expression SY_AND expression
   21           | expression KW_AND expression
   22           | expression SY_OR expression
   23           | expression SY_ASSIGN expression
   24           | expression KW_MOD expression
   25           | expression KW_DIV expression

   26 expression: POSINT
   27           | REAL
   28           | STRING
   29           | BOOL
   30           | IDENT
   31           | KW_RESULT
   32           | SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | unary_exp
   34           | binary_exp
   35           | proc_call

   36 type_def: %empty
   37         | KW_TYPE type_list

   38 type_list: shortcut_data_type
   39          | type_list shortcut_data_type

   40 shortcut_data_type: IDENT SY_EQUALS advanced_data_type SY_SEMICOLON

   41 advanced_data_type: simple_data_type
   42                   | KW_ARRAY KW_OF simple_data_type
   43                   | KW_ARRAY matrix_n KW_OF simple_data_type
   44                   | KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type

   45 matrix_n: SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   46         | matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

   47 simple_data_type: KW_INTEGER
   48                 | KW_CHAR
   49                 | KW_BOOLEAN
   50                 | KW_REAL
   51                 | IDENT
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

   59 subprogram: procedure_header
   60           | function_header

   61 subprogram_list: %empty
   62                | subprogram_list subprogram

   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

   65 args_decl: %empty
   66          | args_decl_list

<<<<<<< HEAD
   67 args_decl_list: IDENT SY_COLON advanced_data_type
   68               | args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type

   69 return_type: %empty
   70            | SY_COLON advanced_data_type

   71 procedure_body: var_decl subprogram_list complex_cmd SY_SEMICOLON

   72 function_body: var_decl subprogram_list complex_cmd SY_SEMICOLON

   73 all_commands: complex_cmd
   74             | simple_cmd

   75 complex_cmd: KW_BEGIN cmd_list KW_END

   76 cmd_list: %empty
   77         | simple_cmd
   78         | cmd_list SY_SEMICOLON simple_cmd

   79 simple_cmd: IDENT SY_ASSIGN expression
   80           | KW_RESULT SY_ASSIGN expression
   81           | for_cmd
   82           | while_cmd
   83           | IDENT SY_COLON all_commands
   84           | KW_GOTO IDENT
   85           | KW_RETURN
   86           | IDENT SY_LEFT_BRACKET arglist
   87           | proc_call

   88 proc_call: IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

   89 while_cmd: KW_WHILE expression KW_DO all_commands
   90          | KW_REPEAT all_commands KW_UNTIL expression

   91 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   92        | KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
=======
   62 subprogram: procedure_header
   63           | function_header

   64 subprogram_list: %empty
   65                | subprogram_list subprogram

   66 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

   68 args_decl: %empty
   69          | args_decl_list

   70 args_decl_list: IDENT SY_COLON advanced_data_type
   71               | args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type

   72 return_type: %empty
   73            | SY_COLON advanced_data_type

   74 procedure_body: var_decl subprogram_list complex_cmd SY_SEMICOLON

   75 function_body: var_decl subprogram_list complex_cmd SY_SEMICOLON

   76 all_commands: complex_cmd
   77             | simple_cmd

   78 complex_cmd: KW_BEGIN cmd_list KW_END

   79 cmd_list: %empty
   80         | simple_cmd
   81         | cmd_list SY_SEMICOLON simple_cmd

   82 simple_cmd: IDENT SY_ASSIGN expression
   83           | KW_RESULT SY_ASSIGN expression
   84           | if_cmd
   85           | for_cmd
   86           | while_cmd
   87           | IDENT SY_COLON all_commands
   88           | KW_GOTO IDENT
   89           | KW_RETURN
   90           | IDENT SY_LEFT_BRACKET arglist
   91           | proc_call

   92 proc_call: IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

   93 while_cmd: KW_WHILE expression KW_DO all_commands
   94          | KW_REPEAT all_commands KW_UNTIL expression

   95 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   96        | KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

   97 if_cmd: KW_IF expression KW_THEN all_commands
   98       | KW_ELSE KW_IF expression KW_THEN all_commands
   99       | KW_ELSE all_commands
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


Terminals, with rules where they appear

$end (0) 0
error (256)
<<<<<<< HEAD
IDENT (258) 2 26 37 48 53 54 63 64 67 68 79 83 84 86 88 91 92
POSINT (259) 23 42 43
REAL (260) 24
STRING (261) 25
=======
IDENT (258) 2 30 40 51 56 57 66 67 70 71 82 87 88 90 92 95 96
POSINT (259) 26 45 46
REAL (260) 27
STRING (261) 28
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
CAST (262)
BOOL (263) 29
KW_PROGRAM (264) 2
<<<<<<< HEAD
KW_BEGIN (265) 75
KW_END (266) 75
KW_AND (267)
KW_DIV (268)
KW_FUNCTION (269) 41 64
KW_MOD (270)
KW_PROCEDURE (271) 63
KW_RESULT (272) 27 80
KW_ARRAY (273) 39 40 56 57
KW_DO (274) 89 91 92
KW_GOTO (275) 84
KW_NOT (276)
KW_RETURN (277) 85
KW_BOOLEAN (278) 46
KW_ELSE (279)
KW_IF (280)
KW_OF (281) 39 40 56 57
KW_REAL (282) 47
KW_THEN (283)
KW_CHAR (284) 45
KW_FOR (285) 91 92
KW_INTEGER (286) 44
KW_OR (287)
KW_REPEAT (288) 90
KW_UNTIL (289) 90
KW_VAR (290) 50
KW_WHILE (291) 89
KW_TO (292) 91
KW_DOWNTO (293) 92
KW_TYPE (294) 34
=======
KW_BEGIN (265) 78
KW_END (266) 78
KW_AND (267) 21
KW_DIV (268) 25
KW_FUNCTION (269) 44 67
KW_MOD (270) 24
KW_PROCEDURE (271) 66
KW_RESULT (272) 31 83
KW_ARRAY (273) 42 43 59 60
KW_DO (274) 93 95 96
KW_GOTO (275) 88
KW_NOT (276)
KW_RETURN (277) 89
KW_BOOLEAN (278) 49
KW_ELSE (279) 98 99
KW_IF (280) 97 98
KW_OF (281) 42 43 59 60
KW_REAL (282) 50
KW_THEN (283) 97 98
KW_CHAR (284) 48
KW_FOR (285) 95 96
KW_INTEGER (286) 47
KW_OR (287)
KW_REPEAT (288) 94
KW_UNTIL (289) 94
KW_VAR (290) 53
KW_WHILE (291) 93
KW_TO (292) 95
KW_DOWNTO (293) 96
KW_TYPE (294) 37
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
SY_DASH (295) 7 10
SY_PLUS (296) 11
SY_STAR (297) 12
SY_SLASH (298) 13
<<<<<<< HEAD
SY_EQUALS (299) 14 37
=======
SY_EQUALS (299) 14 40
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
SY_LESS (300) 15
SY_GREATER (301) 16
SY_LESS_EQUALS (302) 17
SY_GREATER_EQUALS (303) 18
SY_LESS_BIGGER (304) 19
SY_AND (305) 20
<<<<<<< HEAD
SY_OR (306) 21
SY_ASSIGN (307) 22 79 80 91 92
SY_NOT (308) 8 9
SY_COMMA (309) 6 54
SY_LEFT_SQR_BRACKET (310) 42 43
SY_RIGHT_SQR_BRACKET (311) 42 43
SY_COLON (312) 55 56 57 67 68 70 83
SY_SEMICOLON (313) 2 37 58 63 64 68 71 72 78
SY_PERIOD (314) 1
SY_LEFT_BRACKET (315) 28 32 41 63 64 86 88
SY_RIGHT_BRACKET (316) 28 32 41 63 64 88
=======
SY_OR (306) 22
SY_ASSIGN (307) 23 82 83 95 96
SY_NOT (308) 8 9
SY_COMMA (309) 6 57
SY_LEFT_SQR_BRACKET (310) 45 46
SY_RIGHT_SQR_BRACKET (311) 45 46
SY_COLON (312) 58 59 60 70 71 73 87
SY_SEMICOLON (313) 2 40 61 66 67 71 74 75 81
SY_PERIOD (314) 1
SY_LEFT_BRACKET (315) 32 44 66 67 90 92
SY_RIGHT_BRACKET (316) 32 44 66 67 92
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
program (63)
    on left: 1, on right: 0
program_decl (64)
    on left: 2, on right: 1
arguments (65)
<<<<<<< HEAD
    on left: 3 4, on right: 88
arglist (66)
    on left: 5 6, on right: 4 6 86
unary_exp (67)
    on left: 7 8 9, on right: 29
binary_exp (68)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22, on right: 30
expression (69)
    on left: 23 24 25 26 27 28 29 30 31 32, on right: 5 6 7 8 9 10
    11 12 13 14 15 16 17 18 19 20 21 22 28 79 80 89 90 91 92
type_def (70)
    on left: 33 34, on right: 1
type_list (71)
    on left: 35 36, on right: 34 36
shortcut_data_type (72)
    on left: 37, on right: 35 36
advanced_data_type (73)
    on left: 38 39 40 41, on right: 37 67 68 70
matrix_n (74)
    on left: 42 43, on right: 40 43 56
simple_data_type (75)
    on left: 44 45 46 47 48, on right: 32 38 39 40 58
var_decl (76)
    on left: 49 50, on right: 1 71 72
var_decl_list (77)
    on left: 51 52, on right: 50 52
var_decl1 (78)
    on left: 53 54, on right: 51 52 54
var_decl2 (79)
    on left: 55 56 57, on right: 51 52
var_decl3 (80)
    on left: 58, on right: 51 52
subprogram (81)
    on left: 59 60, on right: 62
subprogram_list (82)
    on left: 61 62, on right: 1 62 71 72
procedure_header (83)
    on left: 63, on right: 59
function_header (84)
    on left: 64, on right: 60
args_decl (85)
    on left: 65 66, on right: 41 63 64
args_decl_list (86)
    on left: 67 68, on right: 66 68
return_type (87)
    on left: 69 70, on right: 41 64
procedure_body (88)
    on left: 71, on right: 63
function_body (89)
    on left: 72, on right: 64
all_commands (90)
    on left: 73 74, on right: 83 89 90 91 92
complex_cmd (91)
    on left: 75, on right: 1 71 72 73
cmd_list (92)
    on left: 76 77 78, on right: 75 78
simple_cmd (93)
    on left: 79 80 81 82 83 84 85 86 87, on right: 74 77 78
proc_call (94)
    on left: 88, on right: 31 87
while_cmd (95)
    on left: 89 90, on right: 82
for_cmd (96)
    on left: 91 92, on right: 81
=======
    on left: 3 4, on right: 92
arglist (66)
    on left: 5 6, on right: 4 6 90
unary_exp (67)
    on left: 7 8 9, on right: 33
binary_exp (68)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25, on right:
    34
expression (69)
    on left: 26 27 28 29 30 31 32 33 34 35, on right: 5 6 7 8 9 10
    11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 32 82 83 93 94 95
    96 97 98
type_def (70)
    on left: 36 37, on right: 1
type_list (71)
    on left: 38 39, on right: 37 39
shortcut_data_type (72)
    on left: 40, on right: 38 39
advanced_data_type (73)
    on left: 41 42 43 44, on right: 40 70 71 73
matrix_n (74)
    on left: 45 46, on right: 43 46 59
simple_data_type (75)
    on left: 47 48 49 50 51, on right: 41 42 43 61
var_decl (76)
    on left: 52 53, on right: 1 74 75
var_decl_list (77)
    on left: 54 55, on right: 53 55
var_decl1 (78)
    on left: 56 57, on right: 54 55 57
var_decl2 (79)
    on left: 58 59 60, on right: 54 55
var_decl3 (80)
    on left: 61, on right: 54 55
subprogram (81)
    on left: 62 63, on right: 65
subprogram_list (82)
    on left: 64 65, on right: 1 65 74 75
procedure_header (83)
    on left: 66, on right: 62
function_header (84)
    on left: 67, on right: 63
args_decl (85)
    on left: 68 69, on right: 44 66 67
args_decl_list (86)
    on left: 70 71, on right: 69 71
return_type (87)
    on left: 72 73, on right: 44 67
procedure_body (88)
    on left: 74, on right: 66
function_body (89)
    on left: 75, on right: 67
all_commands (90)
    on left: 76 77, on right: 87 93 94 95 96 97 98 99
complex_cmd (91)
    on left: 78, on right: 1 74 75 76
cmd_list (92)
    on left: 79 80 81, on right: 78 81
simple_cmd (93)
    on left: 82 83 84 85 86 87 88 89 90 91, on right: 77 80 81
proc_call (94)
    on left: 92, on right: 35 91
while_cmd (95)
    on left: 93 94, on right: 86
for_cmd (96)
    on left: 95 96, on right: 85
if_cmd (97)
    on left: 97 98 99, on right: 84
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 0

    0 $accept: . program $end
    1 program: . program_decl type_def var_decl subprogram_list complex_cmd SY_PERIOD
    2 program_decl: . KW_PROGRAM IDENT SY_SEMICOLON

    KW_PROGRAM  shift, and go to state 1

    program       go to state 2
    program_decl  go to state 3


State 1

    2 program_decl: KW_PROGRAM . IDENT SY_SEMICOLON

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: program_decl . type_def var_decl subprogram_list complex_cmd SY_PERIOD
<<<<<<< HEAD
   33 type_def: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   34         | . KW_TYPE type_list

    KW_TYPE  shift, and go to state 6

    $default  reduce using rule 33 (type_def)
=======
   36 type_def: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   37         | . KW_TYPE type_list

    KW_TYPE  shift, and go to state 6

    $default  reduce using rule 36 (type_def)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    type_def  go to state 7


State 4

    2 program_decl: KW_PROGRAM IDENT . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 8


State 5

    0 $accept: program $end .

    $default  accept


State 6

<<<<<<< HEAD
   34 type_def: KW_TYPE . type_list
   35 type_list: . shortcut_data_type
   36          | . type_list shortcut_data_type
   37 shortcut_data_type: . IDENT SY_EQUALS advanced_data_type SY_SEMICOLON
=======
   37 type_def: KW_TYPE . type_list
   38 type_list: . shortcut_data_type
   39          | . type_list shortcut_data_type
   40 shortcut_data_type: . IDENT SY_EQUALS advanced_data_type SY_SEMICOLON
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    IDENT  shift, and go to state 9

    type_list           go to state 10
    shortcut_data_type  go to state 11


State 7

    1 program: program_decl type_def . var_decl subprogram_list complex_cmd SY_PERIOD
<<<<<<< HEAD
   49 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   50         | . KW_VAR var_decl_list
=======
   52 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   53         | . KW_VAR var_decl_list
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    KW_VAR  shift, and go to state 12

    $default  reduce using rule 49 (var_decl)

    var_decl  go to state 13


State 8

    2 program_decl: KW_PROGRAM IDENT SY_SEMICOLON .

    $default  reduce using rule 2 (program_decl)


State 9

<<<<<<< HEAD
   37 shortcut_data_type: IDENT . SY_EQUALS advanced_data_type SY_SEMICOLON
=======
   40 shortcut_data_type: IDENT . SY_EQUALS advanced_data_type SY_SEMICOLON
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    SY_EQUALS  shift, and go to state 14


State 10

<<<<<<< HEAD
   34 type_def: KW_TYPE type_list .  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   36 type_list: type_list . shortcut_data_type
   37 shortcut_data_type: . IDENT SY_EQUALS advanced_data_type SY_SEMICOLON

    IDENT  shift, and go to state 9

    $default  reduce using rule 34 (type_def)
=======
   37 type_def: KW_TYPE type_list .  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   39 type_list: type_list . shortcut_data_type
   40 shortcut_data_type: . IDENT SY_EQUALS advanced_data_type SY_SEMICOLON

    IDENT  shift, and go to state 9

    $default  reduce using rule 37 (type_def)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    shortcut_data_type  go to state 15


State 11

<<<<<<< HEAD
   35 type_list: shortcut_data_type .

    $default  reduce using rule 35 (type_list)
=======
   38 type_list: shortcut_data_type .

    $default  reduce using rule 38 (type_list)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 12

   50 var_decl: KW_VAR . var_decl_list
   51 var_decl_list: . var_decl1 var_decl2 var_decl3
   52              | . var_decl_list var_decl1 var_decl2 var_decl3
   53 var_decl1: . IDENT
   54          | . var_decl1 SY_COMMA IDENT

    IDENT  shift, and go to state 16

    var_decl_list  go to state 17
    var_decl1      go to state 18


State 13

    1 program: program_decl type_def var_decl . subprogram_list complex_cmd SY_PERIOD
<<<<<<< HEAD
   61 subprogram_list: . %empty
   62                | . subprogram_list subprogram

    $default  reduce using rule 61 (subprogram_list)

=======
   64 subprogram_list: . %empty
   65                | . subprogram_list subprogram

    $default  reduce using rule 64 (subprogram_list)

>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
    subprogram_list  go to state 19


State 14

<<<<<<< HEAD
   37 shortcut_data_type: IDENT SY_EQUALS . advanced_data_type SY_SEMICOLON
   38 advanced_data_type: . simple_data_type
   39                   | . KW_ARRAY KW_OF simple_data_type
   40                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   41                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . IDENT
=======
   40 shortcut_data_type: IDENT SY_EQUALS . advanced_data_type SY_SEMICOLON
   41 advanced_data_type: . simple_data_type
   42                   | . KW_ARRAY KW_OF simple_data_type
   43                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   44                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL
   51                 | . IDENT
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    IDENT        shift, and go to state 20
    KW_FUNCTION  shift, and go to state 21
    KW_ARRAY     shift, and go to state 22
    KW_BOOLEAN   shift, and go to state 23
    KW_REAL      shift, and go to state 24
    KW_CHAR      shift, and go to state 25
    KW_INTEGER   shift, and go to state 26

    advanced_data_type  go to state 27
    simple_data_type    go to state 28


State 15

<<<<<<< HEAD
   36 type_list: type_list shortcut_data_type .

    $default  reduce using rule 36 (type_list)
=======
   39 type_list: type_list shortcut_data_type .

    $default  reduce using rule 39 (type_list)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 16

   53 var_decl1: IDENT .

    $default  reduce using rule 53 (var_decl1)


State 17

<<<<<<< HEAD
   50 var_decl: KW_VAR var_decl_list .  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   52 var_decl_list: var_decl_list . var_decl1 var_decl2 var_decl3
   53 var_decl1: . IDENT
   54          | . var_decl1 SY_COMMA IDENT

    IDENT  shift, and go to state 16

    $default  reduce using rule 50 (var_decl)
=======
   53 var_decl: KW_VAR var_decl_list .  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   55 var_decl_list: var_decl_list . var_decl1 var_decl2 var_decl3
   56 var_decl1: . IDENT
   57          | . var_decl1 SY_COMMA IDENT

    IDENT  shift, and go to state 16

    $default  reduce using rule 53 (var_decl)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    var_decl1  go to state 29


State 18

   51 var_decl_list: var_decl1 . var_decl2 var_decl3
   54 var_decl1: var_decl1 . SY_COMMA IDENT
   55 var_decl2: . SY_COLON
   56          | . SY_COLON KW_ARRAY matrix_n KW_OF
   57          | . SY_COLON KW_ARRAY KW_OF

    SY_COMMA  shift, and go to state 30
    SY_COLON  shift, and go to state 31

    var_decl2  go to state 32


State 19

    1 program: program_decl type_def var_decl subprogram_list . complex_cmd SY_PERIOD
<<<<<<< HEAD
   59 subprogram: . procedure_header
   60           | . function_header
   62 subprogram_list: subprogram_list . subprogram
   63 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   64 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   75 complex_cmd: . KW_BEGIN cmd_list KW_END

    KW_BEGIN      shift, and go to state 33
    KW_FUNCTION   shift, and go to state 34
    KW_PROCEDURE  shift, and go to state 35

=======
   62 subprogram: . procedure_header
   63           | . function_header
   65 subprogram_list: subprogram_list . subprogram
   66 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   67 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   78 complex_cmd: . KW_BEGIN cmd_list KW_END

    KW_BEGIN      shift, and go to state 33
    KW_FUNCTION   shift, and go to state 34
    KW_PROCEDURE  shift, and go to state 35

>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
    subprogram        go to state 36
    procedure_header  go to state 37
    function_header   go to state 38
    complex_cmd       go to state 39


State 20

<<<<<<< HEAD
   48 simple_data_type: IDENT .

    $default  reduce using rule 48 (simple_data_type)
=======
   51 simple_data_type: IDENT .

    $default  reduce using rule 51 (simple_data_type)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 21

<<<<<<< HEAD
   41 advanced_data_type: KW_FUNCTION . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
=======
   44 advanced_data_type: KW_FUNCTION . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    SY_LEFT_BRACKET  shift, and go to state 40


State 22

<<<<<<< HEAD
   39 advanced_data_type: KW_ARRAY . KW_OF simple_data_type
   40                   | KW_ARRAY . matrix_n KW_OF simple_data_type
   42 matrix_n: . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   43         | . matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
=======
   42 advanced_data_type: KW_ARRAY . KW_OF simple_data_type
   43                   | KW_ARRAY . matrix_n KW_OF simple_data_type
   45 matrix_n: . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   46         | . matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    KW_OF                shift, and go to state 41
    SY_LEFT_SQR_BRACKET  shift, and go to state 42

    matrix_n  go to state 43


State 23

<<<<<<< HEAD
   46 simple_data_type: KW_BOOLEAN .

    $default  reduce using rule 46 (simple_data_type)
=======
   49 simple_data_type: KW_BOOLEAN .

    $default  reduce using rule 49 (simple_data_type)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 24

<<<<<<< HEAD
   47 simple_data_type: KW_REAL .

    $default  reduce using rule 47 (simple_data_type)
=======
   50 simple_data_type: KW_REAL .

    $default  reduce using rule 50 (simple_data_type)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 25

<<<<<<< HEAD
   45 simple_data_type: KW_CHAR .

    $default  reduce using rule 45 (simple_data_type)
=======
   48 simple_data_type: KW_CHAR .

    $default  reduce using rule 48 (simple_data_type)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 26

<<<<<<< HEAD
   44 simple_data_type: KW_INTEGER .

    $default  reduce using rule 44 (simple_data_type)
=======
   47 simple_data_type: KW_INTEGER .

    $default  reduce using rule 47 (simple_data_type)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 27

<<<<<<< HEAD
   37 shortcut_data_type: IDENT SY_EQUALS advanced_data_type . SY_SEMICOLON
=======
   40 shortcut_data_type: IDENT SY_EQUALS advanced_data_type . SY_SEMICOLON
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    SY_SEMICOLON  shift, and go to state 44


State 28

<<<<<<< HEAD
   38 advanced_data_type: simple_data_type .

    $default  reduce using rule 38 (advanced_data_type)
=======
   41 advanced_data_type: simple_data_type .

    $default  reduce using rule 41 (advanced_data_type)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 29

<<<<<<< HEAD
   52 var_decl_list: var_decl_list var_decl1 . var_decl2 var_decl3
   54 var_decl1: var_decl1 . SY_COMMA IDENT
   55 var_decl2: . SY_COLON
   56          | . SY_COLON KW_ARRAY matrix_n KW_OF
   57          | . SY_COLON KW_ARRAY KW_OF

    SY_COMMA  shift, and go to state 30
    SY_COLON  shift, and go to state 31

    var_decl2  go to state 45


State 30

   54 var_decl1: var_decl1 SY_COMMA . IDENT

    IDENT  shift, and go to state 46


State 31

   55 var_decl2: SY_COLON .  [IDENT, KW_BOOLEAN, KW_REAL, KW_CHAR, KW_INTEGER]
   56          | SY_COLON . KW_ARRAY matrix_n KW_OF
   57          | SY_COLON . KW_ARRAY KW_OF

    KW_ARRAY  shift, and go to state 47

    $default  reduce using rule 55 (var_decl2)


State 32

   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . IDENT
   51 var_decl_list: var_decl1 var_decl2 . var_decl3
   58 var_decl3: . simple_data_type SY_SEMICOLON

    IDENT       shift, and go to state 20
    KW_BOOLEAN  shift, and go to state 23
    KW_REAL     shift, and go to state 24
    KW_CHAR     shift, and go to state 25
    KW_INTEGER  shift, and go to state 26
=======
   55 var_decl_list: var_decl_list var_decl1 . var_decl2 var_decl3
   57 var_decl1: var_decl1 . SY_COMMA IDENT
   58 var_decl2: . SY_COLON
   59          | . SY_COLON KW_ARRAY matrix_n KW_OF
   60          | . SY_COLON KW_ARRAY KW_OF

    SY_COMMA  shift, and go to state 30
    SY_COLON  shift, and go to state 31
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    simple_data_type  go to state 48
    var_decl3         go to state 49


State 30

   75 complex_cmd: KW_BEGIN . cmd_list KW_END
   76 cmd_list: . %empty  [KW_END, SY_SEMICOLON]
   77         | . simple_cmd
   78         | . cmd_list SY_SEMICOLON simple_cmd
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . for_cmd
   82           | . while_cmd
   83           | . IDENT SY_COLON all_commands
   84           | . KW_GOTO IDENT
   85           | . KW_RETURN
   86           | . IDENT SY_LEFT_BRACKET arglist
   87           | . proc_call
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   89 while_cmd: . KW_WHILE expression KW_DO all_commands
   90          | . KW_REPEAT all_commands KW_UNTIL expression
   91 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   92        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

    IDENT      shift, and go to state 50
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_FOR     shift, and go to state 54
    KW_REPEAT  shift, and go to state 55
    KW_WHILE   shift, and go to state 56

    $default  reduce using rule 76 (cmd_list)

    cmd_list    go to state 57
    simple_cmd  go to state 58
    proc_call   go to state 59
    while_cmd   go to state 60
    for_cmd     go to state 61


State 31

<<<<<<< HEAD
   64 function_header: KW_FUNCTION . IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
=======
   58 var_decl2: SY_COLON .  [IDENT, KW_BOOLEAN, KW_REAL, KW_CHAR, KW_INTEGER]
   59          | SY_COLON . KW_ARRAY matrix_n KW_OF
   60          | SY_COLON . KW_ARRAY KW_OF
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    IDENT  shift, and go to state 62


State 32

<<<<<<< HEAD
   63 procedure_header: KW_PROCEDURE . IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
=======
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL
   51                 | . IDENT
   54 var_decl_list: var_decl1 var_decl2 . var_decl3
   61 var_decl3: . simple_data_type SY_SEMICOLON

    IDENT       shift, and go to state 20
    KW_BOOLEAN  shift, and go to state 23
    KW_REAL     shift, and go to state 24
    KW_CHAR     shift, and go to state 25
    KW_INTEGER  shift, and go to state 26
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    IDENT  shift, and go to state 63


State 33

   78 complex_cmd: KW_BEGIN . cmd_list KW_END
   79 cmd_list: . %empty  [KW_END, SY_SEMICOLON]
   80         | . simple_cmd
   81         | . cmd_list SY_SEMICOLON simple_cmd
   82 simple_cmd: . IDENT SY_ASSIGN expression
   83           | . KW_RESULT SY_ASSIGN expression
   84           | . if_cmd
   85           | . for_cmd
   86           | . while_cmd
   87           | . IDENT SY_COLON all_commands
   88           | . KW_GOTO IDENT
   89           | . KW_RETURN
   90           | . IDENT SY_LEFT_BRACKET arglist
   91           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   93 while_cmd: . KW_WHILE expression KW_DO all_commands
   94          | . KW_REPEAT all_commands KW_UNTIL expression
   95 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   96        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   97 if_cmd: . KW_IF expression KW_THEN all_commands
   98       | . KW_ELSE KW_IF expression KW_THEN all_commands
   99       | . KW_ELSE all_commands

    IDENT      shift, and go to state 50
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_ELSE    shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    $default  reduce using rule 79 (cmd_list)

    cmd_list    go to state 59
    simple_cmd  go to state 60
    proc_call   go to state 61
    while_cmd   go to state 62
    for_cmd     go to state 63
    if_cmd      go to state 64


State 34

   67 function_header: KW_FUNCTION . IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

    IDENT  shift, and go to state 65


State 35

   66 procedure_header: KW_PROCEDURE . IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    IDENT  shift, and go to state 66


State 36

<<<<<<< HEAD
   62 subprogram_list: subprogram_list subprogram .

    $default  reduce using rule 62 (subprogram_list)
=======
   65 subprogram_list: subprogram_list subprogram .

    $default  reduce using rule 65 (subprogram_list)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 37

<<<<<<< HEAD
   59 subprogram: procedure_header .

    $default  reduce using rule 59 (subprogram)
=======
   62 subprogram: procedure_header .

    $default  reduce using rule 62 (subprogram)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 38

<<<<<<< HEAD
   60 subprogram: function_header .

    $default  reduce using rule 60 (subprogram)
=======
   63 subprogram: function_header .

    $default  reduce using rule 63 (subprogram)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 39

    1 program: program_decl type_def var_decl subprogram_list complex_cmd . SY_PERIOD

<<<<<<< HEAD
    SY_PERIOD  shift, and go to state 64
=======
    SY_PERIOD  shift, and go to state 67
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 40

<<<<<<< HEAD
   41 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET return_type
   65 args_decl: . %empty  [SY_RIGHT_BRACKET]
   66          | . args_decl_list
   67 args_decl_list: . IDENT SY_COLON advanced_data_type
   68               | . args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 65

    $default  reduce using rule 65 (args_decl)

    args_decl       go to state 66
    args_decl_list  go to state 67
=======
   44 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET return_type
   68 args_decl: . %empty  [SY_RIGHT_BRACKET]
   69          | . args_decl_list
   70 args_decl_list: . IDENT SY_COLON advanced_data_type
   71               | . args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 68

    $default  reduce using rule 68 (args_decl)

    args_decl       go to state 69
    args_decl_list  go to state 70
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 41

<<<<<<< HEAD
   39 advanced_data_type: KW_ARRAY KW_OF . simple_data_type
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . IDENT
=======
   42 advanced_data_type: KW_ARRAY KW_OF . simple_data_type
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL
   51                 | . IDENT
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    IDENT       shift, and go to state 20
    KW_BOOLEAN  shift, and go to state 23
    KW_REAL     shift, and go to state 24
    KW_CHAR     shift, and go to state 25
    KW_INTEGER  shift, and go to state 26

<<<<<<< HEAD
    simple_data_type  go to state 68
=======
    simple_data_type  go to state 71
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 42

<<<<<<< HEAD
   42 matrix_n: SY_LEFT_SQR_BRACKET . POSINT SY_RIGHT_SQR_BRACKET

    POSINT  shift, and go to state 69
=======
   45 matrix_n: SY_LEFT_SQR_BRACKET . POSINT SY_RIGHT_SQR_BRACKET

    POSINT  shift, and go to state 72
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 43

<<<<<<< HEAD
   40 advanced_data_type: KW_ARRAY matrix_n . KW_OF simple_data_type
   43 matrix_n: matrix_n . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

    KW_OF                shift, and go to state 70
    SY_LEFT_SQR_BRACKET  shift, and go to state 71
=======
   43 advanced_data_type: KW_ARRAY matrix_n . KW_OF simple_data_type
   46 matrix_n: matrix_n . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

    KW_OF                shift, and go to state 73
    SY_LEFT_SQR_BRACKET  shift, and go to state 74
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 44

<<<<<<< HEAD
   37 shortcut_data_type: IDENT SY_EQUALS advanced_data_type SY_SEMICOLON .

    $default  reduce using rule 37 (shortcut_data_type)
=======
   40 shortcut_data_type: IDENT SY_EQUALS advanced_data_type SY_SEMICOLON .

    $default  reduce using rule 40 (shortcut_data_type)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 45

<<<<<<< HEAD
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . IDENT
   52 var_decl_list: var_decl_list var_decl1 var_decl2 . var_decl3
   58 var_decl3: . simple_data_type SY_SEMICOLON
=======
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL
   51                 | . IDENT
   55 var_decl_list: var_decl_list var_decl1 var_decl2 . var_decl3
   61 var_decl3: . simple_data_type SY_SEMICOLON
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    IDENT       shift, and go to state 20
    KW_BOOLEAN  shift, and go to state 23
    KW_REAL     shift, and go to state 24
    KW_CHAR     shift, and go to state 25
    KW_INTEGER  shift, and go to state 26

    simple_data_type  go to state 48
<<<<<<< HEAD
    var_decl3         go to state 72
=======
    var_decl3         go to state 75
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 46

   54 var_decl1: var_decl1 SY_COMMA IDENT .

    $default  reduce using rule 54 (var_decl1)


State 47

<<<<<<< HEAD
   42 matrix_n: . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   43         | . matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   56 var_decl2: SY_COLON KW_ARRAY . matrix_n KW_OF
   57          | SY_COLON KW_ARRAY . KW_OF

    KW_OF                shift, and go to state 73
    SY_LEFT_SQR_BRACKET  shift, and go to state 42

    matrix_n  go to state 74
=======
   45 matrix_n: . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   46         | . matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   59 var_decl2: SY_COLON KW_ARRAY . matrix_n KW_OF
   60          | SY_COLON KW_ARRAY . KW_OF

    KW_OF                shift, and go to state 76
    SY_LEFT_SQR_BRACKET  shift, and go to state 42

    matrix_n  go to state 77
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 48

   58 var_decl3: simple_data_type . SY_SEMICOLON

<<<<<<< HEAD
    SY_SEMICOLON  shift, and go to state 75
=======
    SY_SEMICOLON  shift, and go to state 78
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 49

   51 var_decl_list: var_decl1 var_decl2 var_decl3 .

    $default  reduce using rule 51 (var_decl_list)


State 50

<<<<<<< HEAD
   79 simple_cmd: IDENT . SY_ASSIGN expression
   83           | IDENT . SY_COLON all_commands
   86           | IDENT . SY_LEFT_BRACKET arglist
   88 proc_call: IDENT . SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    SY_ASSIGN        shift, and go to state 76
    SY_COLON         shift, and go to state 77
    SY_LEFT_BRACKET  shift, and go to state 78
=======
   82 simple_cmd: IDENT . SY_ASSIGN expression
   87           | IDENT . SY_COLON all_commands
   90           | IDENT . SY_LEFT_BRACKET arglist
   92 proc_call: IDENT . SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    SY_ASSIGN        shift, and go to state 79
    SY_COLON         shift, and go to state 80
    SY_LEFT_BRACKET  shift, and go to state 81
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 51

<<<<<<< HEAD
   80 simple_cmd: KW_RESULT . SY_ASSIGN expression

    SY_ASSIGN  shift, and go to state 79
=======
   83 simple_cmd: KW_RESULT . SY_ASSIGN expression

    SY_ASSIGN  shift, and go to state 82
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 52

<<<<<<< HEAD
   84 simple_cmd: KW_GOTO . IDENT

    IDENT  shift, and go to state 80
=======
   88 simple_cmd: KW_GOTO . IDENT

    IDENT  shift, and go to state 83
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 53

<<<<<<< HEAD
   85 simple_cmd: KW_RETURN .

    $default  reduce using rule 85 (simple_cmd)
=======
   89 simple_cmd: KW_RETURN .

    $default  reduce using rule 89 (simple_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 54

<<<<<<< HEAD
   91 for_cmd: KW_FOR . IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   92        | KW_FOR . IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

    IDENT  shift, and go to state 81
=======
   76 all_commands: . complex_cmd
   77             | . simple_cmd
   78 complex_cmd: . KW_BEGIN cmd_list KW_END
   82 simple_cmd: . IDENT SY_ASSIGN expression
   83           | . KW_RESULT SY_ASSIGN expression
   84           | . if_cmd
   85           | . for_cmd
   86           | . while_cmd
   87           | . IDENT SY_COLON all_commands
   88           | . KW_GOTO IDENT
   89           | . KW_RETURN
   90           | . IDENT SY_LEFT_BRACKET arglist
   91           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   93 while_cmd: . KW_WHILE expression KW_DO all_commands
   94          | . KW_REPEAT all_commands KW_UNTIL expression
   95 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   96        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   97 if_cmd: . KW_IF expression KW_THEN all_commands
   98       | . KW_ELSE KW_IF expression KW_THEN all_commands
   98       | KW_ELSE . KW_IF expression KW_THEN all_commands
   99       | . KW_ELSE all_commands
   99       | KW_ELSE . all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_ELSE    shift, and go to state 54
    KW_IF      shift, and go to state 84
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    all_commands  go to state 85
    complex_cmd   go to state 86
    simple_cmd    go to state 87
    proc_call     go to state 61
    while_cmd     go to state 62
    for_cmd       go to state 63
    if_cmd        go to state 64
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 55

<<<<<<< HEAD
   73 all_commands: . complex_cmd
   74             | . simple_cmd
   75 complex_cmd: . KW_BEGIN cmd_list KW_END
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . for_cmd
   82           | . while_cmd
   83           | . IDENT SY_COLON all_commands
   84           | . KW_GOTO IDENT
   85           | . KW_RETURN
   86           | . IDENT SY_LEFT_BRACKET arglist
   87           | . proc_call
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   89 while_cmd: . KW_WHILE expression KW_DO all_commands
   90          | . KW_REPEAT all_commands KW_UNTIL expression
   90          | KW_REPEAT . all_commands KW_UNTIL expression
   91 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   92        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_FOR     shift, and go to state 54
    KW_REPEAT  shift, and go to state 55
    KW_WHILE   shift, and go to state 56

    all_commands  go to state 82
    complex_cmd   go to state 83
    simple_cmd    go to state 84
    proc_call     go to state 59
    while_cmd     go to state 60
    for_cmd       go to state 61
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   97 if_cmd: KW_IF . expression KW_THEN all_commands

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 99
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 56

<<<<<<< HEAD
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   89 while_cmd: KW_WHILE . expression KW_DO all_commands

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 95
    proc_call   go to state 96
=======
   95 for_cmd: KW_FOR . IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   96        | KW_FOR . IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

    IDENT  shift, and go to state 101
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 57

<<<<<<< HEAD
   75 complex_cmd: KW_BEGIN cmd_list . KW_END
   78 cmd_list: cmd_list . SY_SEMICOLON simple_cmd

    KW_END        shift, and go to state 97
    SY_SEMICOLON  shift, and go to state 98
=======
   76 all_commands: . complex_cmd
   77             | . simple_cmd
   78 complex_cmd: . KW_BEGIN cmd_list KW_END
   82 simple_cmd: . IDENT SY_ASSIGN expression
   83           | . KW_RESULT SY_ASSIGN expression
   84           | . if_cmd
   85           | . for_cmd
   86           | . while_cmd
   87           | . IDENT SY_COLON all_commands
   88           | . KW_GOTO IDENT
   89           | . KW_RETURN
   90           | . IDENT SY_LEFT_BRACKET arglist
   91           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   93 while_cmd: . KW_WHILE expression KW_DO all_commands
   94          | . KW_REPEAT all_commands KW_UNTIL expression
   94          | KW_REPEAT . all_commands KW_UNTIL expression
   95 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   96        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   97 if_cmd: . KW_IF expression KW_THEN all_commands
   98       | . KW_ELSE KW_IF expression KW_THEN all_commands
   99       | . KW_ELSE all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_ELSE    shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    all_commands  go to state 102
    complex_cmd   go to state 86
    simple_cmd    go to state 87
    proc_call     go to state 61
    while_cmd     go to state 62
    for_cmd       go to state 63
    if_cmd        go to state 64
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 58

<<<<<<< HEAD
   77 cmd_list: simple_cmd .

    $default  reduce using rule 77 (cmd_list)
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   93 while_cmd: KW_WHILE . expression KW_DO all_commands

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 103
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 59

<<<<<<< HEAD
   87 simple_cmd: proc_call .

    $default  reduce using rule 87 (simple_cmd)
=======
   78 complex_cmd: KW_BEGIN cmd_list . KW_END
   81 cmd_list: cmd_list . SY_SEMICOLON simple_cmd

    KW_END        shift, and go to state 104
    SY_SEMICOLON  shift, and go to state 105
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 60

<<<<<<< HEAD
   82 simple_cmd: while_cmd .

    $default  reduce using rule 82 (simple_cmd)
=======
   80 cmd_list: simple_cmd .

    $default  reduce using rule 80 (cmd_list)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 61

<<<<<<< HEAD
   81 simple_cmd: for_cmd .

    $default  reduce using rule 81 (simple_cmd)
=======
   91 simple_cmd: proc_call .

    $default  reduce using rule 91 (simple_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 62

<<<<<<< HEAD
   64 function_header: KW_FUNCTION IDENT . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

    SY_LEFT_BRACKET  shift, and go to state 99
=======
   86 simple_cmd: while_cmd .

    $default  reduce using rule 86 (simple_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 63

<<<<<<< HEAD
   63 procedure_header: KW_PROCEDURE IDENT . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    SY_LEFT_BRACKET  shift, and go to state 100
=======
   85 simple_cmd: for_cmd .

    $default  reduce using rule 85 (simple_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 64

<<<<<<< HEAD
    1 program: program_decl type_def var_decl subprogram_list complex_cmd SY_PERIOD .

    $default  reduce using rule 1 (program)
=======
   84 simple_cmd: if_cmd .

    $default  reduce using rule 84 (simple_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 65

<<<<<<< HEAD
   67 args_decl_list: IDENT . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 101
=======
   67 function_header: KW_FUNCTION IDENT . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

    SY_LEFT_BRACKET  shift, and go to state 106
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 66

<<<<<<< HEAD
   41 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET return_type

    SY_RIGHT_BRACKET  shift, and go to state 102
=======
   66 procedure_header: KW_PROCEDURE IDENT . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    SY_LEFT_BRACKET  shift, and go to state 107
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 67

<<<<<<< HEAD
   66 args_decl: args_decl_list .  [SY_RIGHT_BRACKET]
   68 args_decl_list: args_decl_list . SY_SEMICOLON IDENT SY_COLON advanced_data_type

    SY_SEMICOLON  shift, and go to state 103

    $default  reduce using rule 66 (args_decl)
=======
    1 program: program_decl type_def var_decl subprogram_list complex_cmd SY_PERIOD .

    $default  reduce using rule 1 (program)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 68

<<<<<<< HEAD
   39 advanced_data_type: KW_ARRAY KW_OF simple_data_type .

    $default  reduce using rule 39 (advanced_data_type)
=======
   70 args_decl_list: IDENT . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 108
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 69

<<<<<<< HEAD
   42 matrix_n: SY_LEFT_SQR_BRACKET POSINT . SY_RIGHT_SQR_BRACKET

    SY_RIGHT_SQR_BRACKET  shift, and go to state 104
=======
   44 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET return_type

    SY_RIGHT_BRACKET  shift, and go to state 109
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 70

<<<<<<< HEAD
   40 advanced_data_type: KW_ARRAY matrix_n KW_OF . simple_data_type
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . IDENT

    IDENT       shift, and go to state 20
    KW_BOOLEAN  shift, and go to state 23
    KW_REAL     shift, and go to state 24
    KW_CHAR     shift, and go to state 25
    KW_INTEGER  shift, and go to state 26

    simple_data_type  go to state 105
=======
   69 args_decl: args_decl_list .  [SY_RIGHT_BRACKET]
   71 args_decl_list: args_decl_list . SY_SEMICOLON IDENT SY_COLON advanced_data_type

    SY_SEMICOLON  shift, and go to state 110

    $default  reduce using rule 69 (args_decl)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 71

<<<<<<< HEAD
   43 matrix_n: matrix_n SY_LEFT_SQR_BRACKET . POSINT SY_RIGHT_SQR_BRACKET

    POSINT  shift, and go to state 106
=======
   42 advanced_data_type: KW_ARRAY KW_OF simple_data_type .

    $default  reduce using rule 42 (advanced_data_type)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 72

<<<<<<< HEAD
   52 var_decl_list: var_decl_list var_decl1 var_decl2 var_decl3 .

    $default  reduce using rule 52 (var_decl_list)
=======
   45 matrix_n: SY_LEFT_SQR_BRACKET POSINT . SY_RIGHT_SQR_BRACKET

    SY_RIGHT_SQR_BRACKET  shift, and go to state 111
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 73

<<<<<<< HEAD
   57 var_decl2: SY_COLON KW_ARRAY KW_OF .

    $default  reduce using rule 57 (var_decl2)
=======
   43 advanced_data_type: KW_ARRAY matrix_n KW_OF . simple_data_type
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL
   51                 | . IDENT

    IDENT       shift, and go to state 20
    KW_BOOLEAN  shift, and go to state 23
    KW_REAL     shift, and go to state 24
    KW_CHAR     shift, and go to state 25
    KW_INTEGER  shift, and go to state 26

    simple_data_type  go to state 112
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 74

<<<<<<< HEAD
   43 matrix_n: matrix_n . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   56 var_decl2: SY_COLON KW_ARRAY matrix_n . KW_OF

    KW_OF                shift, and go to state 107
    SY_LEFT_SQR_BRACKET  shift, and go to state 71
=======
   46 matrix_n: matrix_n SY_LEFT_SQR_BRACKET . POSINT SY_RIGHT_SQR_BRACKET

    POSINT  shift, and go to state 113
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 75

<<<<<<< HEAD
   58 var_decl3: simple_data_type SY_SEMICOLON .

    $default  reduce using rule 58 (var_decl3)
=======
   55 var_decl_list: var_decl_list var_decl1 var_decl2 var_decl3 .

    $default  reduce using rule 55 (var_decl_list)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 76

<<<<<<< HEAD
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   79 simple_cmd: IDENT SY_ASSIGN . expression
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 108
    proc_call   go to state 96
=======
   60 var_decl2: SY_COLON KW_ARRAY KW_OF .

    $default  reduce using rule 60 (var_decl2)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 77

<<<<<<< HEAD
   73 all_commands: . complex_cmd
   74             | . simple_cmd
   75 complex_cmd: . KW_BEGIN cmd_list KW_END
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . for_cmd
   82           | . while_cmd
   83           | . IDENT SY_COLON all_commands
   83           | IDENT SY_COLON . all_commands
   84           | . KW_GOTO IDENT
   85           | . KW_RETURN
   86           | . IDENT SY_LEFT_BRACKET arglist
   87           | . proc_call
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   89 while_cmd: . KW_WHILE expression KW_DO all_commands
   90          | . KW_REPEAT all_commands KW_UNTIL expression
   91 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   92        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_FOR     shift, and go to state 54
    KW_REPEAT  shift, and go to state 55
    KW_WHILE   shift, and go to state 56

    all_commands  go to state 109
    complex_cmd   go to state 83
    simple_cmd    go to state 84
    proc_call     go to state 59
    while_cmd     go to state 60
    for_cmd       go to state 61
=======
   46 matrix_n: matrix_n . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   59 var_decl2: SY_COLON KW_ARRAY matrix_n . KW_OF

    KW_OF                shift, and go to state 114
    SY_LEFT_SQR_BRACKET  shift, and go to state 74
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 78

<<<<<<< HEAD
    3 arguments: . %empty  [SY_RIGHT_BRACKET]
    4          | . arglist
    5 arglist: . expression
    6        | . arglist SY_COMMA expression
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   86 simple_cmd: IDENT SY_LEFT_BRACKET . arglist
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   88          | IDENT SY_LEFT_BRACKET . arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    $default  reduce using rule 3 (arguments)

    arguments   go to state 110
    arglist     go to state 111
    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 112
    proc_call   go to state 96
=======
   61 var_decl3: simple_data_type SY_SEMICOLON .

    $default  reduce using rule 61 (var_decl3)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 79

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
<<<<<<< HEAD
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   80 simple_cmd: KW_RESULT SY_ASSIGN . expression
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 113
    proc_call   go to state 96
=======
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   82 simple_cmd: IDENT SY_ASSIGN . expression
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 115
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 80

<<<<<<< HEAD
   84 simple_cmd: KW_GOTO IDENT .

    $default  reduce using rule 84 (simple_cmd)
=======
   76 all_commands: . complex_cmd
   77             | . simple_cmd
   78 complex_cmd: . KW_BEGIN cmd_list KW_END
   82 simple_cmd: . IDENT SY_ASSIGN expression
   83           | . KW_RESULT SY_ASSIGN expression
   84           | . if_cmd
   85           | . for_cmd
   86           | . while_cmd
   87           | . IDENT SY_COLON all_commands
   87           | IDENT SY_COLON . all_commands
   88           | . KW_GOTO IDENT
   89           | . KW_RETURN
   90           | . IDENT SY_LEFT_BRACKET arglist
   91           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   93 while_cmd: . KW_WHILE expression KW_DO all_commands
   94          | . KW_REPEAT all_commands KW_UNTIL expression
   95 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   96        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   97 if_cmd: . KW_IF expression KW_THEN all_commands
   98       | . KW_ELSE KW_IF expression KW_THEN all_commands
   99       | . KW_ELSE all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_ELSE    shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    all_commands  go to state 116
    complex_cmd   go to state 86
    simple_cmd    go to state 87
    proc_call     go to state 61
    while_cmd     go to state 62
    for_cmd       go to state 63
    if_cmd        go to state 64
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 81

<<<<<<< HEAD
   91 for_cmd: KW_FOR IDENT . SY_ASSIGN expression KW_TO expression KW_DO all_commands
   92        | KW_FOR IDENT . SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

    SY_ASSIGN  shift, and go to state 114
=======
    3 arguments: . %empty  [SY_RIGHT_BRACKET]
    4          | . arglist
    5 arglist: . expression
    6        | . arglist SY_COMMA expression
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   90 simple_cmd: IDENT SY_LEFT_BRACKET . arglist
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   92          | IDENT SY_LEFT_BRACKET . arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    $default  reduce using rule 3 (arguments)

    arguments   go to state 117
    arglist     go to state 118
    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 119
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 82

<<<<<<< HEAD
   90 while_cmd: KW_REPEAT all_commands . KW_UNTIL expression

    KW_UNTIL  shift, and go to state 115
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   83 simple_cmd: KW_RESULT SY_ASSIGN . expression
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 120
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 83

<<<<<<< HEAD
   73 all_commands: complex_cmd .

    $default  reduce using rule 73 (all_commands)
=======
   88 simple_cmd: KW_GOTO IDENT .

    $default  reduce using rule 88 (simple_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 84

<<<<<<< HEAD
   74 all_commands: simple_cmd .

    $default  reduce using rule 74 (all_commands)
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   97 if_cmd: KW_IF . expression KW_THEN all_commands
   98       | KW_ELSE KW_IF . expression KW_THEN all_commands

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 121
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 85

<<<<<<< HEAD
   26 expression: IDENT .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_NOT, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   88 proc_call: IDENT . SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    SY_LEFT_BRACKET  shift, and go to state 116

    $default  reduce using rule 26 (expression)
=======
   99 if_cmd: KW_ELSE all_commands .

    $default  reduce using rule 99 (if_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 86

<<<<<<< HEAD
   23 expression: POSINT .

    $default  reduce using rule 23 (expression)
=======
   76 all_commands: complex_cmd .

    $default  reduce using rule 76 (all_commands)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 87

<<<<<<< HEAD
   24 expression: REAL .

    $default  reduce using rule 24 (expression)
=======
   77 all_commands: simple_cmd .

    $default  reduce using rule 77 (all_commands)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 88

<<<<<<< HEAD
   25 expression: STRING .

    $default  reduce using rule 25 (expression)
=======
   30 expression: IDENT .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_NOT, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   92 proc_call: IDENT . SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    SY_LEFT_BRACKET  shift, and go to state 122

    $default  reduce using rule 30 (expression)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 89

<<<<<<< HEAD
   27 expression: KW_RESULT .
=======
   26 expression: POSINT .

    $default  reduce using rule 26 (expression)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    $default  reduce using rule 27 (expression)


<<<<<<< HEAD
State 90

    7 unary_exp: . SY_DASH expression
    7          | SY_DASH . expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 117
    proc_call   go to state 96
=======
   27 expression: REAL .

    $default  reduce using rule 27 (expression)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 91

<<<<<<< HEAD
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    8          | SY_NOT . expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 118
    proc_call   go to state 96
=======
   28 expression: STRING .

    $default  reduce using rule 28 (expression)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 92

<<<<<<< HEAD
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   28           | SY_LEFT_BRACKET . expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   32           | SY_LEFT_BRACKET . simple_data_type SY_RIGHT_BRACKET
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . IDENT
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 119
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    KW_BOOLEAN       shift, and go to state 23
    KW_REAL          shift, and go to state 24
    KW_CHAR          shift, and go to state 25
    KW_INTEGER       shift, and go to state 26
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp         go to state 93
    binary_exp        go to state 94
    expression        go to state 120
    simple_data_type  go to state 121
    proc_call         go to state 96
=======
   29 expression: BOOL .

    $default  reduce using rule 29 (expression)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 93

<<<<<<< HEAD
   29 expression: unary_exp .

    $default  reduce using rule 29 (expression)
=======
   31 expression: KW_RESULT .

    $default  reduce using rule 31 (expression)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 94

<<<<<<< HEAD
   30 expression: binary_exp .
=======
    7 unary_exp: . SY_DASH expression
    7          | SY_DASH . expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 123
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    $default  reduce using rule 30 (expression)


<<<<<<< HEAD
State 95

    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression
   89 while_cmd: KW_WHILE expression . KW_DO all_commands

    KW_DO              shift, and go to state 122
    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    8          | SY_NOT . expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 124
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 96

<<<<<<< HEAD
   31 expression: proc_call .

    $default  reduce using rule 31 (expression)
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   32           | SY_LEFT_BRACKET . expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 125
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 97

<<<<<<< HEAD
   75 complex_cmd: KW_BEGIN cmd_list KW_END .

    $default  reduce using rule 75 (complex_cmd)
=======
   33 expression: unary_exp .

    $default  reduce using rule 33 (expression)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 98

<<<<<<< HEAD
   78 cmd_list: cmd_list SY_SEMICOLON . simple_cmd
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . for_cmd
   82           | . while_cmd
   83           | . IDENT SY_COLON all_commands
   84           | . KW_GOTO IDENT
   85           | . KW_RETURN
   86           | . IDENT SY_LEFT_BRACKET arglist
   87           | . proc_call
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   89 while_cmd: . KW_WHILE expression KW_DO all_commands
   90          | . KW_REPEAT all_commands KW_UNTIL expression
   91 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   92        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

    IDENT      shift, and go to state 50
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_FOR     shift, and go to state 54
    KW_REPEAT  shift, and go to state 55
    KW_WHILE   shift, and go to state 56

    simple_cmd  go to state 137
    proc_call   go to state 59
    while_cmd   go to state 60
    for_cmd     go to state 61
=======
   34 expression: binary_exp .

    $default  reduce using rule 34 (expression)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 99

<<<<<<< HEAD
   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   65 args_decl: . %empty  [SY_RIGHT_BRACKET]
   66          | . args_decl_list
   67 args_decl_list: . IDENT SY_COLON advanced_data_type
   68               | . args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 65

    $default  reduce using rule 65 (args_decl)

    args_decl       go to state 138
    args_decl_list  go to state 67
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression
   97 if_cmd: KW_IF expression . KW_THEN all_commands

    KW_AND             shift, and go to state 126
    KW_DIV             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    KW_THEN            shift, and go to state 129
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 100

<<<<<<< HEAD
   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   65 args_decl: . %empty  [SY_RIGHT_BRACKET]
   66          | . args_decl_list
   67 args_decl_list: . IDENT SY_COLON advanced_data_type
   68               | . args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 65
=======
   35 expression: proc_call .

    $default  reduce using rule 35 (expression)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    $default  reduce using rule 65 (args_decl)

    args_decl       go to state 139
    args_decl_list  go to state 67


<<<<<<< HEAD
State 101

   38 advanced_data_type: . simple_data_type
   39                   | . KW_ARRAY KW_OF simple_data_type
   40                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   41                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . IDENT
   67 args_decl_list: IDENT SY_COLON . advanced_data_type

    IDENT        shift, and go to state 20
    KW_FUNCTION  shift, and go to state 21
    KW_ARRAY     shift, and go to state 22
    KW_BOOLEAN   shift, and go to state 23
    KW_REAL      shift, and go to state 24
    KW_CHAR      shift, and go to state 25
    KW_INTEGER   shift, and go to state 26

    advanced_data_type  go to state 140
    simple_data_type    go to state 28
=======
   95 for_cmd: KW_FOR IDENT . SY_ASSIGN expression KW_TO expression KW_DO all_commands
   96        | KW_FOR IDENT . SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

    SY_ASSIGN  shift, and go to state 144
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 102

<<<<<<< HEAD
   41 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . return_type
   69 return_type: . %empty  [SY_SEMICOLON, SY_RIGHT_BRACKET]
   70            | . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 141

    $default  reduce using rule 69 (return_type)

    return_type  go to state 142
=======
   94 while_cmd: KW_REPEAT all_commands . KW_UNTIL expression

    KW_UNTIL  shift, and go to state 145
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 103

<<<<<<< HEAD
   68 args_decl_list: args_decl_list SY_SEMICOLON . IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 143
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression
   93 while_cmd: KW_WHILE expression . KW_DO all_commands

    KW_AND             shift, and go to state 126
    KW_DIV             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    KW_DO              shift, and go to state 146
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 104

<<<<<<< HEAD
   42 matrix_n: SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET .

    $default  reduce using rule 42 (matrix_n)
=======
   78 complex_cmd: KW_BEGIN cmd_list KW_END .

    $default  reduce using rule 78 (complex_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 105

<<<<<<< HEAD
   40 advanced_data_type: KW_ARRAY matrix_n KW_OF simple_data_type .

    $default  reduce using rule 40 (advanced_data_type)
=======
   81 cmd_list: cmd_list SY_SEMICOLON . simple_cmd
   82 simple_cmd: . IDENT SY_ASSIGN expression
   83           | . KW_RESULT SY_ASSIGN expression
   84           | . if_cmd
   85           | . for_cmd
   86           | . while_cmd
   87           | . IDENT SY_COLON all_commands
   88           | . KW_GOTO IDENT
   89           | . KW_RETURN
   90           | . IDENT SY_LEFT_BRACKET arglist
   91           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   93 while_cmd: . KW_WHILE expression KW_DO all_commands
   94          | . KW_REPEAT all_commands KW_UNTIL expression
   95 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   96        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   97 if_cmd: . KW_IF expression KW_THEN all_commands
   98       | . KW_ELSE KW_IF expression KW_THEN all_commands
   99       | . KW_ELSE all_commands

    IDENT      shift, and go to state 50
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_ELSE    shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    simple_cmd  go to state 147
    proc_call   go to state 61
    while_cmd   go to state 62
    for_cmd     go to state 63
    if_cmd      go to state 64
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 106

<<<<<<< HEAD
   43 matrix_n: matrix_n SY_LEFT_SQR_BRACKET POSINT . SY_RIGHT_SQR_BRACKET

    SY_RIGHT_SQR_BRACKET  shift, and go to state 144
=======
   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   68 args_decl: . %empty  [SY_RIGHT_BRACKET]
   69          | . args_decl_list
   70 args_decl_list: . IDENT SY_COLON advanced_data_type
   71               | . args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 68

    $default  reduce using rule 68 (args_decl)

    args_decl       go to state 148
    args_decl_list  go to state 70
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 107

<<<<<<< HEAD
   56 var_decl2: SY_COLON KW_ARRAY matrix_n KW_OF .

    $default  reduce using rule 56 (var_decl2)
=======
   66 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   68 args_decl: . %empty  [SY_RIGHT_BRACKET]
   69          | . args_decl_list
   70 args_decl_list: . IDENT SY_COLON advanced_data_type
   71               | . args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 68

    $default  reduce using rule 68 (args_decl)

    args_decl       go to state 149
    args_decl_list  go to state 70
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 108

<<<<<<< HEAD
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression
   79 simple_cmd: IDENT SY_ASSIGN expression .  [KW_END, KW_UNTIL, SY_SEMICOLON]

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 79 (simple_cmd)
=======
   41 advanced_data_type: . simple_data_type
   42                   | . KW_ARRAY KW_OF simple_data_type
   43                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   44                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL
   51                 | . IDENT
   70 args_decl_list: IDENT SY_COLON . advanced_data_type

    IDENT        shift, and go to state 20
    KW_FUNCTION  shift, and go to state 21
    KW_ARRAY     shift, and go to state 22
    KW_BOOLEAN   shift, and go to state 23
    KW_REAL      shift, and go to state 24
    KW_CHAR      shift, and go to state 25
    KW_INTEGER   shift, and go to state 26

    advanced_data_type  go to state 150
    simple_data_type    go to state 28
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 109

<<<<<<< HEAD
   83 simple_cmd: IDENT SY_COLON all_commands .

    $default  reduce using rule 83 (simple_cmd)
=======
   44 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . return_type
   72 return_type: . %empty  [SY_SEMICOLON, SY_RIGHT_BRACKET]
   73            | . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 151

    $default  reduce using rule 72 (return_type)

    return_type  go to state 152
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 110

<<<<<<< HEAD
   88 proc_call: IDENT SY_LEFT_BRACKET arguments . SY_RIGHT_BRACKET

    SY_RIGHT_BRACKET  shift, and go to state 145
=======
   71 args_decl_list: args_decl_list SY_SEMICOLON . IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 153
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 111

<<<<<<< HEAD
    4 arguments: arglist .  [SY_RIGHT_BRACKET]
    6 arglist: arglist . SY_COMMA expression
   86 simple_cmd: IDENT SY_LEFT_BRACKET arglist .  [KW_END, KW_UNTIL, SY_SEMICOLON]

    SY_COMMA  shift, and go to state 146

    SY_RIGHT_BRACKET  reduce using rule 4 (arguments)
    $default          reduce using rule 86 (simple_cmd)
=======
   45 matrix_n: SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET .

    $default  reduce using rule 45 (matrix_n)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 112

<<<<<<< HEAD
    5 arglist: expression .  [KW_END, KW_UNTIL, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 5 (arglist)
=======
   43 advanced_data_type: KW_ARRAY matrix_n KW_OF simple_data_type .

    $default  reduce using rule 43 (advanced_data_type)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 113

<<<<<<< HEAD
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression
   80 simple_cmd: KW_RESULT SY_ASSIGN expression .  [KW_END, KW_UNTIL, SY_SEMICOLON]

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 80 (simple_cmd)
=======
   46 matrix_n: matrix_n SY_LEFT_SQR_BRACKET POSINT . SY_RIGHT_SQR_BRACKET

    SY_RIGHT_SQR_BRACKET  shift, and go to state 154
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 114

<<<<<<< HEAD
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   91 for_cmd: KW_FOR IDENT SY_ASSIGN . expression KW_TO expression KW_DO all_commands
   92        | KW_FOR IDENT SY_ASSIGN . expression KW_DOWNTO expression KW_DO all_commands

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 147
    proc_call   go to state 96
=======
   59 var_decl2: SY_COLON KW_ARRAY matrix_n KW_OF .

    $default  reduce using rule 59 (var_decl2)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 115

<<<<<<< HEAD
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   90 while_cmd: KW_REPEAT all_commands KW_UNTIL . expression

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 148
    proc_call   go to state 96
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression
   82 simple_cmd: IDENT SY_ASSIGN expression .  [KW_END, KW_UNTIL, SY_SEMICOLON]

    KW_AND             shift, and go to state 126
    KW_DIV             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 82 (simple_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 116

<<<<<<< HEAD
    3 arguments: . %empty  [SY_RIGHT_BRACKET]
    4          | . arglist
    5 arglist: . expression
    6        | . arglist SY_COMMA expression
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   88          | IDENT SY_LEFT_BRACKET . arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    $default  reduce using rule 3 (arguments)

    arguments   go to state 110
    arglist     go to state 149
    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 112
    proc_call   go to state 96
=======
   87 simple_cmd: IDENT SY_COLON all_commands .

    $default  reduce using rule 87 (simple_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 117

<<<<<<< HEAD
    7 unary_exp: SY_DASH expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
    9          | expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 7 (unary_exp)

    Conflict between rule 7 and token SY_DASH resolved as shift (%right SY_DASH).
    Conflict between rule 7 and token SY_PLUS resolved as shift (SY_DASH < SY_PLUS).
    Conflict between rule 7 and token SY_STAR resolved as shift (SY_DASH < SY_STAR).
    Conflict between rule 7 and token SY_SLASH resolved as shift (SY_DASH < SY_SLASH).
    Conflict between rule 7 and token SY_EQUALS resolved as shift (SY_DASH < SY_EQUALS).
    Conflict between rule 7 and token SY_LESS resolved as shift (SY_DASH < SY_LESS).
    Conflict between rule 7 and token SY_GREATER resolved as shift (SY_DASH < SY_GREATER).
    Conflict between rule 7 and token SY_LESS_EQUALS resolved as shift (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 7 and token SY_GREATER_EQUALS resolved as shift (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 7 and token SY_LESS_BIGGER resolved as shift (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 7 and token SY_AND resolved as shift (SY_DASH < SY_AND).
    Conflict between rule 7 and token SY_OR resolved as shift (SY_DASH < SY_OR).
    Conflict between rule 7 and token SY_ASSIGN resolved as shift (SY_DASH < SY_ASSIGN).
    Conflict between rule 7 and token SY_NOT resolved as shift (SY_DASH < SY_NOT).
=======
   92 proc_call: IDENT SY_LEFT_BRACKET arguments . SY_RIGHT_BRACKET

    SY_RIGHT_BRACKET  shift, and go to state 155
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 118

<<<<<<< HEAD
    8 unary_exp: SY_NOT expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
    9          | expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_NOT  shift, and go to state 136

    $default  reduce using rule 8 (unary_exp)

    Conflict between rule 8 and token SY_DASH resolved as reduce (SY_DASH < SY_NOT).
    Conflict between rule 8 and token SY_PLUS resolved as reduce (SY_PLUS < SY_NOT).
    Conflict between rule 8 and token SY_STAR resolved as reduce (SY_STAR < SY_NOT).
    Conflict between rule 8 and token SY_SLASH resolved as reduce (SY_SLASH < SY_NOT).
    Conflict between rule 8 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_NOT).
    Conflict between rule 8 and token SY_LESS resolved as reduce (SY_LESS < SY_NOT).
    Conflict between rule 8 and token SY_GREATER resolved as reduce (SY_GREATER < SY_NOT).
    Conflict between rule 8 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_NOT).
    Conflict between rule 8 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_NOT).
    Conflict between rule 8 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_NOT).
    Conflict between rule 8 and token SY_AND resolved as reduce (SY_AND < SY_NOT).
    Conflict between rule 8 and token SY_OR resolved as reduce (SY_OR < SY_NOT).
    Conflict between rule 8 and token SY_ASSIGN resolved as reduce (SY_ASSIGN < SY_NOT).
    Conflict between rule 8 and token SY_NOT resolved as shift (%right SY_NOT).
=======
    4 arguments: arglist .  [SY_RIGHT_BRACKET]
    6 arglist: arglist . SY_COMMA expression
   90 simple_cmd: IDENT SY_LEFT_BRACKET arglist .  [KW_END, KW_UNTIL, SY_SEMICOLON]

    SY_COMMA  shift, and go to state 156

    SY_RIGHT_BRACKET  reduce using rule 4 (arguments)
    $default          reduce using rule 90 (simple_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 119

<<<<<<< HEAD
   26 expression: IDENT .  [SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_NOT, SY_RIGHT_BRACKET]
   48 simple_data_type: IDENT .  [SY_RIGHT_BRACKET]
   88 proc_call: IDENT . SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    SY_LEFT_BRACKET  shift, and go to state 116

    SY_RIGHT_BRACKET  reduce using rule 26 (expression)
    SY_RIGHT_BRACKET  [reduce using rule 48 (simple_data_type)]
    $default          reduce using rule 26 (expression)
=======
    5 arglist: expression .  [KW_END, KW_UNTIL, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    KW_AND             shift, and go to state 126
    KW_DIV             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 5 (arglist)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 120

    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
<<<<<<< HEAD
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression
   28 expression: SY_LEFT_BRACKET expression . SY_RIGHT_BRACKET

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136
    SY_RIGHT_BRACKET   shift, and go to state 150
=======
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression
   83 simple_cmd: KW_RESULT SY_ASSIGN expression .  [KW_END, KW_UNTIL, SY_SEMICOLON]

    KW_AND             shift, and go to state 126
    KW_DIV             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    $default  reduce using rule 83 (simple_cmd)


<<<<<<< HEAD
   32 expression: SY_LEFT_BRACKET simple_data_type . SY_RIGHT_BRACKET

    SY_RIGHT_BRACKET  shift, and go to state 151
=======
State 121

    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression
   97 if_cmd: KW_IF expression . KW_THEN all_commands
   98       | KW_ELSE KW_IF expression . KW_THEN all_commands

    KW_AND             shift, and go to state 126
    KW_DIV             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    KW_THEN            shift, and go to state 157
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 122

<<<<<<< HEAD
   73 all_commands: . complex_cmd
   74             | . simple_cmd
   75 complex_cmd: . KW_BEGIN cmd_list KW_END
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . for_cmd
   82           | . while_cmd
   83           | . IDENT SY_COLON all_commands
   84           | . KW_GOTO IDENT
   85           | . KW_RETURN
   86           | . IDENT SY_LEFT_BRACKET arglist
   87           | . proc_call
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   89 while_cmd: . KW_WHILE expression KW_DO all_commands
   89          | KW_WHILE expression KW_DO . all_commands
   90          | . KW_REPEAT all_commands KW_UNTIL expression
   91 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   92        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_FOR     shift, and go to state 54
    KW_REPEAT  shift, and go to state 55
    KW_WHILE   shift, and go to state 56

    all_commands  go to state 152
    complex_cmd   go to state 83
    simple_cmd    go to state 84
    proc_call     go to state 59
    while_cmd     go to state 60
    for_cmd       go to state 61
=======
    3 arguments: . %empty  [SY_RIGHT_BRACKET]
    4          | . arglist
    5 arglist: . expression
    6        | . arglist SY_COMMA expression
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   92          | IDENT SY_LEFT_BRACKET . arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    $default  reduce using rule 3 (arguments)

    arguments   go to state 117
    arglist     go to state 158
    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 119
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 123

<<<<<<< HEAD
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   10           | expression SY_DASH . expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 153
    proc_call   go to state 96
=======
    7 unary_exp: SY_DASH expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
    9          | expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 7 (unary_exp)

    Conflict between rule 7 and token KW_AND resolved as reduce (KW_AND < SY_DASH).
    Conflict between rule 7 and token KW_DIV resolved as reduce (KW_DIV < SY_DASH).
    Conflict between rule 7 and token KW_MOD resolved as reduce (KW_MOD < SY_DASH).
    Conflict between rule 7 and token SY_DASH resolved as shift (%right SY_DASH).
    Conflict between rule 7 and token SY_PLUS resolved as shift (SY_DASH < SY_PLUS).
    Conflict between rule 7 and token SY_STAR resolved as shift (SY_DASH < SY_STAR).
    Conflict between rule 7 and token SY_SLASH resolved as shift (SY_DASH < SY_SLASH).
    Conflict between rule 7 and token SY_EQUALS resolved as shift (SY_DASH < SY_EQUALS).
    Conflict between rule 7 and token SY_LESS resolved as shift (SY_DASH < SY_LESS).
    Conflict between rule 7 and token SY_GREATER resolved as shift (SY_DASH < SY_GREATER).
    Conflict between rule 7 and token SY_LESS_EQUALS resolved as shift (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 7 and token SY_GREATER_EQUALS resolved as shift (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 7 and token SY_LESS_BIGGER resolved as shift (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 7 and token SY_AND resolved as shift (SY_DASH < SY_AND).
    Conflict between rule 7 and token SY_OR resolved as shift (SY_DASH < SY_OR).
    Conflict between rule 7 and token SY_ASSIGN resolved as shift (SY_DASH < SY_ASSIGN).
    Conflict between rule 7 and token SY_NOT resolved as shift (SY_DASH < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 124

<<<<<<< HEAD
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   11           | expression SY_PLUS . expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 154
    proc_call   go to state 96
=======
    8 unary_exp: SY_NOT expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
    9          | expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_NOT  shift, and go to state 143

    $default  reduce using rule 8 (unary_exp)

    Conflict between rule 8 and token KW_AND resolved as reduce (KW_AND < SY_NOT).
    Conflict between rule 8 and token KW_DIV resolved as reduce (KW_DIV < SY_NOT).
    Conflict between rule 8 and token KW_MOD resolved as reduce (KW_MOD < SY_NOT).
    Conflict between rule 8 and token SY_DASH resolved as reduce (SY_DASH < SY_NOT).
    Conflict between rule 8 and token SY_PLUS resolved as reduce (SY_PLUS < SY_NOT).
    Conflict between rule 8 and token SY_STAR resolved as reduce (SY_STAR < SY_NOT).
    Conflict between rule 8 and token SY_SLASH resolved as reduce (SY_SLASH < SY_NOT).
    Conflict between rule 8 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_NOT).
    Conflict between rule 8 and token SY_LESS resolved as reduce (SY_LESS < SY_NOT).
    Conflict between rule 8 and token SY_GREATER resolved as reduce (SY_GREATER < SY_NOT).
    Conflict between rule 8 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_NOT).
    Conflict between rule 8 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_NOT).
    Conflict between rule 8 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_NOT).
    Conflict between rule 8 and token SY_AND resolved as reduce (SY_AND < SY_NOT).
    Conflict between rule 8 and token SY_OR resolved as reduce (SY_OR < SY_NOT).
    Conflict between rule 8 and token SY_ASSIGN resolved as reduce (SY_ASSIGN < SY_NOT).
    Conflict between rule 8 and token SY_NOT resolved as shift (%right SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 125

<<<<<<< HEAD
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   12           | expression SY_STAR . expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 155
    proc_call   go to state 96
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression
   32 expression: SY_LEFT_BRACKET expression . SY_RIGHT_BRACKET

    KW_AND             shift, and go to state 126
    KW_DIV             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143
    SY_RIGHT_BRACKET   shift, and go to state 159
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 126

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
<<<<<<< HEAD
   13           | expression SY_SLASH . expression
=======
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
<<<<<<< HEAD
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 156
    proc_call   go to state 96
=======
   21           | . expression KW_AND expression
   21           | expression KW_AND . expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 160
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 127

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
<<<<<<< HEAD
   14           | expression SY_EQUALS . expression
=======
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
<<<<<<< HEAD
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 157
    proc_call   go to state 96
=======
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   25           | expression KW_DIV . expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 161
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 128

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
<<<<<<< HEAD
   15           | expression SY_LESS . expression
=======
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
<<<<<<< HEAD
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 158
    proc_call   go to state 96
=======
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   24           | expression KW_MOD . expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 162
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 129

<<<<<<< HEAD
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   16           | expression SY_GREATER . expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 159
    proc_call   go to state 96
=======
   76 all_commands: . complex_cmd
   77             | . simple_cmd
   78 complex_cmd: . KW_BEGIN cmd_list KW_END
   82 simple_cmd: . IDENT SY_ASSIGN expression
   83           | . KW_RESULT SY_ASSIGN expression
   84           | . if_cmd
   85           | . for_cmd
   86           | . while_cmd
   87           | . IDENT SY_COLON all_commands
   88           | . KW_GOTO IDENT
   89           | . KW_RETURN
   90           | . IDENT SY_LEFT_BRACKET arglist
   91           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   93 while_cmd: . KW_WHILE expression KW_DO all_commands
   94          | . KW_REPEAT all_commands KW_UNTIL expression
   95 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   96        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   97 if_cmd: . KW_IF expression KW_THEN all_commands
   97       | KW_IF expression KW_THEN . all_commands
   98       | . KW_ELSE KW_IF expression KW_THEN all_commands
   99       | . KW_ELSE all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_ELSE    shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    all_commands  go to state 163
    complex_cmd   go to state 86
    simple_cmd    go to state 87
    proc_call     go to state 61
    while_cmd     go to state 62
    for_cmd       go to state 63
    if_cmd        go to state 64
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 130

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
<<<<<<< HEAD
=======
   10           | expression SY_DASH . expression
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
<<<<<<< HEAD
   17           | expression SY_LESS_EQUALS . expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 160
    proc_call   go to state 96
=======
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 164
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 131

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
<<<<<<< HEAD
=======
   11           | expression SY_PLUS . expression
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
<<<<<<< HEAD
   18           | expression SY_GREATER_EQUALS . expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 161
    proc_call   go to state 96
=======
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 165
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 132

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
<<<<<<< HEAD
=======
   12           | expression SY_STAR . expression
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
<<<<<<< HEAD
   19           | expression SY_LESS_BIGGER . expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 162
    proc_call   go to state 96
=======
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 166
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 133

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
<<<<<<< HEAD
=======
   13           | expression SY_SLASH . expression
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
<<<<<<< HEAD
   20           | expression SY_AND . expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 163
    proc_call   go to state 96
=======
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 167
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 134

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
<<<<<<< HEAD
=======
   14           | expression SY_EQUALS . expression
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
<<<<<<< HEAD
   21           | . expression SY_OR expression
   21           | expression SY_OR . expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 164
    proc_call   go to state 96
=======
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 168
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 135

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
<<<<<<< HEAD
=======
   15           | expression SY_LESS . expression
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
<<<<<<< HEAD
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   22           | expression SY_ASSIGN . expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 165
    proc_call   go to state 96
=======
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 169
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 136

<<<<<<< HEAD
    9 unary_exp: expression SY_NOT .

    $default  reduce using rule 9 (unary_exp)
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   16           | expression SY_GREATER . expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 170
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 137

<<<<<<< HEAD
   78 cmd_list: cmd_list SY_SEMICOLON simple_cmd .

    $default  reduce using rule 78 (cmd_list)
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   17           | expression SY_LESS_EQUALS . expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 171
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 138

<<<<<<< HEAD
   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

    SY_RIGHT_BRACKET  shift, and go to state 166
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   18           | expression SY_GREATER_EQUALS . expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 172
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 139

<<<<<<< HEAD
   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    SY_RIGHT_BRACKET  shift, and go to state 167
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   19           | expression SY_LESS_BIGGER . expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 173
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 140

<<<<<<< HEAD
   67 args_decl_list: IDENT SY_COLON advanced_data_type .

    $default  reduce using rule 67 (args_decl_list)
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   20           | expression SY_AND . expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 174
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 141

<<<<<<< HEAD
   38 advanced_data_type: . simple_data_type
   39                   | . KW_ARRAY KW_OF simple_data_type
   40                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   41                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . IDENT
   70 return_type: SY_COLON . advanced_data_type

    IDENT        shift, and go to state 20
    KW_FUNCTION  shift, and go to state 21
    KW_ARRAY     shift, and go to state 22
    KW_BOOLEAN   shift, and go to state 23
    KW_REAL      shift, and go to state 24
    KW_CHAR      shift, and go to state 25
    KW_INTEGER   shift, and go to state 26

    advanced_data_type  go to state 168
    simple_data_type    go to state 28
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   22           | expression SY_OR . expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 175
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 142

<<<<<<< HEAD
   41 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type .

    $default  reduce using rule 41 (advanced_data_type)
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   23           | expression SY_ASSIGN . expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 176
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 143

<<<<<<< HEAD
   68 args_decl_list: args_decl_list SY_SEMICOLON IDENT . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 169
=======
    9 unary_exp: expression SY_NOT .

    $default  reduce using rule 9 (unary_exp)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 144

<<<<<<< HEAD
   43 matrix_n: matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET .

    $default  reduce using rule 43 (matrix_n)
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   95 for_cmd: KW_FOR IDENT SY_ASSIGN . expression KW_TO expression KW_DO all_commands
   96        | KW_FOR IDENT SY_ASSIGN . expression KW_DOWNTO expression KW_DO all_commands

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 177
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 145

<<<<<<< HEAD
   88 proc_call: IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET .

    $default  reduce using rule 88 (proc_call)
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   94 while_cmd: KW_REPEAT all_commands KW_UNTIL . expression

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 178
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 146

<<<<<<< HEAD
    6 arglist: arglist SY_COMMA . expression
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 170
    proc_call   go to state 96
=======
   76 all_commands: . complex_cmd
   77             | . simple_cmd
   78 complex_cmd: . KW_BEGIN cmd_list KW_END
   82 simple_cmd: . IDENT SY_ASSIGN expression
   83           | . KW_RESULT SY_ASSIGN expression
   84           | . if_cmd
   85           | . for_cmd
   86           | . while_cmd
   87           | . IDENT SY_COLON all_commands
   88           | . KW_GOTO IDENT
   89           | . KW_RETURN
   90           | . IDENT SY_LEFT_BRACKET arglist
   91           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   93 while_cmd: . KW_WHILE expression KW_DO all_commands
   93          | KW_WHILE expression KW_DO . all_commands
   94          | . KW_REPEAT all_commands KW_UNTIL expression
   95 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   96        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   97 if_cmd: . KW_IF expression KW_THEN all_commands
   98       | . KW_ELSE KW_IF expression KW_THEN all_commands
   99       | . KW_ELSE all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_ELSE    shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    all_commands  go to state 179
    complex_cmd   go to state 86
    simple_cmd    go to state 87
    proc_call     go to state 61
    while_cmd     go to state 62
    for_cmd       go to state 63
    if_cmd        go to state 64
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 147

<<<<<<< HEAD
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression
   91 for_cmd: KW_FOR IDENT SY_ASSIGN expression . KW_TO expression KW_DO all_commands
   92        | KW_FOR IDENT SY_ASSIGN expression . KW_DOWNTO expression KW_DO all_commands

    KW_TO              shift, and go to state 171
    KW_DOWNTO          shift, and go to state 172
    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136
=======
   81 cmd_list: cmd_list SY_SEMICOLON simple_cmd .

    $default  reduce using rule 81 (cmd_list)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 148

<<<<<<< HEAD
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression
   90 while_cmd: KW_REPEAT all_commands KW_UNTIL expression .  [KW_END, KW_UNTIL, SY_SEMICOLON]

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 90 (while_cmd)
=======
   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

    SY_RIGHT_BRACKET  shift, and go to state 180
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 149

<<<<<<< HEAD
    4 arguments: arglist .  [SY_RIGHT_BRACKET]
    6 arglist: arglist . SY_COMMA expression

    SY_COMMA  shift, and go to state 146

    $default  reduce using rule 4 (arguments)
=======
   66 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    SY_RIGHT_BRACKET  shift, and go to state 181
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 150

<<<<<<< HEAD
   28 expression: SY_LEFT_BRACKET expression SY_RIGHT_BRACKET .

    $default  reduce using rule 28 (expression)
=======
   70 args_decl_list: IDENT SY_COLON advanced_data_type .

    $default  reduce using rule 70 (args_decl_list)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 151

<<<<<<< HEAD
   32 expression: SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET .

    $default  reduce using rule 32 (expression)
=======
   41 advanced_data_type: . simple_data_type
   42                   | . KW_ARRAY KW_OF simple_data_type
   43                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   44                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL
   51                 | . IDENT
   73 return_type: SY_COLON . advanced_data_type

    IDENT        shift, and go to state 20
    KW_FUNCTION  shift, and go to state 21
    KW_ARRAY     shift, and go to state 22
    KW_BOOLEAN   shift, and go to state 23
    KW_REAL      shift, and go to state 24
    KW_CHAR      shift, and go to state 25
    KW_INTEGER   shift, and go to state 26

    advanced_data_type  go to state 182
    simple_data_type    go to state 28
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 152

<<<<<<< HEAD
   89 while_cmd: KW_WHILE expression KW_DO all_commands .

    $default  reduce using rule 89 (while_cmd)
=======
   44 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type .

    $default  reduce using rule 44 (advanced_data_type)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 153

<<<<<<< HEAD
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   10           | expression SY_DASH expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 10 (binary_exp)

    Conflict between rule 10 and token SY_DASH resolved as shift (%right SY_DASH).
    Conflict between rule 10 and token SY_PLUS resolved as shift (SY_DASH < SY_PLUS).
    Conflict between rule 10 and token SY_STAR resolved as shift (SY_DASH < SY_STAR).
    Conflict between rule 10 and token SY_SLASH resolved as shift (SY_DASH < SY_SLASH).
    Conflict between rule 10 and token SY_EQUALS resolved as shift (SY_DASH < SY_EQUALS).
    Conflict between rule 10 and token SY_LESS resolved as shift (SY_DASH < SY_LESS).
    Conflict between rule 10 and token SY_GREATER resolved as shift (SY_DASH < SY_GREATER).
    Conflict between rule 10 and token SY_LESS_EQUALS resolved as shift (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 10 and token SY_GREATER_EQUALS resolved as shift (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 10 and token SY_LESS_BIGGER resolved as shift (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 10 and token SY_AND resolved as shift (SY_DASH < SY_AND).
    Conflict between rule 10 and token SY_OR resolved as shift (SY_DASH < SY_OR).
    Conflict between rule 10 and token SY_ASSIGN resolved as shift (SY_DASH < SY_ASSIGN).
    Conflict between rule 10 and token SY_NOT resolved as shift (SY_DASH < SY_NOT).
=======
   71 args_decl_list: args_decl_list SY_SEMICOLON IDENT . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 183
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 154

<<<<<<< HEAD
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   11           | expression SY_PLUS expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 11 (binary_exp)

    Conflict between rule 11 and token SY_DASH resolved as reduce (SY_DASH < SY_PLUS).
    Conflict between rule 11 and token SY_PLUS resolved as shift (%right SY_PLUS).
    Conflict between rule 11 and token SY_STAR resolved as shift (SY_PLUS < SY_STAR).
    Conflict between rule 11 and token SY_SLASH resolved as shift (SY_PLUS < SY_SLASH).
    Conflict between rule 11 and token SY_EQUALS resolved as shift (SY_PLUS < SY_EQUALS).
    Conflict between rule 11 and token SY_LESS resolved as shift (SY_PLUS < SY_LESS).
    Conflict between rule 11 and token SY_GREATER resolved as shift (SY_PLUS < SY_GREATER).
    Conflict between rule 11 and token SY_LESS_EQUALS resolved as shift (SY_PLUS < SY_LESS_EQUALS).
    Conflict between rule 11 and token SY_GREATER_EQUALS resolved as shift (SY_PLUS < SY_GREATER_EQUALS).
    Conflict between rule 11 and token SY_LESS_BIGGER resolved as shift (SY_PLUS < SY_LESS_BIGGER).
    Conflict between rule 11 and token SY_AND resolved as shift (SY_PLUS < SY_AND).
    Conflict between rule 11 and token SY_OR resolved as shift (SY_PLUS < SY_OR).
    Conflict between rule 11 and token SY_ASSIGN resolved as shift (SY_PLUS < SY_ASSIGN).
    Conflict between rule 11 and token SY_NOT resolved as shift (SY_PLUS < SY_NOT).
=======
   46 matrix_n: matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET .

    $default  reduce using rule 46 (matrix_n)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 155

<<<<<<< HEAD
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   12           | expression SY_STAR expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 12 (binary_exp)

    Conflict between rule 12 and token SY_DASH resolved as reduce (SY_DASH < SY_STAR).
    Conflict between rule 12 and token SY_PLUS resolved as reduce (SY_PLUS < SY_STAR).
    Conflict between rule 12 and token SY_STAR resolved as reduce (%left SY_STAR).
    Conflict between rule 12 and token SY_SLASH resolved as shift (SY_STAR < SY_SLASH).
    Conflict between rule 12 and token SY_EQUALS resolved as shift (SY_STAR < SY_EQUALS).
    Conflict between rule 12 and token SY_LESS resolved as shift (SY_STAR < SY_LESS).
    Conflict between rule 12 and token SY_GREATER resolved as shift (SY_STAR < SY_GREATER).
    Conflict between rule 12 and token SY_LESS_EQUALS resolved as shift (SY_STAR < SY_LESS_EQUALS).
    Conflict between rule 12 and token SY_GREATER_EQUALS resolved as shift (SY_STAR < SY_GREATER_EQUALS).
    Conflict between rule 12 and token SY_LESS_BIGGER resolved as shift (SY_STAR < SY_LESS_BIGGER).
    Conflict between rule 12 and token SY_AND resolved as shift (SY_STAR < SY_AND).
    Conflict between rule 12 and token SY_OR resolved as shift (SY_STAR < SY_OR).
    Conflict between rule 12 and token SY_ASSIGN resolved as shift (SY_STAR < SY_ASSIGN).
    Conflict between rule 12 and token SY_NOT resolved as shift (SY_STAR < SY_NOT).
=======
   92 proc_call: IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET .

    $default  reduce using rule 92 (proc_call)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 156

<<<<<<< HEAD
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   13           | expression SY_SLASH expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 13 (binary_exp)

    Conflict between rule 13 and token SY_DASH resolved as reduce (SY_DASH < SY_SLASH).
    Conflict between rule 13 and token SY_PLUS resolved as reduce (SY_PLUS < SY_SLASH).
    Conflict between rule 13 and token SY_STAR resolved as reduce (SY_STAR < SY_SLASH).
    Conflict between rule 13 and token SY_SLASH resolved as reduce (%left SY_SLASH).
    Conflict between rule 13 and token SY_EQUALS resolved as shift (SY_SLASH < SY_EQUALS).
    Conflict between rule 13 and token SY_LESS resolved as shift (SY_SLASH < SY_LESS).
    Conflict between rule 13 and token SY_GREATER resolved as shift (SY_SLASH < SY_GREATER).
    Conflict between rule 13 and token SY_LESS_EQUALS resolved as shift (SY_SLASH < SY_LESS_EQUALS).
    Conflict between rule 13 and token SY_GREATER_EQUALS resolved as shift (SY_SLASH < SY_GREATER_EQUALS).
    Conflict between rule 13 and token SY_LESS_BIGGER resolved as shift (SY_SLASH < SY_LESS_BIGGER).
    Conflict between rule 13 and token SY_AND resolved as shift (SY_SLASH < SY_AND).
    Conflict between rule 13 and token SY_OR resolved as shift (SY_SLASH < SY_OR).
    Conflict between rule 13 and token SY_ASSIGN resolved as shift (SY_SLASH < SY_ASSIGN).
    Conflict between rule 13 and token SY_NOT resolved as shift (SY_SLASH < SY_NOT).
=======
    6 arglist: arglist SY_COMMA . expression
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 184
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 157

<<<<<<< HEAD
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   14           | expression SY_EQUALS expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 14 (binary_exp)

    Conflict between rule 14 and token SY_DASH resolved as reduce (SY_DASH < SY_EQUALS).
    Conflict between rule 14 and token SY_PLUS resolved as reduce (SY_PLUS < SY_EQUALS).
    Conflict between rule 14 and token SY_STAR resolved as reduce (SY_STAR < SY_EQUALS).
    Conflict between rule 14 and token SY_SLASH resolved as reduce (SY_SLASH < SY_EQUALS).
    Conflict between rule 14 and token SY_EQUALS resolved as reduce (%left SY_EQUALS).
    Conflict between rule 14 and token SY_LESS resolved as shift (SY_EQUALS < SY_LESS).
    Conflict between rule 14 and token SY_GREATER resolved as shift (SY_EQUALS < SY_GREATER).
    Conflict between rule 14 and token SY_LESS_EQUALS resolved as shift (SY_EQUALS < SY_LESS_EQUALS).
    Conflict between rule 14 and token SY_GREATER_EQUALS resolved as shift (SY_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 14 and token SY_LESS_BIGGER resolved as shift (SY_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 14 and token SY_AND resolved as shift (SY_EQUALS < SY_AND).
    Conflict between rule 14 and token SY_OR resolved as shift (SY_EQUALS < SY_OR).
    Conflict between rule 14 and token SY_ASSIGN resolved as shift (SY_EQUALS < SY_ASSIGN).
    Conflict between rule 14 and token SY_NOT resolved as shift (SY_EQUALS < SY_NOT).
=======
   76 all_commands: . complex_cmd
   77             | . simple_cmd
   78 complex_cmd: . KW_BEGIN cmd_list KW_END
   82 simple_cmd: . IDENT SY_ASSIGN expression
   83           | . KW_RESULT SY_ASSIGN expression
   84           | . if_cmd
   85           | . for_cmd
   86           | . while_cmd
   87           | . IDENT SY_COLON all_commands
   88           | . KW_GOTO IDENT
   89           | . KW_RETURN
   90           | . IDENT SY_LEFT_BRACKET arglist
   91           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   93 while_cmd: . KW_WHILE expression KW_DO all_commands
   94          | . KW_REPEAT all_commands KW_UNTIL expression
   95 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   96        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   97 if_cmd: . KW_IF expression KW_THEN all_commands
   97       | KW_IF expression KW_THEN . all_commands
   98       | . KW_ELSE KW_IF expression KW_THEN all_commands
   98       | KW_ELSE KW_IF expression KW_THEN . all_commands
   99       | . KW_ELSE all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_ELSE    shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    all_commands  go to state 185
    complex_cmd   go to state 86
    simple_cmd    go to state 87
    proc_call     go to state 61
    while_cmd     go to state 62
    for_cmd       go to state 63
    if_cmd        go to state 64
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 158

<<<<<<< HEAD
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   15           | expression SY_LESS expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 15 (binary_exp)

    Conflict between rule 15 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS).
    Conflict between rule 15 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS).
    Conflict between rule 15 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS).
    Conflict between rule 15 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS).
    Conflict between rule 15 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS).
    Conflict between rule 15 and token SY_LESS resolved as reduce (%left SY_LESS).
    Conflict between rule 15 and token SY_GREATER resolved as shift (SY_LESS < SY_GREATER).
    Conflict between rule 15 and token SY_LESS_EQUALS resolved as shift (SY_LESS < SY_LESS_EQUALS).
    Conflict between rule 15 and token SY_GREATER_EQUALS resolved as shift (SY_LESS < SY_GREATER_EQUALS).
    Conflict between rule 15 and token SY_LESS_BIGGER resolved as shift (SY_LESS < SY_LESS_BIGGER).
    Conflict between rule 15 and token SY_AND resolved as shift (SY_LESS < SY_AND).
    Conflict between rule 15 and token SY_OR resolved as shift (SY_LESS < SY_OR).
    Conflict between rule 15 and token SY_ASSIGN resolved as shift (SY_LESS < SY_ASSIGN).
    Conflict between rule 15 and token SY_NOT resolved as shift (SY_LESS < SY_NOT).
=======
    4 arguments: arglist .  [SY_RIGHT_BRACKET]
    6 arglist: arglist . SY_COMMA expression

    SY_COMMA  shift, and go to state 156

    $default  reduce using rule 4 (arguments)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 159

<<<<<<< HEAD
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   16           | expression SY_GREATER expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 16 (binary_exp)

    Conflict between rule 16 and token SY_DASH resolved as reduce (SY_DASH < SY_GREATER).
    Conflict between rule 16 and token SY_PLUS resolved as reduce (SY_PLUS < SY_GREATER).
    Conflict between rule 16 and token SY_STAR resolved as reduce (SY_STAR < SY_GREATER).
    Conflict between rule 16 and token SY_SLASH resolved as reduce (SY_SLASH < SY_GREATER).
    Conflict between rule 16 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_GREATER).
    Conflict between rule 16 and token SY_LESS resolved as reduce (SY_LESS < SY_GREATER).
    Conflict between rule 16 and token SY_GREATER resolved as reduce (%left SY_GREATER).
    Conflict between rule 16 and token SY_LESS_EQUALS resolved as shift (SY_GREATER < SY_LESS_EQUALS).
    Conflict between rule 16 and token SY_GREATER_EQUALS resolved as shift (SY_GREATER < SY_GREATER_EQUALS).
    Conflict between rule 16 and token SY_LESS_BIGGER resolved as shift (SY_GREATER < SY_LESS_BIGGER).
    Conflict between rule 16 and token SY_AND resolved as shift (SY_GREATER < SY_AND).
    Conflict between rule 16 and token SY_OR resolved as shift (SY_GREATER < SY_OR).
    Conflict between rule 16 and token SY_ASSIGN resolved as shift (SY_GREATER < SY_ASSIGN).
    Conflict between rule 16 and token SY_NOT resolved as shift (SY_GREATER < SY_NOT).
=======
   32 expression: SY_LEFT_BRACKET expression SY_RIGHT_BRACKET .

    $default  reduce using rule 32 (expression)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 160

    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
<<<<<<< HEAD
   17           | expression SY_LESS_EQUALS expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 17 (binary_exp)

    Conflict between rule 17 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_LESS resolved as reduce (SY_LESS < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_GREATER resolved as reduce (SY_GREATER < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_LESS_EQUALS resolved as reduce (%left SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_GREATER_EQUALS resolved as shift (SY_LESS_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 17 and token SY_LESS_BIGGER resolved as shift (SY_LESS_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 17 and token SY_AND resolved as shift (SY_LESS_EQUALS < SY_AND).
    Conflict between rule 17 and token SY_OR resolved as shift (SY_LESS_EQUALS < SY_OR).
    Conflict between rule 17 and token SY_ASSIGN resolved as shift (SY_LESS_EQUALS < SY_ASSIGN).
    Conflict between rule 17 and token SY_NOT resolved as shift (SY_LESS_EQUALS < SY_NOT).
=======
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   21           | expression KW_AND expression .  [KW_END, KW_AND, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    KW_DIV             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 21 (binary_exp)

    Conflict between rule 21 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 21 and token KW_DIV resolved as shift (KW_AND < KW_DIV).
    Conflict between rule 21 and token KW_MOD resolved as shift (KW_AND < KW_MOD).
    Conflict between rule 21 and token SY_DASH resolved as shift (KW_AND < SY_DASH).
    Conflict between rule 21 and token SY_PLUS resolved as shift (KW_AND < SY_PLUS).
    Conflict between rule 21 and token SY_STAR resolved as shift (KW_AND < SY_STAR).
    Conflict between rule 21 and token SY_SLASH resolved as shift (KW_AND < SY_SLASH).
    Conflict between rule 21 and token SY_EQUALS resolved as shift (KW_AND < SY_EQUALS).
    Conflict between rule 21 and token SY_LESS resolved as shift (KW_AND < SY_LESS).
    Conflict between rule 21 and token SY_GREATER resolved as shift (KW_AND < SY_GREATER).
    Conflict between rule 21 and token SY_LESS_EQUALS resolved as shift (KW_AND < SY_LESS_EQUALS).
    Conflict between rule 21 and token SY_GREATER_EQUALS resolved as shift (KW_AND < SY_GREATER_EQUALS).
    Conflict between rule 21 and token SY_LESS_BIGGER resolved as shift (KW_AND < SY_LESS_BIGGER).
    Conflict between rule 21 and token SY_AND resolved as shift (KW_AND < SY_AND).
    Conflict between rule 21 and token SY_OR resolved as shift (KW_AND < SY_OR).
    Conflict between rule 21 and token SY_ASSIGN resolved as shift (KW_AND < SY_ASSIGN).
    Conflict between rule 21 and token SY_NOT resolved as shift (KW_AND < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 161

    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
<<<<<<< HEAD
   18           | expression SY_GREATER_EQUALS expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_LESS_BIGGER  shift, and go to state 132
    SY_AND          shift, and go to state 133
    SY_OR           shift, and go to state 134
    SY_ASSIGN       shift, and go to state 135
    SY_NOT          shift, and go to state 136

    $default  reduce using rule 18 (binary_exp)

    Conflict between rule 18 and token SY_DASH resolved as reduce (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_PLUS resolved as reduce (SY_PLUS < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_STAR resolved as reduce (SY_STAR < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_SLASH resolved as reduce (SY_SLASH < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_LESS resolved as reduce (SY_LESS < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_GREATER resolved as reduce (SY_GREATER < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_GREATER_EQUALS resolved as reduce (%left SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_LESS_BIGGER resolved as shift (SY_GREATER_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 18 and token SY_AND resolved as shift (SY_GREATER_EQUALS < SY_AND).
    Conflict between rule 18 and token SY_OR resolved as shift (SY_GREATER_EQUALS < SY_OR).
    Conflict between rule 18 and token SY_ASSIGN resolved as shift (SY_GREATER_EQUALS < SY_ASSIGN).
    Conflict between rule 18 and token SY_NOT resolved as shift (SY_GREATER_EQUALS < SY_NOT).
=======
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression
   25           | expression KW_DIV expression .  [KW_END, KW_AND, KW_DIV, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]

    KW_MOD             shift, and go to state 128
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 25 (binary_exp)

    Conflict between rule 25 and token KW_AND resolved as reduce (KW_AND < KW_DIV).
    Conflict between rule 25 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 25 and token KW_MOD resolved as shift (KW_DIV < KW_MOD).
    Conflict between rule 25 and token SY_DASH resolved as shift (KW_DIV < SY_DASH).
    Conflict between rule 25 and token SY_PLUS resolved as shift (KW_DIV < SY_PLUS).
    Conflict between rule 25 and token SY_STAR resolved as shift (KW_DIV < SY_STAR).
    Conflict between rule 25 and token SY_SLASH resolved as shift (KW_DIV < SY_SLASH).
    Conflict between rule 25 and token SY_EQUALS resolved as shift (KW_DIV < SY_EQUALS).
    Conflict between rule 25 and token SY_LESS resolved as shift (KW_DIV < SY_LESS).
    Conflict between rule 25 and token SY_GREATER resolved as shift (KW_DIV < SY_GREATER).
    Conflict between rule 25 and token SY_LESS_EQUALS resolved as shift (KW_DIV < SY_LESS_EQUALS).
    Conflict between rule 25 and token SY_GREATER_EQUALS resolved as shift (KW_DIV < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_LESS_BIGGER resolved as shift (KW_DIV < SY_LESS_BIGGER).
    Conflict between rule 25 and token SY_AND resolved as shift (KW_DIV < SY_AND).
    Conflict between rule 25 and token SY_OR resolved as shift (KW_DIV < SY_OR).
    Conflict between rule 25 and token SY_ASSIGN resolved as shift (KW_DIV < SY_ASSIGN).
    Conflict between rule 25 and token SY_NOT resolved as shift (KW_DIV < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 162

    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
<<<<<<< HEAD
   19           | expression SY_LESS_BIGGER expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   20           | expression . SY_AND expression
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_AND     shift, and go to state 133
    SY_OR      shift, and go to state 134
    SY_ASSIGN  shift, and go to state 135
    SY_NOT     shift, and go to state 136

    $default  reduce using rule 19 (binary_exp)

    Conflict between rule 19 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_LESS resolved as reduce (SY_LESS < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_GREATER resolved as reduce (SY_GREATER < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_LESS_BIGGER resolved as reduce (%left SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_AND resolved as shift (SY_LESS_BIGGER < SY_AND).
    Conflict between rule 19 and token SY_OR resolved as shift (SY_LESS_BIGGER < SY_OR).
    Conflict between rule 19 and token SY_ASSIGN resolved as shift (SY_LESS_BIGGER < SY_ASSIGN).
    Conflict between rule 19 and token SY_NOT resolved as shift (SY_LESS_BIGGER < SY_NOT).
=======
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   24           | expression KW_MOD expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   25           | expression . KW_DIV expression

    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 24 (binary_exp)

    Conflict between rule 24 and token KW_AND resolved as reduce (KW_AND < KW_MOD).
    Conflict between rule 24 and token KW_DIV resolved as reduce (KW_DIV < KW_MOD).
    Conflict between rule 24 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 24 and token SY_DASH resolved as shift (KW_MOD < SY_DASH).
    Conflict between rule 24 and token SY_PLUS resolved as shift (KW_MOD < SY_PLUS).
    Conflict between rule 24 and token SY_STAR resolved as shift (KW_MOD < SY_STAR).
    Conflict between rule 24 and token SY_SLASH resolved as shift (KW_MOD < SY_SLASH).
    Conflict between rule 24 and token SY_EQUALS resolved as shift (KW_MOD < SY_EQUALS).
    Conflict between rule 24 and token SY_LESS resolved as shift (KW_MOD < SY_LESS).
    Conflict between rule 24 and token SY_GREATER resolved as shift (KW_MOD < SY_GREATER).
    Conflict between rule 24 and token SY_LESS_EQUALS resolved as shift (KW_MOD < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_GREATER_EQUALS resolved as shift (KW_MOD < SY_GREATER_EQUALS).
    Conflict between rule 24 and token SY_LESS_BIGGER resolved as shift (KW_MOD < SY_LESS_BIGGER).
    Conflict between rule 24 and token SY_AND resolved as shift (KW_MOD < SY_AND).
    Conflict between rule 24 and token SY_OR resolved as shift (KW_MOD < SY_OR).
    Conflict between rule 24 and token SY_ASSIGN resolved as shift (KW_MOD < SY_ASSIGN).
    Conflict between rule 24 and token SY_NOT resolved as shift (KW_MOD < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 163

<<<<<<< HEAD
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   20           | expression SY_AND expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_OR      shift, and go to state 134
    SY_ASSIGN  shift, and go to state 135
    SY_NOT     shift, and go to state 136

    $default  reduce using rule 20 (binary_exp)

    Conflict between rule 20 and token SY_DASH resolved as reduce (SY_DASH < SY_AND).
    Conflict between rule 20 and token SY_PLUS resolved as reduce (SY_PLUS < SY_AND).
    Conflict between rule 20 and token SY_STAR resolved as reduce (SY_STAR < SY_AND).
    Conflict between rule 20 and token SY_SLASH resolved as reduce (SY_SLASH < SY_AND).
    Conflict between rule 20 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_AND).
    Conflict between rule 20 and token SY_LESS resolved as reduce (SY_LESS < SY_AND).
    Conflict between rule 20 and token SY_GREATER resolved as reduce (SY_GREATER < SY_AND).
    Conflict between rule 20 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_AND).
    Conflict between rule 20 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_AND).
    Conflict between rule 20 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_AND).
    Conflict between rule 20 and token SY_AND resolved as reduce (%left SY_AND).
    Conflict between rule 20 and token SY_OR resolved as shift (SY_AND < SY_OR).
    Conflict between rule 20 and token SY_ASSIGN resolved as shift (SY_AND < SY_ASSIGN).
    Conflict between rule 20 and token SY_NOT resolved as shift (SY_AND < SY_NOT).
=======
   97 if_cmd: KW_IF expression KW_THEN all_commands .

    $default  reduce using rule 97 (if_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 164

    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
<<<<<<< HEAD
=======
   10           | expression SY_DASH expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
<<<<<<< HEAD
   21           | expression . SY_OR expression
   21           | expression SY_OR expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   22           | expression . SY_ASSIGN expression

    SY_ASSIGN  shift, and go to state 135
    SY_NOT     shift, and go to state 136

    $default  reduce using rule 21 (binary_exp)

    Conflict between rule 21 and token SY_DASH resolved as reduce (SY_DASH < SY_OR).
    Conflict between rule 21 and token SY_PLUS resolved as reduce (SY_PLUS < SY_OR).
    Conflict between rule 21 and token SY_STAR resolved as reduce (SY_STAR < SY_OR).
    Conflict between rule 21 and token SY_SLASH resolved as reduce (SY_SLASH < SY_OR).
    Conflict between rule 21 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_OR).
    Conflict between rule 21 and token SY_LESS resolved as reduce (SY_LESS < SY_OR).
    Conflict between rule 21 and token SY_GREATER resolved as reduce (SY_GREATER < SY_OR).
    Conflict between rule 21 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_OR).
    Conflict between rule 21 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_OR).
    Conflict between rule 21 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_OR).
    Conflict between rule 21 and token SY_AND resolved as reduce (SY_AND < SY_OR).
    Conflict between rule 21 and token SY_OR resolved as reduce (%left SY_OR).
    Conflict between rule 21 and token SY_ASSIGN resolved as shift (SY_OR < SY_ASSIGN).
    Conflict between rule 21 and token SY_NOT resolved as shift (SY_OR < SY_NOT).
=======
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 10 (binary_exp)

    Conflict between rule 10 and token KW_AND resolved as reduce (KW_AND < SY_DASH).
    Conflict between rule 10 and token KW_DIV resolved as reduce (KW_DIV < SY_DASH).
    Conflict between rule 10 and token KW_MOD resolved as reduce (KW_MOD < SY_DASH).
    Conflict between rule 10 and token SY_DASH resolved as shift (%right SY_DASH).
    Conflict between rule 10 and token SY_PLUS resolved as shift (SY_DASH < SY_PLUS).
    Conflict between rule 10 and token SY_STAR resolved as shift (SY_DASH < SY_STAR).
    Conflict between rule 10 and token SY_SLASH resolved as shift (SY_DASH < SY_SLASH).
    Conflict between rule 10 and token SY_EQUALS resolved as shift (SY_DASH < SY_EQUALS).
    Conflict between rule 10 and token SY_LESS resolved as shift (SY_DASH < SY_LESS).
    Conflict between rule 10 and token SY_GREATER resolved as shift (SY_DASH < SY_GREATER).
    Conflict between rule 10 and token SY_LESS_EQUALS resolved as shift (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 10 and token SY_GREATER_EQUALS resolved as shift (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 10 and token SY_LESS_BIGGER resolved as shift (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 10 and token SY_AND resolved as shift (SY_DASH < SY_AND).
    Conflict between rule 10 and token SY_OR resolved as shift (SY_DASH < SY_OR).
    Conflict between rule 10 and token SY_ASSIGN resolved as shift (SY_DASH < SY_ASSIGN).
    Conflict between rule 10 and token SY_NOT resolved as shift (SY_DASH < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 165

    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
<<<<<<< HEAD
=======
   11           | expression SY_PLUS expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
<<<<<<< HEAD
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression
   22           | expression SY_ASSIGN expression .  [KW_END, KW_DO, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]

    SY_NOT  shift, and go to state 136

    $default  reduce using rule 22 (binary_exp)

    Conflict between rule 22 and token SY_DASH resolved as reduce (SY_DASH < SY_ASSIGN).
    Conflict between rule 22 and token SY_PLUS resolved as reduce (SY_PLUS < SY_ASSIGN).
    Conflict between rule 22 and token SY_STAR resolved as reduce (SY_STAR < SY_ASSIGN).
    Conflict between rule 22 and token SY_SLASH resolved as reduce (SY_SLASH < SY_ASSIGN).
    Conflict between rule 22 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_ASSIGN).
    Conflict between rule 22 and token SY_LESS resolved as reduce (SY_LESS < SY_ASSIGN).
    Conflict between rule 22 and token SY_GREATER resolved as reduce (SY_GREATER < SY_ASSIGN).
    Conflict between rule 22 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_ASSIGN).
    Conflict between rule 22 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_ASSIGN).
    Conflict between rule 22 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_ASSIGN).
    Conflict between rule 22 and token SY_AND resolved as reduce (SY_AND < SY_ASSIGN).
    Conflict between rule 22 and token SY_OR resolved as reduce (SY_OR < SY_ASSIGN).
    Conflict between rule 22 and token SY_ASSIGN resolved as reduce (%left SY_ASSIGN).
    Conflict between rule 22 and token SY_NOT resolved as shift (SY_ASSIGN < SY_NOT).
=======
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 11 (binary_exp)

    Conflict between rule 11 and token KW_AND resolved as reduce (KW_AND < SY_PLUS).
    Conflict between rule 11 and token KW_DIV resolved as reduce (KW_DIV < SY_PLUS).
    Conflict between rule 11 and token KW_MOD resolved as reduce (KW_MOD < SY_PLUS).
    Conflict between rule 11 and token SY_DASH resolved as reduce (SY_DASH < SY_PLUS).
    Conflict between rule 11 and token SY_PLUS resolved as shift (%right SY_PLUS).
    Conflict between rule 11 and token SY_STAR resolved as shift (SY_PLUS < SY_STAR).
    Conflict between rule 11 and token SY_SLASH resolved as shift (SY_PLUS < SY_SLASH).
    Conflict between rule 11 and token SY_EQUALS resolved as shift (SY_PLUS < SY_EQUALS).
    Conflict between rule 11 and token SY_LESS resolved as shift (SY_PLUS < SY_LESS).
    Conflict between rule 11 and token SY_GREATER resolved as shift (SY_PLUS < SY_GREATER).
    Conflict between rule 11 and token SY_LESS_EQUALS resolved as shift (SY_PLUS < SY_LESS_EQUALS).
    Conflict between rule 11 and token SY_GREATER_EQUALS resolved as shift (SY_PLUS < SY_GREATER_EQUALS).
    Conflict between rule 11 and token SY_LESS_BIGGER resolved as shift (SY_PLUS < SY_LESS_BIGGER).
    Conflict between rule 11 and token SY_AND resolved as shift (SY_PLUS < SY_AND).
    Conflict between rule 11 and token SY_OR resolved as shift (SY_PLUS < SY_OR).
    Conflict between rule 11 and token SY_ASSIGN resolved as shift (SY_PLUS < SY_ASSIGN).
    Conflict between rule 11 and token SY_NOT resolved as shift (SY_PLUS < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 166

<<<<<<< HEAD
   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . return_type SY_SEMICOLON function_body
   69 return_type: . %empty  [SY_SEMICOLON]
   70            | . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 141

    $default  reduce using rule 69 (return_type)

    return_type  go to state 173
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   12           | expression SY_STAR expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 12 (binary_exp)

    Conflict between rule 12 and token KW_AND resolved as reduce (KW_AND < SY_STAR).
    Conflict between rule 12 and token KW_DIV resolved as reduce (KW_DIV < SY_STAR).
    Conflict between rule 12 and token KW_MOD resolved as reduce (KW_MOD < SY_STAR).
    Conflict between rule 12 and token SY_DASH resolved as reduce (SY_DASH < SY_STAR).
    Conflict between rule 12 and token SY_PLUS resolved as reduce (SY_PLUS < SY_STAR).
    Conflict between rule 12 and token SY_STAR resolved as reduce (%left SY_STAR).
    Conflict between rule 12 and token SY_SLASH resolved as shift (SY_STAR < SY_SLASH).
    Conflict between rule 12 and token SY_EQUALS resolved as shift (SY_STAR < SY_EQUALS).
    Conflict between rule 12 and token SY_LESS resolved as shift (SY_STAR < SY_LESS).
    Conflict between rule 12 and token SY_GREATER resolved as shift (SY_STAR < SY_GREATER).
    Conflict between rule 12 and token SY_LESS_EQUALS resolved as shift (SY_STAR < SY_LESS_EQUALS).
    Conflict between rule 12 and token SY_GREATER_EQUALS resolved as shift (SY_STAR < SY_GREATER_EQUALS).
    Conflict between rule 12 and token SY_LESS_BIGGER resolved as shift (SY_STAR < SY_LESS_BIGGER).
    Conflict between rule 12 and token SY_AND resolved as shift (SY_STAR < SY_AND).
    Conflict between rule 12 and token SY_OR resolved as shift (SY_STAR < SY_OR).
    Conflict between rule 12 and token SY_ASSIGN resolved as shift (SY_STAR < SY_ASSIGN).
    Conflict between rule 12 and token SY_NOT resolved as shift (SY_STAR < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 167

<<<<<<< HEAD
   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . SY_SEMICOLON procedure_body

    SY_SEMICOLON  shift, and go to state 174
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   13           | expression SY_SLASH expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 13 (binary_exp)

    Conflict between rule 13 and token KW_AND resolved as reduce (KW_AND < SY_SLASH).
    Conflict between rule 13 and token KW_DIV resolved as reduce (KW_DIV < SY_SLASH).
    Conflict between rule 13 and token KW_MOD resolved as reduce (KW_MOD < SY_SLASH).
    Conflict between rule 13 and token SY_DASH resolved as reduce (SY_DASH < SY_SLASH).
    Conflict between rule 13 and token SY_PLUS resolved as reduce (SY_PLUS < SY_SLASH).
    Conflict between rule 13 and token SY_STAR resolved as reduce (SY_STAR < SY_SLASH).
    Conflict between rule 13 and token SY_SLASH resolved as reduce (%left SY_SLASH).
    Conflict between rule 13 and token SY_EQUALS resolved as shift (SY_SLASH < SY_EQUALS).
    Conflict between rule 13 and token SY_LESS resolved as shift (SY_SLASH < SY_LESS).
    Conflict between rule 13 and token SY_GREATER resolved as shift (SY_SLASH < SY_GREATER).
    Conflict between rule 13 and token SY_LESS_EQUALS resolved as shift (SY_SLASH < SY_LESS_EQUALS).
    Conflict between rule 13 and token SY_GREATER_EQUALS resolved as shift (SY_SLASH < SY_GREATER_EQUALS).
    Conflict between rule 13 and token SY_LESS_BIGGER resolved as shift (SY_SLASH < SY_LESS_BIGGER).
    Conflict between rule 13 and token SY_AND resolved as shift (SY_SLASH < SY_AND).
    Conflict between rule 13 and token SY_OR resolved as shift (SY_SLASH < SY_OR).
    Conflict between rule 13 and token SY_ASSIGN resolved as shift (SY_SLASH < SY_ASSIGN).
    Conflict between rule 13 and token SY_NOT resolved as shift (SY_SLASH < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 168

<<<<<<< HEAD
   70 return_type: SY_COLON advanced_data_type .

    $default  reduce using rule 70 (return_type)
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   14           | expression SY_EQUALS expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 14 (binary_exp)

    Conflict between rule 14 and token KW_AND resolved as reduce (KW_AND < SY_EQUALS).
    Conflict between rule 14 and token KW_DIV resolved as reduce (KW_DIV < SY_EQUALS).
    Conflict between rule 14 and token KW_MOD resolved as reduce (KW_MOD < SY_EQUALS).
    Conflict between rule 14 and token SY_DASH resolved as reduce (SY_DASH < SY_EQUALS).
    Conflict between rule 14 and token SY_PLUS resolved as reduce (SY_PLUS < SY_EQUALS).
    Conflict between rule 14 and token SY_STAR resolved as reduce (SY_STAR < SY_EQUALS).
    Conflict between rule 14 and token SY_SLASH resolved as reduce (SY_SLASH < SY_EQUALS).
    Conflict between rule 14 and token SY_EQUALS resolved as reduce (%left SY_EQUALS).
    Conflict between rule 14 and token SY_LESS resolved as shift (SY_EQUALS < SY_LESS).
    Conflict between rule 14 and token SY_GREATER resolved as shift (SY_EQUALS < SY_GREATER).
    Conflict between rule 14 and token SY_LESS_EQUALS resolved as shift (SY_EQUALS < SY_LESS_EQUALS).
    Conflict between rule 14 and token SY_GREATER_EQUALS resolved as shift (SY_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 14 and token SY_LESS_BIGGER resolved as shift (SY_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 14 and token SY_AND resolved as shift (SY_EQUALS < SY_AND).
    Conflict between rule 14 and token SY_OR resolved as shift (SY_EQUALS < SY_OR).
    Conflict between rule 14 and token SY_ASSIGN resolved as shift (SY_EQUALS < SY_ASSIGN).
    Conflict between rule 14 and token SY_NOT resolved as shift (SY_EQUALS < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 169

<<<<<<< HEAD
   38 advanced_data_type: . simple_data_type
   39                   | . KW_ARRAY KW_OF simple_data_type
   40                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   41                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . IDENT
   68 args_decl_list: args_decl_list SY_SEMICOLON IDENT SY_COLON . advanced_data_type

    IDENT        shift, and go to state 20
    KW_FUNCTION  shift, and go to state 21
    KW_ARRAY     shift, and go to state 22
    KW_BOOLEAN   shift, and go to state 23
    KW_REAL      shift, and go to state 24
    KW_CHAR      shift, and go to state 25
    KW_INTEGER   shift, and go to state 26

    advanced_data_type  go to state 175
    simple_data_type    go to state 28
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   15           | expression SY_LESS expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 15 (binary_exp)

    Conflict between rule 15 and token KW_AND resolved as reduce (KW_AND < SY_LESS).
    Conflict between rule 15 and token KW_DIV resolved as reduce (KW_DIV < SY_LESS).
    Conflict between rule 15 and token KW_MOD resolved as reduce (KW_MOD < SY_LESS).
    Conflict between rule 15 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS).
    Conflict between rule 15 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS).
    Conflict between rule 15 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS).
    Conflict between rule 15 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS).
    Conflict between rule 15 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS).
    Conflict between rule 15 and token SY_LESS resolved as reduce (%left SY_LESS).
    Conflict between rule 15 and token SY_GREATER resolved as shift (SY_LESS < SY_GREATER).
    Conflict between rule 15 and token SY_LESS_EQUALS resolved as shift (SY_LESS < SY_LESS_EQUALS).
    Conflict between rule 15 and token SY_GREATER_EQUALS resolved as shift (SY_LESS < SY_GREATER_EQUALS).
    Conflict between rule 15 and token SY_LESS_BIGGER resolved as shift (SY_LESS < SY_LESS_BIGGER).
    Conflict between rule 15 and token SY_AND resolved as shift (SY_LESS < SY_AND).
    Conflict between rule 15 and token SY_OR resolved as shift (SY_LESS < SY_OR).
    Conflict between rule 15 and token SY_ASSIGN resolved as shift (SY_LESS < SY_ASSIGN).
    Conflict between rule 15 and token SY_NOT resolved as shift (SY_LESS < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 170

<<<<<<< HEAD
    6 arglist: arglist SY_COMMA expression .  [KW_END, KW_UNTIL, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
=======
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
<<<<<<< HEAD
=======
   16           | expression SY_GREATER expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
<<<<<<< HEAD
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 6 (arglist)
=======
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 16 (binary_exp)

    Conflict between rule 16 and token KW_AND resolved as reduce (KW_AND < SY_GREATER).
    Conflict between rule 16 and token KW_DIV resolved as reduce (KW_DIV < SY_GREATER).
    Conflict between rule 16 and token KW_MOD resolved as reduce (KW_MOD < SY_GREATER).
    Conflict between rule 16 and token SY_DASH resolved as reduce (SY_DASH < SY_GREATER).
    Conflict between rule 16 and token SY_PLUS resolved as reduce (SY_PLUS < SY_GREATER).
    Conflict between rule 16 and token SY_STAR resolved as reduce (SY_STAR < SY_GREATER).
    Conflict between rule 16 and token SY_SLASH resolved as reduce (SY_SLASH < SY_GREATER).
    Conflict between rule 16 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_GREATER).
    Conflict between rule 16 and token SY_LESS resolved as reduce (SY_LESS < SY_GREATER).
    Conflict between rule 16 and token SY_GREATER resolved as reduce (%left SY_GREATER).
    Conflict between rule 16 and token SY_LESS_EQUALS resolved as shift (SY_GREATER < SY_LESS_EQUALS).
    Conflict between rule 16 and token SY_GREATER_EQUALS resolved as shift (SY_GREATER < SY_GREATER_EQUALS).
    Conflict between rule 16 and token SY_LESS_BIGGER resolved as shift (SY_GREATER < SY_LESS_BIGGER).
    Conflict between rule 16 and token SY_AND resolved as shift (SY_GREATER < SY_AND).
    Conflict between rule 16 and token SY_OR resolved as shift (SY_GREATER < SY_OR).
    Conflict between rule 16 and token SY_ASSIGN resolved as shift (SY_GREATER < SY_ASSIGN).
    Conflict between rule 16 and token SY_NOT resolved as shift (SY_GREATER < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 171

<<<<<<< HEAD
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   91 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO . expression KW_DO all_commands

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 176
    proc_call   go to state 96
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   17           | expression SY_LESS_EQUALS expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 17 (binary_exp)

    Conflict between rule 17 and token KW_AND resolved as reduce (KW_AND < SY_LESS_EQUALS).
    Conflict between rule 17 and token KW_DIV resolved as reduce (KW_DIV < SY_LESS_EQUALS).
    Conflict between rule 17 and token KW_MOD resolved as reduce (KW_MOD < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_LESS resolved as reduce (SY_LESS < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_GREATER resolved as reduce (SY_GREATER < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_LESS_EQUALS resolved as reduce (%left SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_GREATER_EQUALS resolved as shift (SY_LESS_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 17 and token SY_LESS_BIGGER resolved as shift (SY_LESS_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 17 and token SY_AND resolved as shift (SY_LESS_EQUALS < SY_AND).
    Conflict between rule 17 and token SY_OR resolved as shift (SY_LESS_EQUALS < SY_OR).
    Conflict between rule 17 and token SY_ASSIGN resolved as shift (SY_LESS_EQUALS < SY_ASSIGN).
    Conflict between rule 17 and token SY_NOT resolved as shift (SY_LESS_EQUALS < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 172

<<<<<<< HEAD
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression SY_OR expression
   22           | . expression SY_ASSIGN expression
   23 expression: . POSINT
   24           | . REAL
   25           | . STRING
   26           | . IDENT
   27           | . KW_RESULT
   28           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | . unary_exp
   30           | . binary_exp
   31           | . proc_call
   32           | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   92 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO . expression KW_DO all_commands

    IDENT            shift, and go to state 85
    POSINT           shift, and go to state 86
    REAL             shift, and go to state 87
    STRING           shift, and go to state 88
    KW_RESULT        shift, and go to state 89
    SY_DASH          shift, and go to state 90
    SY_NOT           shift, and go to state 91
    SY_LEFT_BRACKET  shift, and go to state 92

    unary_exp   go to state 93
    binary_exp  go to state 94
    expression  go to state 177
    proc_call   go to state 96
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   18           | expression SY_GREATER_EQUALS expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_LESS_BIGGER  shift, and go to state 139
    SY_AND          shift, and go to state 140
    SY_OR           shift, and go to state 141
    SY_ASSIGN       shift, and go to state 142
    SY_NOT          shift, and go to state 143

    $default  reduce using rule 18 (binary_exp)

    Conflict between rule 18 and token KW_AND resolved as reduce (KW_AND < SY_GREATER_EQUALS).
    Conflict between rule 18 and token KW_DIV resolved as reduce (KW_DIV < SY_GREATER_EQUALS).
    Conflict between rule 18 and token KW_MOD resolved as reduce (KW_MOD < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_DASH resolved as reduce (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_PLUS resolved as reduce (SY_PLUS < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_STAR resolved as reduce (SY_STAR < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_SLASH resolved as reduce (SY_SLASH < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_LESS resolved as reduce (SY_LESS < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_GREATER resolved as reduce (SY_GREATER < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_GREATER_EQUALS resolved as reduce (%left SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_LESS_BIGGER resolved as shift (SY_GREATER_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 18 and token SY_AND resolved as shift (SY_GREATER_EQUALS < SY_AND).
    Conflict between rule 18 and token SY_OR resolved as shift (SY_GREATER_EQUALS < SY_OR).
    Conflict between rule 18 and token SY_ASSIGN resolved as shift (SY_GREATER_EQUALS < SY_ASSIGN).
    Conflict between rule 18 and token SY_NOT resolved as shift (SY_GREATER_EQUALS < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 173

<<<<<<< HEAD
   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type . SY_SEMICOLON function_body

    SY_SEMICOLON  shift, and go to state 178
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   19           | expression SY_LESS_BIGGER expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_AND     shift, and go to state 140
    SY_OR      shift, and go to state 141
    SY_ASSIGN  shift, and go to state 142
    SY_NOT     shift, and go to state 143

    $default  reduce using rule 19 (binary_exp)

    Conflict between rule 19 and token KW_AND resolved as reduce (KW_AND < SY_LESS_BIGGER).
    Conflict between rule 19 and token KW_DIV resolved as reduce (KW_DIV < SY_LESS_BIGGER).
    Conflict between rule 19 and token KW_MOD resolved as reduce (KW_MOD < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_LESS resolved as reduce (SY_LESS < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_GREATER resolved as reduce (SY_GREATER < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_LESS_BIGGER resolved as reduce (%left SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_AND resolved as shift (SY_LESS_BIGGER < SY_AND).
    Conflict between rule 19 and token SY_OR resolved as shift (SY_LESS_BIGGER < SY_OR).
    Conflict between rule 19 and token SY_ASSIGN resolved as shift (SY_LESS_BIGGER < SY_ASSIGN).
    Conflict between rule 19 and token SY_NOT resolved as shift (SY_LESS_BIGGER < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 174

<<<<<<< HEAD
   49 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   50         | . KW_VAR var_decl_list
   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON . procedure_body
   71 procedure_body: . var_decl subprogram_list complex_cmd SY_SEMICOLON

    KW_VAR  shift, and go to state 12

    $default  reduce using rule 49 (var_decl)

    var_decl        go to state 179
    procedure_body  go to state 180
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   20           | expression SY_AND expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_OR      shift, and go to state 141
    SY_ASSIGN  shift, and go to state 142
    SY_NOT     shift, and go to state 143

    $default  reduce using rule 20 (binary_exp)

    Conflict between rule 20 and token KW_AND resolved as reduce (KW_AND < SY_AND).
    Conflict between rule 20 and token KW_DIV resolved as reduce (KW_DIV < SY_AND).
    Conflict between rule 20 and token KW_MOD resolved as reduce (KW_MOD < SY_AND).
    Conflict between rule 20 and token SY_DASH resolved as reduce (SY_DASH < SY_AND).
    Conflict between rule 20 and token SY_PLUS resolved as reduce (SY_PLUS < SY_AND).
    Conflict between rule 20 and token SY_STAR resolved as reduce (SY_STAR < SY_AND).
    Conflict between rule 20 and token SY_SLASH resolved as reduce (SY_SLASH < SY_AND).
    Conflict between rule 20 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_AND).
    Conflict between rule 20 and token SY_LESS resolved as reduce (SY_LESS < SY_AND).
    Conflict between rule 20 and token SY_GREATER resolved as reduce (SY_GREATER < SY_AND).
    Conflict between rule 20 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_AND).
    Conflict between rule 20 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_AND).
    Conflict between rule 20 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_AND).
    Conflict between rule 20 and token SY_AND resolved as reduce (%left SY_AND).
    Conflict between rule 20 and token SY_OR resolved as shift (SY_AND < SY_OR).
    Conflict between rule 20 and token SY_ASSIGN resolved as shift (SY_AND < SY_ASSIGN).
    Conflict between rule 20 and token SY_NOT resolved as shift (SY_AND < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 175

<<<<<<< HEAD
   68 args_decl_list: args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type .

    $default  reduce using rule 68 (args_decl_list)
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   22           | expression SY_OR expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_ASSIGN  shift, and go to state 142
    SY_NOT     shift, and go to state 143

    $default  reduce using rule 22 (binary_exp)

    Conflict between rule 22 and token KW_AND resolved as reduce (KW_AND < SY_OR).
    Conflict between rule 22 and token KW_DIV resolved as reduce (KW_DIV < SY_OR).
    Conflict between rule 22 and token KW_MOD resolved as reduce (KW_MOD < SY_OR).
    Conflict between rule 22 and token SY_DASH resolved as reduce (SY_DASH < SY_OR).
    Conflict between rule 22 and token SY_PLUS resolved as reduce (SY_PLUS < SY_OR).
    Conflict between rule 22 and token SY_STAR resolved as reduce (SY_STAR < SY_OR).
    Conflict between rule 22 and token SY_SLASH resolved as reduce (SY_SLASH < SY_OR).
    Conflict between rule 22 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_OR).
    Conflict between rule 22 and token SY_LESS resolved as reduce (SY_LESS < SY_OR).
    Conflict between rule 22 and token SY_GREATER resolved as reduce (SY_GREATER < SY_OR).
    Conflict between rule 22 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_OR).
    Conflict between rule 22 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_OR).
    Conflict between rule 22 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_OR).
    Conflict between rule 22 and token SY_AND resolved as reduce (SY_AND < SY_OR).
    Conflict between rule 22 and token SY_OR resolved as reduce (%left SY_OR).
    Conflict between rule 22 and token SY_ASSIGN resolved as shift (SY_OR < SY_ASSIGN).
    Conflict between rule 22 and token SY_NOT resolved as shift (SY_OR < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 176

    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
<<<<<<< HEAD
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression
   91 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression . KW_DO all_commands

    KW_DO              shift, and go to state 181
    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136
=======
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   23           | expression SY_ASSIGN expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    SY_NOT  shift, and go to state 143

    $default  reduce using rule 23 (binary_exp)

    Conflict between rule 23 and token KW_AND resolved as reduce (KW_AND < SY_ASSIGN).
    Conflict between rule 23 and token KW_DIV resolved as reduce (KW_DIV < SY_ASSIGN).
    Conflict between rule 23 and token KW_MOD resolved as reduce (KW_MOD < SY_ASSIGN).
    Conflict between rule 23 and token SY_DASH resolved as reduce (SY_DASH < SY_ASSIGN).
    Conflict between rule 23 and token SY_PLUS resolved as reduce (SY_PLUS < SY_ASSIGN).
    Conflict between rule 23 and token SY_STAR resolved as reduce (SY_STAR < SY_ASSIGN).
    Conflict between rule 23 and token SY_SLASH resolved as reduce (SY_SLASH < SY_ASSIGN).
    Conflict between rule 23 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_ASSIGN).
    Conflict between rule 23 and token SY_LESS resolved as reduce (SY_LESS < SY_ASSIGN).
    Conflict between rule 23 and token SY_GREATER resolved as reduce (SY_GREATER < SY_ASSIGN).
    Conflict between rule 23 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_ASSIGN).
    Conflict between rule 23 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_ASSIGN).
    Conflict between rule 23 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_ASSIGN).
    Conflict between rule 23 and token SY_AND resolved as reduce (SY_AND < SY_ASSIGN).
    Conflict between rule 23 and token SY_OR resolved as reduce (SY_OR < SY_ASSIGN).
    Conflict between rule 23 and token SY_ASSIGN resolved as reduce (%left SY_ASSIGN).
    Conflict between rule 23 and token SY_NOT resolved as shift (SY_ASSIGN < SY_NOT).
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 177

    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
<<<<<<< HEAD
   21           | expression . SY_OR expression
   22           | expression . SY_ASSIGN expression
   92 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression . KW_DO all_commands

    KW_DO              shift, and go to state 182
    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136
=======
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression
   95 for_cmd: KW_FOR IDENT SY_ASSIGN expression . KW_TO expression KW_DO all_commands
   96        | KW_FOR IDENT SY_ASSIGN expression . KW_DOWNTO expression KW_DO all_commands

    KW_AND             shift, and go to state 126
    KW_DIV             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    KW_TO              shift, and go to state 186
    KW_DOWNTO          shift, and go to state 187
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 178

<<<<<<< HEAD
   49 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   50         | . KW_VAR var_decl_list
   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON . function_body
   72 function_body: . var_decl subprogram_list complex_cmd SY_SEMICOLON

    KW_VAR  shift, and go to state 12

    $default  reduce using rule 49 (var_decl)

    var_decl       go to state 183
    function_body  go to state 184
=======
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression
   94 while_cmd: KW_REPEAT all_commands KW_UNTIL expression .  [KW_END, KW_UNTIL, SY_SEMICOLON]

    KW_AND             shift, and go to state 126
    KW_DIV             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 94 (while_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 179

<<<<<<< HEAD
   61 subprogram_list: . %empty
   62                | . subprogram_list subprogram
   71 procedure_body: var_decl . subprogram_list complex_cmd SY_SEMICOLON

    $default  reduce using rule 61 (subprogram_list)

    subprogram_list  go to state 185
=======
   93 while_cmd: KW_WHILE expression KW_DO all_commands .

    $default  reduce using rule 93 (while_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 180

<<<<<<< HEAD
   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body .
=======
   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . return_type SY_SEMICOLON function_body
   72 return_type: . %empty  [SY_SEMICOLON]
   73            | . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 151

    $default  reduce using rule 72 (return_type)

    return_type  go to state 188
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b

    $default  reduce using rule 63 (procedure_header)


<<<<<<< HEAD
State 181

   73 all_commands: . complex_cmd
   74             | . simple_cmd
   75 complex_cmd: . KW_BEGIN cmd_list KW_END
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . for_cmd
   82           | . while_cmd
   83           | . IDENT SY_COLON all_commands
   84           | . KW_GOTO IDENT
   85           | . KW_RETURN
   86           | . IDENT SY_LEFT_BRACKET arglist
   87           | . proc_call
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   89 while_cmd: . KW_WHILE expression KW_DO all_commands
   90          | . KW_REPEAT all_commands KW_UNTIL expression
   91 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   91        | KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO . all_commands
   92        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_FOR     shift, and go to state 54
    KW_REPEAT  shift, and go to state 55
    KW_WHILE   shift, and go to state 56

    all_commands  go to state 186
    complex_cmd   go to state 83
    simple_cmd    go to state 84
    proc_call     go to state 59
    while_cmd     go to state 60
    for_cmd       go to state 61
=======
   66 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . SY_SEMICOLON procedure_body

    SY_SEMICOLON  shift, and go to state 189
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 182

<<<<<<< HEAD
   73 all_commands: . complex_cmd
   74             | . simple_cmd
   75 complex_cmd: . KW_BEGIN cmd_list KW_END
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . for_cmd
   82           | . while_cmd
   83           | . IDENT SY_COLON all_commands
   84           | . KW_GOTO IDENT
   85           | . KW_RETURN
   86           | . IDENT SY_LEFT_BRACKET arglist
   87           | . proc_call
   88 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   89 while_cmd: . KW_WHILE expression KW_DO all_commands
   90          | . KW_REPEAT all_commands KW_UNTIL expression
   91 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   92        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   92        | KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO . all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_FOR     shift, and go to state 54
    KW_REPEAT  shift, and go to state 55
    KW_WHILE   shift, and go to state 56

    all_commands  go to state 187
    complex_cmd   go to state 83
    simple_cmd    go to state 84
    proc_call     go to state 59
    while_cmd     go to state 60
    for_cmd       go to state 61
=======
   73 return_type: SY_COLON advanced_data_type .

    $default  reduce using rule 73 (return_type)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 183

<<<<<<< HEAD
   61 subprogram_list: . %empty
   62                | . subprogram_list subprogram
   72 function_body: var_decl . subprogram_list complex_cmd SY_SEMICOLON

    $default  reduce using rule 61 (subprogram_list)

    subprogram_list  go to state 188
=======
   41 advanced_data_type: . simple_data_type
   42                   | . KW_ARRAY KW_OF simple_data_type
   43                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   44                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
   47 simple_data_type: . KW_INTEGER
   48                 | . KW_CHAR
   49                 | . KW_BOOLEAN
   50                 | . KW_REAL
   51                 | . IDENT
   71 args_decl_list: args_decl_list SY_SEMICOLON IDENT SY_COLON . advanced_data_type

    IDENT        shift, and go to state 20
    KW_FUNCTION  shift, and go to state 21
    KW_ARRAY     shift, and go to state 22
    KW_BOOLEAN   shift, and go to state 23
    KW_REAL      shift, and go to state 24
    KW_CHAR      shift, and go to state 25
    KW_INTEGER   shift, and go to state 26

    advanced_data_type  go to state 190
    simple_data_type    go to state 28
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 184

<<<<<<< HEAD
   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body .

    $default  reduce using rule 64 (function_header)
=======
    6 arglist: arglist SY_COMMA expression .  [KW_END, KW_UNTIL, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression

    KW_AND             shift, and go to state 126
    KW_DIV             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143

    $default  reduce using rule 6 (arglist)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 185

<<<<<<< HEAD
   59 subprogram: . procedure_header
   60           | . function_header
   62 subprogram_list: subprogram_list . subprogram
   63 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   64 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   71 procedure_body: var_decl subprogram_list . complex_cmd SY_SEMICOLON
   75 complex_cmd: . KW_BEGIN cmd_list KW_END

    KW_BEGIN      shift, and go to state 33
    KW_FUNCTION   shift, and go to state 34
    KW_PROCEDURE  shift, and go to state 35

    subprogram        go to state 36
    procedure_header  go to state 37
    function_header   go to state 38
    complex_cmd       go to state 189
=======
   97 if_cmd: KW_IF expression KW_THEN all_commands .  [KW_END, KW_UNTIL, SY_SEMICOLON]
   98       | KW_ELSE KW_IF expression KW_THEN all_commands .  [KW_END, KW_UNTIL, SY_SEMICOLON]

    KW_END        reduce using rule 97 (if_cmd)
    KW_END        [reduce using rule 98 (if_cmd)]
    KW_UNTIL      reduce using rule 97 (if_cmd)
    KW_UNTIL      [reduce using rule 98 (if_cmd)]
    SY_SEMICOLON  reduce using rule 97 (if_cmd)
    SY_SEMICOLON  [reduce using rule 98 (if_cmd)]
    $default      reduce using rule 97 (if_cmd)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 186

<<<<<<< HEAD
   91 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands .

    $default  reduce using rule 91 (for_cmd)
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   95 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO . expression KW_DO all_commands

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 191
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 187

<<<<<<< HEAD
   92 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands .

    $default  reduce using rule 92 (for_cmd)
=======
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10 binary_exp: . expression SY_DASH expression
   11           | . expression SY_PLUS expression
   12           | . expression SY_STAR expression
   13           | . expression SY_SLASH expression
   14           | . expression SY_EQUALS expression
   15           | . expression SY_LESS expression
   16           | . expression SY_GREATER expression
   17           | . expression SY_LESS_EQUALS expression
   18           | . expression SY_GREATER_EQUALS expression
   19           | . expression SY_LESS_BIGGER expression
   20           | . expression SY_AND expression
   21           | . expression KW_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24           | . expression KW_MOD expression
   25           | . expression KW_DIV expression
   26 expression: . POSINT
   27           | . REAL
   28           | . STRING
   29           | . BOOL
   30           | . IDENT
   31           | . KW_RESULT
   32           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   33           | . unary_exp
   34           | . binary_exp
   35           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   96 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO . expression KW_DO all_commands

    IDENT            shift, and go to state 88
    POSINT           shift, and go to state 89
    REAL             shift, and go to state 90
    STRING           shift, and go to state 91
    BOOL             shift, and go to state 92
    KW_RESULT        shift, and go to state 93
    SY_DASH          shift, and go to state 94
    SY_NOT           shift, and go to state 95
    SY_LEFT_BRACKET  shift, and go to state 96

    unary_exp   go to state 97
    binary_exp  go to state 98
    expression  go to state 192
    proc_call   go to state 100
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 188

<<<<<<< HEAD
   59 subprogram: . procedure_header
   60           | . function_header
   62 subprogram_list: subprogram_list . subprogram
   63 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   64 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   72 function_body: var_decl subprogram_list . complex_cmd SY_SEMICOLON
   75 complex_cmd: . KW_BEGIN cmd_list KW_END

    KW_BEGIN      shift, and go to state 33
    KW_FUNCTION   shift, and go to state 34
    KW_PROCEDURE  shift, and go to state 35

    subprogram        go to state 36
    procedure_header  go to state 37
    function_header   go to state 38
    complex_cmd       go to state 190
=======
   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type . SY_SEMICOLON function_body

    SY_SEMICOLON  shift, and go to state 193
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 189

<<<<<<< HEAD
   71 procedure_body: var_decl subprogram_list complex_cmd . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 191
=======
   52 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   53         | . KW_VAR var_decl_list
   66 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON . procedure_body
   74 procedure_body: . var_decl subprogram_list complex_cmd SY_SEMICOLON

    KW_VAR  shift, and go to state 12

    $default  reduce using rule 52 (var_decl)

    var_decl        go to state 194
    procedure_body  go to state 195
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b


State 190

<<<<<<< HEAD
   72 function_body: var_decl subprogram_list complex_cmd . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 192


State 191

   71 procedure_body: var_decl subprogram_list complex_cmd SY_SEMICOLON .

    $default  reduce using rule 71 (procedure_body)


State 192

   72 function_body: var_decl subprogram_list complex_cmd SY_SEMICOLON .

    $default  reduce using rule 72 (function_body)
=======
   71 args_decl_list: args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type .

    $default  reduce using rule 71 (args_decl_list)


State 191

    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression
   95 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression . KW_DO all_commands

    KW_AND             shift, and go to state 126
    KW_DIV             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    KW_DO              shift, and go to state 196
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143


State 192

    9 unary_exp: expression . SY_NOT
   10 binary_exp: expression . SY_DASH expression
   11           | expression . SY_PLUS expression
   12           | expression . SY_STAR expression
   13           | expression . SY_SLASH expression
   14           | expression . SY_EQUALS expression
   15           | expression . SY_LESS expression
   16           | expression . SY_GREATER expression
   17           | expression . SY_LESS_EQUALS expression
   18           | expression . SY_GREATER_EQUALS expression
   19           | expression . SY_LESS_BIGGER expression
   20           | expression . SY_AND expression
   21           | expression . KW_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   24           | expression . KW_MOD expression
   25           | expression . KW_DIV expression
   96 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression . KW_DO all_commands

    KW_AND             shift, and go to state 126
    KW_DIV             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    KW_DO              shift, and go to state 197
    SY_DASH            shift, and go to state 130
    SY_PLUS            shift, and go to state 131
    SY_STAR            shift, and go to state 132
    SY_SLASH           shift, and go to state 133
    SY_EQUALS          shift, and go to state 134
    SY_LESS            shift, and go to state 135
    SY_GREATER         shift, and go to state 136
    SY_LESS_EQUALS     shift, and go to state 137
    SY_GREATER_EQUALS  shift, and go to state 138
    SY_LESS_BIGGER     shift, and go to state 139
    SY_AND             shift, and go to state 140
    SY_OR              shift, and go to state 141
    SY_ASSIGN          shift, and go to state 142
    SY_NOT             shift, and go to state 143


State 193

   52 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   53         | . KW_VAR var_decl_list
   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON . function_body
   75 function_body: . var_decl subprogram_list complex_cmd SY_SEMICOLON

    KW_VAR  shift, and go to state 12

    $default  reduce using rule 52 (var_decl)

    var_decl       go to state 198
    function_body  go to state 199


State 194

   64 subprogram_list: . %empty
   65                | . subprogram_list subprogram
   74 procedure_body: var_decl . subprogram_list complex_cmd SY_SEMICOLON

    $default  reduce using rule 64 (subprogram_list)

    subprogram_list  go to state 200


State 195

   66 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body .

    $default  reduce using rule 66 (procedure_header)


State 196

   76 all_commands: . complex_cmd
   77             | . simple_cmd
   78 complex_cmd: . KW_BEGIN cmd_list KW_END
   82 simple_cmd: . IDENT SY_ASSIGN expression
   83           | . KW_RESULT SY_ASSIGN expression
   84           | . if_cmd
   85           | . for_cmd
   86           | . while_cmd
   87           | . IDENT SY_COLON all_commands
   88           | . KW_GOTO IDENT
   89           | . KW_RETURN
   90           | . IDENT SY_LEFT_BRACKET arglist
   91           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   93 while_cmd: . KW_WHILE expression KW_DO all_commands
   94          | . KW_REPEAT all_commands KW_UNTIL expression
   95 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   95        | KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO . all_commands
   96        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   97 if_cmd: . KW_IF expression KW_THEN all_commands
   98       | . KW_ELSE KW_IF expression KW_THEN all_commands
   99       | . KW_ELSE all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_ELSE    shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    all_commands  go to state 201
    complex_cmd   go to state 86
    simple_cmd    go to state 87
    proc_call     go to state 61
    while_cmd     go to state 62
    for_cmd       go to state 63
    if_cmd        go to state 64


State 197

   76 all_commands: . complex_cmd
   77             | . simple_cmd
   78 complex_cmd: . KW_BEGIN cmd_list KW_END
   82 simple_cmd: . IDENT SY_ASSIGN expression
   83           | . KW_RESULT SY_ASSIGN expression
   84           | . if_cmd
   85           | . for_cmd
   86           | . while_cmd
   87           | . IDENT SY_COLON all_commands
   88           | . KW_GOTO IDENT
   89           | . KW_RETURN
   90           | . IDENT SY_LEFT_BRACKET arglist
   91           | . proc_call
   92 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   93 while_cmd: . KW_WHILE expression KW_DO all_commands
   94          | . KW_REPEAT all_commands KW_UNTIL expression
   95 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   96        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   96        | KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO . all_commands
   97 if_cmd: . KW_IF expression KW_THEN all_commands
   98       | . KW_ELSE KW_IF expression KW_THEN all_commands
   99       | . KW_ELSE all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_ELSE    shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    all_commands  go to state 202
    complex_cmd   go to state 86
    simple_cmd    go to state 87
    proc_call     go to state 61
    while_cmd     go to state 62
    for_cmd       go to state 63
    if_cmd        go to state 64


State 198

   64 subprogram_list: . %empty
   65                | . subprogram_list subprogram
   75 function_body: var_decl . subprogram_list complex_cmd SY_SEMICOLON

    $default  reduce using rule 64 (subprogram_list)

    subprogram_list  go to state 203


State 199

   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body .

    $default  reduce using rule 67 (function_header)


State 200

   62 subprogram: . procedure_header
   63           | . function_header
   65 subprogram_list: subprogram_list . subprogram
   66 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   67 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   74 procedure_body: var_decl subprogram_list . complex_cmd SY_SEMICOLON
   78 complex_cmd: . KW_BEGIN cmd_list KW_END

    KW_BEGIN      shift, and go to state 33
    KW_FUNCTION   shift, and go to state 34
    KW_PROCEDURE  shift, and go to state 35

    subprogram        go to state 36
    procedure_header  go to state 37
    function_header   go to state 38
    complex_cmd       go to state 204


State 201

   95 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands .

    $default  reduce using rule 95 (for_cmd)


State 202

   96 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands .

    $default  reduce using rule 96 (for_cmd)


State 203

   62 subprogram: . procedure_header
   63           | . function_header
   65 subprogram_list: subprogram_list . subprogram
   66 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   67 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   75 function_body: var_decl subprogram_list . complex_cmd SY_SEMICOLON
   78 complex_cmd: . KW_BEGIN cmd_list KW_END

    KW_BEGIN      shift, and go to state 33
    KW_FUNCTION   shift, and go to state 34
    KW_PROCEDURE  shift, and go to state 35

    subprogram        go to state 36
    procedure_header  go to state 37
    function_header   go to state 38
    complex_cmd       go to state 205


State 204

   74 procedure_body: var_decl subprogram_list complex_cmd . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 206


State 205

   75 function_body: var_decl subprogram_list complex_cmd . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 207


State 206

   74 procedure_body: var_decl subprogram_list complex_cmd SY_SEMICOLON .

    $default  reduce using rule 74 (procedure_body)


State 207

   75 function_body: var_decl subprogram_list complex_cmd SY_SEMICOLON .

    $default  reduce using rule 75 (function_body)
>>>>>>> 8fe0ccc4fbc3f6754a0c99e258e95e33b9f3b84b
