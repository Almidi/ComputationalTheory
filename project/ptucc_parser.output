Terminals unused in grammar

   CAST
   BOOL
   KW_AND
   KW_DIV
   KW_MOD
   KW_NOT
   KW_OR


State 34 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_decl type_def var_decl subprogram body SY_PERIOD

    2 program_decl: KW_PROGRAM IDENT SY_SEMICOLON

    3 body: KW_BEGIN statements KW_END

    4 statements: %empty
    5           | statement_list

    6 statement_list: statement
    7               | statement_list SY_SEMICOLON statement

    8 statement: proc_call

    9 proc_call: IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

   10 arguments: %empty
   11          | arglist

   12 arglist: expression
   13        | arglist SY_COMMA expression

   14 unary_exp: SY_DASH expression
   15          | SY_NOT expression
   16          | expression SY_NOT

   17 binary_exp: expression SY_DASH expression
   18           | expression SY_PLUS expression
   19           | expression SY_STAR expression
   20           | expression SY_SLASH expression
   21           | expression SY_EQUALS expression
   22           | expression SY_LESS expression
   23           | expression SY_GREATER expression
   24           | expression SY_LESS_EQUALS expression
   25           | expression SY_GREATER_EQUALS expression
   26           | expression SY_LESS_BIGGER expression
   27           | expression SY_AND expression
   28           | expression SY_OR expression
   29           | expression SY_ASSIGN expression

   30 expression: POSINT
   31           | REAL
   32           | STRING
   33           | IDENT
   34           | SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | unary_exp
   36           | binary_exp

   37 type_def: %empty
   38         | KW_TYPE type_def_decl

   39 type_def_decl: type_list SY_SEMICOLON

   40 type_list: %empty
   41          | shortcut_data_type

   42 shortcut_data_type: IDENT SY_EQUALS advanced_data_type type_def_decl
   43                   | IDENT SY_EQUALS advanced_data_type SY_SEMICOLON type_def_decl

   44 advanced_data_type: simple_data_type
   45                   | KW_ARRAY KW_OF simple_data_type
   46                   | KW_ARRAY matrix_n KW_OF simple_data_type
   47                   | KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_COLON return_type

   48 matrix_n: SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   49         | matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

   50 simple_data_type: KW_INTEGER
   51                 | KW_CHAR
   52                 | KW_BOOLEAN
   53                 | KW_REAL

   54 var_decl: %empty
   55         | KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   56         | var_decl1 var_decl2 var_decl3 var_decl

   57 var_decl1: IDENT
   58          | var_decl1 SY_COMMA IDENT

   59 var_decl2: SY_COLON
   60          | SY_COLON KW_ARRAY matrix_n KW_OF
   61          | SY_COLON KW_ARRAY KW_OF

   62 var_decl3: simple_data_type SY_SEMICOLON

   63 subprogram: %empty
   64           | procedure_header
   65           | function_header

   66 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

   68 args_decl: %empty
   69          | args_decl_list

   70 args_decl_list: IDENT SY_COLON advanced_data_type
   71               | args_decl_list SY_COMMA IDENT SY_COLON advanced_data_type

   72 return_type: %empty
   73            | advanced_data_type

   74 procedure_body: var_decl subprogram command

   75 function_body: var_decl subprogram command

   76 command: complex_cmd

   77 complex_cmd: KW_BEGIN simple_cmd KW_END

   78 simple_cmd: SY_SEMICOLON
   79           | IDENT SY_ASSIGN expression
   80           | KW_RESULT SY_ASSIGN expression
   81           | if_cmd
   82           | for_cmd
   83           | while_cmd
   84           | IDENT SY_COLON complex_cmd
   85           | KW_GOTO IDENT
   86           | KW_RETURN
   87           | IDENT SY_LEFT_BRACKET arglist

   88 while_cmd: KW_WHILE expression KW_DO complex_cmd
   89          | KW_REPEAT complex_cmd KW_UNTIL expression

   90 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO complex_cmd
   91        | KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO complex_cmd

   92 if_cmd: KW_IF expression KW_THEN complex_cmd else_state

   93 else_state: %empty
   94           | KW_ELSE complex_cmd


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 2 9 33 42 43 57 58 66 67 70 71 79 84 85 87 90 91
POSINT (259) 30 48 49
REAL (260) 31
STRING (261) 32
CAST (262)
BOOL (263)
KW_PROGRAM (264) 2
KW_BEGIN (265) 3 77
KW_END (266) 3 77
KW_AND (267)
KW_DIV (268)
KW_FUNCTION (269) 47 67
KW_MOD (270)
KW_PROCEDURE (271) 66
KW_RESULT (272) 80
KW_ARRAY (273) 45 46 60 61
KW_DO (274) 88 90 91
KW_GOTO (275) 85
KW_NOT (276)
KW_RETURN (277) 86
KW_BOOLEAN (278) 52
KW_ELSE (279) 94
KW_IF (280) 92
KW_OF (281) 45 46 60 61
KW_REAL (282) 53
KW_THEN (283) 92
KW_CHAR (284) 51
KW_FOR (285) 90 91
KW_INTEGER (286) 50
KW_OR (287)
KW_REPEAT (288) 89
KW_UNTIL (289) 89
KW_VAR (290) 55
KW_WHILE (291) 88
KW_TO (292) 90
KW_DOWNTO (293) 91
KW_TYPE (294) 38
SY_DASH (295) 14 17
SY_PLUS (296) 18
SY_STAR (297) 19
SY_SLASH (298) 20
SY_EQUALS (299) 21 42 43
SY_LESS (300) 22
SY_GREATER (301) 23
SY_LESS_EQUALS (302) 24
SY_GREATER_EQUALS (303) 25
SY_LESS_BIGGER (304) 26
SY_AND (305) 27
SY_OR (306) 28
SY_ASSIGN (307) 29 79 80 90 91
SY_NOT (308) 15 16
SY_COMMA (309) 13 58 71
SY_LEFT_SQR_BRACKET (310) 48 49
SY_RIGHT_SQR_BRACKET (311) 48 49
SY_COLON (312) 47 59 60 61 70 71 84
SY_SEMICOLON (313) 2 7 39 43 62 66 67 78
SY_PERIOD (314) 1
SY_LEFT_BRACKET (315) 9 34 47 66 67 87
SY_RIGHT_BRACKET (316) 9 34 47 66 67


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
program (63)
    on left: 1, on right: 0
program_decl (64)
    on left: 2, on right: 1
body (65)
    on left: 3, on right: 1
statements (66)
    on left: 4 5, on right: 3
statement_list (67)
    on left: 6 7, on right: 5 7
statement (68)
    on left: 8, on right: 6 7
proc_call (69)
    on left: 9, on right: 8
arguments (70)
    on left: 10 11, on right: 9
arglist (71)
    on left: 12 13, on right: 11 13 87
unary_exp (72)
    on left: 14 15 16, on right: 35
binary_exp (73)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29, on right: 36
expression (74)
    on left: 30 31 32 33 34 35 36, on right: 12 13 14 15 16 17 18 19
    20 21 22 23 24 25 26 27 28 29 34 79 80 88 89 90 91 92
type_def (75)
    on left: 37 38, on right: 1
type_def_decl (76)
    on left: 39, on right: 38 42 43
type_list (77)
    on left: 40 41, on right: 39
shortcut_data_type (78)
    on left: 42 43, on right: 41
advanced_data_type (79)
    on left: 44 45 46 47, on right: 42 43 70 71 73
matrix_n (80)
    on left: 48 49, on right: 46 49 60
simple_data_type (81)
    on left: 50 51 52 53, on right: 44 45 46 62
var_decl (82)
    on left: 54 55 56, on right: 1 55 56 74 75
var_decl1 (83)
    on left: 57 58, on right: 55 56 58
var_decl2 (84)
    on left: 59 60 61, on right: 55 56
var_decl3 (85)
    on left: 62, on right: 55 56
subprogram (86)
    on left: 63 64 65, on right: 1 74 75
procedure_header (87)
    on left: 66, on right: 64
function_header (88)
    on left: 67, on right: 65
args_decl (89)
    on left: 68 69, on right: 47 66 67
args_decl_list (90)
    on left: 70 71, on right: 69 71
return_type (91)
    on left: 72 73, on right: 47 67
procedure_body (92)
    on left: 74, on right: 66
function_body (93)
    on left: 75, on right: 67
command (94)
    on left: 76, on right: 74 75
complex_cmd (95)
    on left: 77, on right: 76 84 88 89 90 91 92 94
simple_cmd (96)
    on left: 78 79 80 81 82 83 84 85 86 87, on right: 77
while_cmd (97)
    on left: 88 89, on right: 83
for_cmd (98)
    on left: 90 91, on right: 82
if_cmd (99)
    on left: 92, on right: 81
else_state (100)
    on left: 93 94, on right: 92


State 0

    0 $accept: . program $end
    1 program: . program_decl type_def var_decl subprogram body SY_PERIOD
    2 program_decl: . KW_PROGRAM IDENT SY_SEMICOLON

    KW_PROGRAM  shift, and go to state 1

    program       go to state 2
    program_decl  go to state 3


State 1

    2 program_decl: KW_PROGRAM . IDENT SY_SEMICOLON

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: program_decl . type_def var_decl subprogram body SY_PERIOD
   37 type_def: . %empty  [IDENT, KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   38         | . KW_TYPE type_def_decl

    KW_TYPE  shift, and go to state 6

    $default  reduce using rule 37 (type_def)

    type_def  go to state 7


State 4

    2 program_decl: KW_PROGRAM IDENT . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 8


State 5

    0 $accept: program $end .

    $default  accept


State 6

   38 type_def: KW_TYPE . type_def_decl
   39 type_def_decl: . type_list SY_SEMICOLON
   40 type_list: . %empty  [SY_SEMICOLON]
   41          | . shortcut_data_type
   42 shortcut_data_type: . IDENT SY_EQUALS advanced_data_type type_def_decl
   43                   | . IDENT SY_EQUALS advanced_data_type SY_SEMICOLON type_def_decl

    IDENT  shift, and go to state 9

    $default  reduce using rule 40 (type_list)

    type_def_decl       go to state 10
    type_list           go to state 11
    shortcut_data_type  go to state 12


State 7

    1 program: program_decl type_def . var_decl subprogram body SY_PERIOD
   54 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   55         | . KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   56         | . var_decl1 var_decl2 var_decl3 var_decl
   57 var_decl1: . IDENT
   58          | . var_decl1 SY_COMMA IDENT

    IDENT   shift, and go to state 13
    KW_VAR  shift, and go to state 14

    $default  reduce using rule 54 (var_decl)

    var_decl   go to state 15
    var_decl1  go to state 16


State 8

    2 program_decl: KW_PROGRAM IDENT SY_SEMICOLON .

    $default  reduce using rule 2 (program_decl)


State 9

   42 shortcut_data_type: IDENT . SY_EQUALS advanced_data_type type_def_decl
   43                   | IDENT . SY_EQUALS advanced_data_type SY_SEMICOLON type_def_decl

    SY_EQUALS  shift, and go to state 17


State 10

   38 type_def: KW_TYPE type_def_decl .

    $default  reduce using rule 38 (type_def)


State 11

   39 type_def_decl: type_list . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 18


State 12

   41 type_list: shortcut_data_type .

    $default  reduce using rule 41 (type_list)


State 13

   57 var_decl1: IDENT .

    $default  reduce using rule 57 (var_decl1)


State 14

   55 var_decl: KW_VAR . var_decl1 var_decl2 var_decl3 var_decl
   57 var_decl1: . IDENT
   58          | . var_decl1 SY_COMMA IDENT

    IDENT  shift, and go to state 13

    var_decl1  go to state 19


State 15

    1 program: program_decl type_def var_decl . subprogram body SY_PERIOD
   63 subprogram: . %empty  [KW_BEGIN]
   64           | . procedure_header
   65           | . function_header
   66 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   67 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

    KW_FUNCTION   shift, and go to state 20
    KW_PROCEDURE  shift, and go to state 21

    $default  reduce using rule 63 (subprogram)

    subprogram        go to state 22
    procedure_header  go to state 23
    function_header   go to state 24


State 16

   56 var_decl: var_decl1 . var_decl2 var_decl3 var_decl
   58 var_decl1: var_decl1 . SY_COMMA IDENT
   59 var_decl2: . SY_COLON
   60          | . SY_COLON KW_ARRAY matrix_n KW_OF
   61          | . SY_COLON KW_ARRAY KW_OF

    SY_COMMA  shift, and go to state 25
    SY_COLON  shift, and go to state 26

    var_decl2  go to state 27


State 17

   42 shortcut_data_type: IDENT SY_EQUALS . advanced_data_type type_def_decl
   43                   | IDENT SY_EQUALS . advanced_data_type SY_SEMICOLON type_def_decl
   44 advanced_data_type: . simple_data_type
   45                   | . KW_ARRAY KW_OF simple_data_type
   46                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   47                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_COLON return_type
   50 simple_data_type: . KW_INTEGER
   51                 | . KW_CHAR
   52                 | . KW_BOOLEAN
   53                 | . KW_REAL

    KW_FUNCTION  shift, and go to state 28
    KW_ARRAY     shift, and go to state 29
    KW_BOOLEAN   shift, and go to state 30
    KW_REAL      shift, and go to state 31
    KW_CHAR      shift, and go to state 32
    KW_INTEGER   shift, and go to state 33

    advanced_data_type  go to state 34
    simple_data_type    go to state 35


State 18

   39 type_def_decl: type_list SY_SEMICOLON .

    $default  reduce using rule 39 (type_def_decl)


State 19

   55 var_decl: KW_VAR var_decl1 . var_decl2 var_decl3 var_decl
   58 var_decl1: var_decl1 . SY_COMMA IDENT
   59 var_decl2: . SY_COLON
   60          | . SY_COLON KW_ARRAY matrix_n KW_OF
   61          | . SY_COLON KW_ARRAY KW_OF

    SY_COMMA  shift, and go to state 25
    SY_COLON  shift, and go to state 26

    var_decl2  go to state 36


State 20

   67 function_header: KW_FUNCTION . IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

    IDENT  shift, and go to state 37


State 21

   66 procedure_header: KW_PROCEDURE . IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    IDENT  shift, and go to state 38


State 22

    1 program: program_decl type_def var_decl subprogram . body SY_PERIOD
    3 body: . KW_BEGIN statements KW_END

    KW_BEGIN  shift, and go to state 39

    body  go to state 40


State 23

   64 subprogram: procedure_header .

    $default  reduce using rule 64 (subprogram)


State 24

   65 subprogram: function_header .

    $default  reduce using rule 65 (subprogram)


State 25

   58 var_decl1: var_decl1 SY_COMMA . IDENT

    IDENT  shift, and go to state 41


State 26

   59 var_decl2: SY_COLON .  [KW_BOOLEAN, KW_REAL, KW_CHAR, KW_INTEGER]
   60          | SY_COLON . KW_ARRAY matrix_n KW_OF
   61          | SY_COLON . KW_ARRAY KW_OF

    KW_ARRAY  shift, and go to state 42

    $default  reduce using rule 59 (var_decl2)


State 27

   50 simple_data_type: . KW_INTEGER
   51                 | . KW_CHAR
   52                 | . KW_BOOLEAN
   53                 | . KW_REAL
   56 var_decl: var_decl1 var_decl2 . var_decl3 var_decl
   62 var_decl3: . simple_data_type SY_SEMICOLON

    KW_BOOLEAN  shift, and go to state 30
    KW_REAL     shift, and go to state 31
    KW_CHAR     shift, and go to state 32
    KW_INTEGER  shift, and go to state 33

    simple_data_type  go to state 43
    var_decl3         go to state 44


State 28

   47 advanced_data_type: KW_FUNCTION . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_COLON return_type

    SY_LEFT_BRACKET  shift, and go to state 45


State 29

   45 advanced_data_type: KW_ARRAY . KW_OF simple_data_type
   46                   | KW_ARRAY . matrix_n KW_OF simple_data_type
   48 matrix_n: . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   49         | . matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

    KW_OF                shift, and go to state 46
    SY_LEFT_SQR_BRACKET  shift, and go to state 47

    matrix_n  go to state 48


State 30

   52 simple_data_type: KW_BOOLEAN .

    $default  reduce using rule 52 (simple_data_type)


State 31

   53 simple_data_type: KW_REAL .

    $default  reduce using rule 53 (simple_data_type)


State 32

   51 simple_data_type: KW_CHAR .

    $default  reduce using rule 51 (simple_data_type)


State 33

   50 simple_data_type: KW_INTEGER .

    $default  reduce using rule 50 (simple_data_type)


State 34

   39 type_def_decl: . type_list SY_SEMICOLON
   40 type_list: . %empty  [SY_SEMICOLON]
   41          | . shortcut_data_type
   42 shortcut_data_type: . IDENT SY_EQUALS advanced_data_type type_def_decl
   42                   | IDENT SY_EQUALS advanced_data_type . type_def_decl
   43                   | . IDENT SY_EQUALS advanced_data_type SY_SEMICOLON type_def_decl
   43                   | IDENT SY_EQUALS advanced_data_type . SY_SEMICOLON type_def_decl

    IDENT         shift, and go to state 9
    SY_SEMICOLON  shift, and go to state 49

    SY_SEMICOLON  [reduce using rule 40 (type_list)]

    type_def_decl       go to state 50
    type_list           go to state 11
    shortcut_data_type  go to state 12


State 35

   44 advanced_data_type: simple_data_type .

    $default  reduce using rule 44 (advanced_data_type)


State 36

   50 simple_data_type: . KW_INTEGER
   51                 | . KW_CHAR
   52                 | . KW_BOOLEAN
   53                 | . KW_REAL
   55 var_decl: KW_VAR var_decl1 var_decl2 . var_decl3 var_decl
   62 var_decl3: . simple_data_type SY_SEMICOLON

    KW_BOOLEAN  shift, and go to state 30
    KW_REAL     shift, and go to state 31
    KW_CHAR     shift, and go to state 32
    KW_INTEGER  shift, and go to state 33

    simple_data_type  go to state 43
    var_decl3         go to state 51


State 37

   67 function_header: KW_FUNCTION IDENT . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

    SY_LEFT_BRACKET  shift, and go to state 52


State 38

   66 procedure_header: KW_PROCEDURE IDENT . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    SY_LEFT_BRACKET  shift, and go to state 53


State 39

    3 body: KW_BEGIN . statements KW_END
    4 statements: . %empty  [KW_END]
    5           | . statement_list
    6 statement_list: . statement
    7               | . statement_list SY_SEMICOLON statement
    8 statement: . proc_call
    9 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT  shift, and go to state 54

    $default  reduce using rule 4 (statements)

    statements      go to state 55
    statement_list  go to state 56
    statement       go to state 57
    proc_call       go to state 58


State 40

    1 program: program_decl type_def var_decl subprogram body . SY_PERIOD

    SY_PERIOD  shift, and go to state 59


State 41

   58 var_decl1: var_decl1 SY_COMMA IDENT .

    $default  reduce using rule 58 (var_decl1)


State 42

   48 matrix_n: . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   49         | . matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   60 var_decl2: SY_COLON KW_ARRAY . matrix_n KW_OF
   61          | SY_COLON KW_ARRAY . KW_OF

    KW_OF                shift, and go to state 60
    SY_LEFT_SQR_BRACKET  shift, and go to state 47

    matrix_n  go to state 61


State 43

   62 var_decl3: simple_data_type . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 62


State 44

   54 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   55         | . KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   56         | . var_decl1 var_decl2 var_decl3 var_decl
   56         | var_decl1 var_decl2 var_decl3 . var_decl
   57 var_decl1: . IDENT
   58          | . var_decl1 SY_COMMA IDENT

    IDENT   shift, and go to state 13
    KW_VAR  shift, and go to state 14

    $default  reduce using rule 54 (var_decl)

    var_decl   go to state 63
    var_decl1  go to state 16


State 45

   47 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET SY_COLON return_type
   68 args_decl: . %empty  [SY_RIGHT_BRACKET]
   69          | . args_decl_list
   70 args_decl_list: . IDENT SY_COLON advanced_data_type
   71               | . args_decl_list SY_COMMA IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 64

    $default  reduce using rule 68 (args_decl)

    args_decl       go to state 65
    args_decl_list  go to state 66


State 46

   45 advanced_data_type: KW_ARRAY KW_OF . simple_data_type
   50 simple_data_type: . KW_INTEGER
   51                 | . KW_CHAR
   52                 | . KW_BOOLEAN
   53                 | . KW_REAL

    KW_BOOLEAN  shift, and go to state 30
    KW_REAL     shift, and go to state 31
    KW_CHAR     shift, and go to state 32
    KW_INTEGER  shift, and go to state 33

    simple_data_type  go to state 67


State 47

   48 matrix_n: SY_LEFT_SQR_BRACKET . POSINT SY_RIGHT_SQR_BRACKET

    POSINT  shift, and go to state 68


State 48

   46 advanced_data_type: KW_ARRAY matrix_n . KW_OF simple_data_type
   49 matrix_n: matrix_n . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

    KW_OF                shift, and go to state 69
    SY_LEFT_SQR_BRACKET  shift, and go to state 70


State 49

   39 type_def_decl: . type_list SY_SEMICOLON
   40 type_list: . %empty  [SY_SEMICOLON]
   41          | . shortcut_data_type
   42 shortcut_data_type: . IDENT SY_EQUALS advanced_data_type type_def_decl
   43                   | . IDENT SY_EQUALS advanced_data_type SY_SEMICOLON type_def_decl
   43                   | IDENT SY_EQUALS advanced_data_type SY_SEMICOLON . type_def_decl

    IDENT  shift, and go to state 9

    $default  reduce using rule 40 (type_list)

    type_def_decl       go to state 71
    type_list           go to state 11
    shortcut_data_type  go to state 12


State 50

   42 shortcut_data_type: IDENT SY_EQUALS advanced_data_type type_def_decl .

    $default  reduce using rule 42 (shortcut_data_type)


State 51

   54 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   55         | . KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   55         | KW_VAR var_decl1 var_decl2 var_decl3 . var_decl
   56         | . var_decl1 var_decl2 var_decl3 var_decl
   57 var_decl1: . IDENT
   58          | . var_decl1 SY_COMMA IDENT

    IDENT   shift, and go to state 13
    KW_VAR  shift, and go to state 14

    $default  reduce using rule 54 (var_decl)

    var_decl   go to state 72
    var_decl1  go to state 16


State 52

   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   68 args_decl: . %empty  [SY_RIGHT_BRACKET]
   69          | . args_decl_list
   70 args_decl_list: . IDENT SY_COLON advanced_data_type
   71               | . args_decl_list SY_COMMA IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 64

    $default  reduce using rule 68 (args_decl)

    args_decl       go to state 73
    args_decl_list  go to state 66


State 53

   66 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   68 args_decl: . %empty  [SY_RIGHT_BRACKET]
   69          | . args_decl_list
   70 args_decl_list: . IDENT SY_COLON advanced_data_type
   71               | . args_decl_list SY_COMMA IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 64

    $default  reduce using rule 68 (args_decl)

    args_decl       go to state 74
    args_decl_list  go to state 66


State 54

    9 proc_call: IDENT . SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    SY_LEFT_BRACKET  shift, and go to state 75


State 55

    3 body: KW_BEGIN statements . KW_END

    KW_END  shift, and go to state 76


State 56

    5 statements: statement_list .  [KW_END]
    7 statement_list: statement_list . SY_SEMICOLON statement

    SY_SEMICOLON  shift, and go to state 77

    $default  reduce using rule 5 (statements)


State 57

    6 statement_list: statement .

    $default  reduce using rule 6 (statement_list)


State 58

    8 statement: proc_call .

    $default  reduce using rule 8 (statement)


State 59

    1 program: program_decl type_def var_decl subprogram body SY_PERIOD .

    $default  reduce using rule 1 (program)


State 60

   61 var_decl2: SY_COLON KW_ARRAY KW_OF .

    $default  reduce using rule 61 (var_decl2)


State 61

   49 matrix_n: matrix_n . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   60 var_decl2: SY_COLON KW_ARRAY matrix_n . KW_OF

    KW_OF                shift, and go to state 78
    SY_LEFT_SQR_BRACKET  shift, and go to state 70


State 62

   62 var_decl3: simple_data_type SY_SEMICOLON .

    $default  reduce using rule 62 (var_decl3)


State 63

   56 var_decl: var_decl1 var_decl2 var_decl3 var_decl .

    $default  reduce using rule 56 (var_decl)


State 64

   70 args_decl_list: IDENT . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 79


State 65

   47 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET SY_COLON return_type

    SY_RIGHT_BRACKET  shift, and go to state 80


State 66

   69 args_decl: args_decl_list .  [SY_RIGHT_BRACKET]
   71 args_decl_list: args_decl_list . SY_COMMA IDENT SY_COLON advanced_data_type

    SY_COMMA  shift, and go to state 81

    $default  reduce using rule 69 (args_decl)


State 67

   45 advanced_data_type: KW_ARRAY KW_OF simple_data_type .

    $default  reduce using rule 45 (advanced_data_type)


State 68

   48 matrix_n: SY_LEFT_SQR_BRACKET POSINT . SY_RIGHT_SQR_BRACKET

    SY_RIGHT_SQR_BRACKET  shift, and go to state 82


State 69

   46 advanced_data_type: KW_ARRAY matrix_n KW_OF . simple_data_type
   50 simple_data_type: . KW_INTEGER
   51                 | . KW_CHAR
   52                 | . KW_BOOLEAN
   53                 | . KW_REAL

    KW_BOOLEAN  shift, and go to state 30
    KW_REAL     shift, and go to state 31
    KW_CHAR     shift, and go to state 32
    KW_INTEGER  shift, and go to state 33

    simple_data_type  go to state 83


State 70

   49 matrix_n: matrix_n SY_LEFT_SQR_BRACKET . POSINT SY_RIGHT_SQR_BRACKET

    POSINT  shift, and go to state 84


State 71

   43 shortcut_data_type: IDENT SY_EQUALS advanced_data_type SY_SEMICOLON type_def_decl .

    $default  reduce using rule 43 (shortcut_data_type)


State 72

   55 var_decl: KW_VAR var_decl1 var_decl2 var_decl3 var_decl .

    $default  reduce using rule 55 (var_decl)


State 73

   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

    SY_RIGHT_BRACKET  shift, and go to state 85


State 74

   66 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    SY_RIGHT_BRACKET  shift, and go to state 86


State 75

    9 proc_call: IDENT SY_LEFT_BRACKET . arguments SY_RIGHT_BRACKET
   10 arguments: . %empty  [SY_RIGHT_BRACKET]
   11          | . arglist
   12 arglist: . expression
   13        | . arglist SY_COMMA expression
   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    $default  reduce using rule 10 (arguments)

    arguments   go to state 94
    arglist     go to state 95
    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 98


State 76

    3 body: KW_BEGIN statements KW_END .

    $default  reduce using rule 3 (body)


State 77

    7 statement_list: statement_list SY_SEMICOLON . statement
    8 statement: . proc_call
    9 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT  shift, and go to state 54

    statement  go to state 99
    proc_call  go to state 58


State 78

   60 var_decl2: SY_COLON KW_ARRAY matrix_n KW_OF .

    $default  reduce using rule 60 (var_decl2)


State 79

   44 advanced_data_type: . simple_data_type
   45                   | . KW_ARRAY KW_OF simple_data_type
   46                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   47                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_COLON return_type
   50 simple_data_type: . KW_INTEGER
   51                 | . KW_CHAR
   52                 | . KW_BOOLEAN
   53                 | . KW_REAL
   70 args_decl_list: IDENT SY_COLON . advanced_data_type

    KW_FUNCTION  shift, and go to state 28
    KW_ARRAY     shift, and go to state 29
    KW_BOOLEAN   shift, and go to state 30
    KW_REAL      shift, and go to state 31
    KW_CHAR      shift, and go to state 32
    KW_INTEGER   shift, and go to state 33

    advanced_data_type  go to state 100
    simple_data_type    go to state 35


State 80

   47 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . SY_COLON return_type

    SY_COLON  shift, and go to state 101


State 81

   71 args_decl_list: args_decl_list SY_COMMA . IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 102


State 82

   48 matrix_n: SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET .

    $default  reduce using rule 48 (matrix_n)


State 83

   46 advanced_data_type: KW_ARRAY matrix_n KW_OF simple_data_type .

    $default  reduce using rule 46 (advanced_data_type)


State 84

   49 matrix_n: matrix_n SY_LEFT_SQR_BRACKET POSINT . SY_RIGHT_SQR_BRACKET

    SY_RIGHT_SQR_BRACKET  shift, and go to state 103


State 85

   44 advanced_data_type: . simple_data_type
   45                   | . KW_ARRAY KW_OF simple_data_type
   46                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   47                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_COLON return_type
   50 simple_data_type: . KW_INTEGER
   51                 | . KW_CHAR
   52                 | . KW_BOOLEAN
   53                 | . KW_REAL
   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . return_type SY_SEMICOLON function_body
   72 return_type: . %empty  [SY_SEMICOLON]
   73            | . advanced_data_type

    KW_FUNCTION  shift, and go to state 28
    KW_ARRAY     shift, and go to state 29
    KW_BOOLEAN   shift, and go to state 30
    KW_REAL      shift, and go to state 31
    KW_CHAR      shift, and go to state 32
    KW_INTEGER   shift, and go to state 33

    $default  reduce using rule 72 (return_type)

    advanced_data_type  go to state 104
    simple_data_type    go to state 35
    return_type         go to state 105


State 86

   66 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . SY_SEMICOLON procedure_body

    SY_SEMICOLON  shift, and go to state 106


State 87

   33 expression: IDENT .

    $default  reduce using rule 33 (expression)


State 88

   30 expression: POSINT .

    $default  reduce using rule 30 (expression)


State 89

   31 expression: REAL .

    $default  reduce using rule 31 (expression)


State 90

   32 expression: STRING .

    $default  reduce using rule 32 (expression)


State 91

   14 unary_exp: . SY_DASH expression
   14          | SY_DASH . expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 107


State 92

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   15          | SY_NOT . expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 108


State 93

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   34           | SY_LEFT_BRACKET . expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 109


State 94

    9 proc_call: IDENT SY_LEFT_BRACKET arguments . SY_RIGHT_BRACKET

    SY_RIGHT_BRACKET  shift, and go to state 110


State 95

   11 arguments: arglist .  [SY_RIGHT_BRACKET]
   13 arglist: arglist . SY_COMMA expression

    SY_COMMA  shift, and go to state 111

    $default  reduce using rule 11 (arguments)


State 96

   35 expression: unary_exp .

    $default  reduce using rule 35 (expression)


State 97

   36 expression: binary_exp .

    $default  reduce using rule 36 (expression)


State 98

   12 arglist: expression .  [KW_END, SY_COMMA, SY_RIGHT_BRACKET]
   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_DASH            shift, and go to state 112
    SY_PLUS            shift, and go to state 113
    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 12 (arglist)


State 99

    7 statement_list: statement_list SY_SEMICOLON statement .

    $default  reduce using rule 7 (statement_list)


State 100

   70 args_decl_list: IDENT SY_COLON advanced_data_type .

    $default  reduce using rule 70 (args_decl_list)


State 101

   44 advanced_data_type: . simple_data_type
   45                   | . KW_ARRAY KW_OF simple_data_type
   46                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   47                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_COLON return_type
   47                   | KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_COLON . return_type
   50 simple_data_type: . KW_INTEGER
   51                 | . KW_CHAR
   52                 | . KW_BOOLEAN
   53                 | . KW_REAL
   72 return_type: . %empty  [IDENT, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   73            | . advanced_data_type

    KW_FUNCTION  shift, and go to state 28
    KW_ARRAY     shift, and go to state 29
    KW_BOOLEAN   shift, and go to state 30
    KW_REAL      shift, and go to state 31
    KW_CHAR      shift, and go to state 32
    KW_INTEGER   shift, and go to state 33

    $default  reduce using rule 72 (return_type)

    advanced_data_type  go to state 104
    simple_data_type    go to state 35
    return_type         go to state 126


State 102

   71 args_decl_list: args_decl_list SY_COMMA IDENT . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 127


State 103

   49 matrix_n: matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET .

    $default  reduce using rule 49 (matrix_n)


State 104

   73 return_type: advanced_data_type .

    $default  reduce using rule 73 (return_type)


State 105

   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type . SY_SEMICOLON function_body

    SY_SEMICOLON  shift, and go to state 128


State 106

   54 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   55         | . KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   56         | . var_decl1 var_decl2 var_decl3 var_decl
   57 var_decl1: . IDENT
   58          | . var_decl1 SY_COMMA IDENT
   66 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON . procedure_body
   74 procedure_body: . var_decl subprogram command

    IDENT   shift, and go to state 13
    KW_VAR  shift, and go to state 14

    $default  reduce using rule 54 (var_decl)

    var_decl        go to state 129
    var_decl1       go to state 16
    procedure_body  go to state 130


State 107

   14 unary_exp: SY_DASH expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_COMMA, SY_RIGHT_BRACKET]
   16          | expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_PLUS            shift, and go to state 113
    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 14 (unary_exp)

    Conflict between rule 14 and token SY_DASH resolved as reduce (%left SY_DASH).
    Conflict between rule 14 and token SY_PLUS resolved as shift (SY_DASH < SY_PLUS).
    Conflict between rule 14 and token SY_STAR resolved as shift (SY_DASH < SY_STAR).
    Conflict between rule 14 and token SY_SLASH resolved as shift (SY_DASH < SY_SLASH).
    Conflict between rule 14 and token SY_EQUALS resolved as shift (SY_DASH < SY_EQUALS).
    Conflict between rule 14 and token SY_LESS resolved as shift (SY_DASH < SY_LESS).
    Conflict between rule 14 and token SY_GREATER resolved as shift (SY_DASH < SY_GREATER).
    Conflict between rule 14 and token SY_LESS_EQUALS resolved as shift (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 14 and token SY_GREATER_EQUALS resolved as shift (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 14 and token SY_LESS_BIGGER resolved as shift (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 14 and token SY_AND resolved as shift (SY_DASH < SY_AND).
    Conflict between rule 14 and token SY_OR resolved as shift (SY_DASH < SY_OR).
    Conflict between rule 14 and token SY_ASSIGN resolved as shift (SY_DASH < SY_ASSIGN).
    Conflict between rule 14 and token SY_NOT resolved as shift (SY_DASH < SY_NOT).


State 108

   15 unary_exp: SY_NOT expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_NOT, SY_COMMA, SY_RIGHT_BRACKET]
   16          | expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    $default  reduce using rule 15 (unary_exp)

    Conflict between rule 15 and token SY_DASH resolved as reduce (SY_DASH < SY_NOT).
    Conflict between rule 15 and token SY_PLUS resolved as reduce (SY_PLUS < SY_NOT).
    Conflict between rule 15 and token SY_STAR resolved as reduce (SY_STAR < SY_NOT).
    Conflict between rule 15 and token SY_SLASH resolved as reduce (SY_SLASH < SY_NOT).
    Conflict between rule 15 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_NOT).
    Conflict between rule 15 and token SY_LESS resolved as reduce (SY_LESS < SY_NOT).
    Conflict between rule 15 and token SY_GREATER resolved as reduce (SY_GREATER < SY_NOT).
    Conflict between rule 15 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_NOT).
    Conflict between rule 15 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_NOT).
    Conflict between rule 15 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_NOT).
    Conflict between rule 15 and token SY_AND resolved as reduce (SY_AND < SY_NOT).
    Conflict between rule 15 and token SY_OR resolved as reduce (SY_OR < SY_NOT).
    Conflict between rule 15 and token SY_ASSIGN resolved as reduce (SY_ASSIGN < SY_NOT).
    Conflict between rule 15 and token SY_NOT resolved as reduce (%left SY_NOT).


State 109

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   34 expression: SY_LEFT_BRACKET expression . SY_RIGHT_BRACKET

    SY_DASH            shift, and go to state 112
    SY_PLUS            shift, and go to state 113
    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125
    SY_RIGHT_BRACKET   shift, and go to state 131


State 110

    9 proc_call: IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET .

    $default  reduce using rule 9 (proc_call)


State 111

   13 arglist: arglist SY_COMMA . expression
   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 132


State 112

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   17           | expression SY_DASH . expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 133


State 113

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   18           | expression SY_PLUS . expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 134


State 114

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   19           | expression SY_STAR . expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 135


State 115

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   20           | expression SY_SLASH . expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 136


State 116

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   21           | expression SY_EQUALS . expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 137


State 117

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   22           | expression SY_LESS . expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 138


State 118

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   23           | expression SY_GREATER . expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 139


State 119

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   24           | expression SY_LESS_EQUALS . expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 140


State 120

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   25           | expression SY_GREATER_EQUALS . expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 141


State 121

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   26           | expression SY_LESS_BIGGER . expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 142


State 122

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   27           | expression SY_AND . expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 143


State 123

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   28           | expression SY_OR . expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 144


State 124

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   29           | expression SY_ASSIGN . expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 145


State 125

   16 unary_exp: expression SY_NOT .

    $default  reduce using rule 16 (unary_exp)


State 126

   47 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_COLON return_type .

    $default  reduce using rule 47 (advanced_data_type)


State 127

   44 advanced_data_type: . simple_data_type
   45                   | . KW_ARRAY KW_OF simple_data_type
   46                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   47                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_COLON return_type
   50 simple_data_type: . KW_INTEGER
   51                 | . KW_CHAR
   52                 | . KW_BOOLEAN
   53                 | . KW_REAL
   71 args_decl_list: args_decl_list SY_COMMA IDENT SY_COLON . advanced_data_type

    KW_FUNCTION  shift, and go to state 28
    KW_ARRAY     shift, and go to state 29
    KW_BOOLEAN   shift, and go to state 30
    KW_REAL      shift, and go to state 31
    KW_CHAR      shift, and go to state 32
    KW_INTEGER   shift, and go to state 33

    advanced_data_type  go to state 146
    simple_data_type    go to state 35


State 128

   54 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   55         | . KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   56         | . var_decl1 var_decl2 var_decl3 var_decl
   57 var_decl1: . IDENT
   58          | . var_decl1 SY_COMMA IDENT
   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON . function_body
   75 function_body: . var_decl subprogram command

    IDENT   shift, and go to state 13
    KW_VAR  shift, and go to state 14

    $default  reduce using rule 54 (var_decl)

    var_decl       go to state 147
    var_decl1      go to state 16
    function_body  go to state 148


State 129

   63 subprogram: . %empty  [KW_BEGIN]
   64           | . procedure_header
   65           | . function_header
   66 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   67 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   74 procedure_body: var_decl . subprogram command

    KW_FUNCTION   shift, and go to state 20
    KW_PROCEDURE  shift, and go to state 21

    $default  reduce using rule 63 (subprogram)

    subprogram        go to state 149
    procedure_header  go to state 23
    function_header   go to state 24


State 130

   66 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body .

    $default  reduce using rule 66 (procedure_header)


State 131

   34 expression: SY_LEFT_BRACKET expression SY_RIGHT_BRACKET .

    $default  reduce using rule 34 (expression)


State 132

   13 arglist: arglist SY_COMMA expression .  [KW_END, SY_COMMA, SY_RIGHT_BRACKET]
   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_DASH            shift, and go to state 112
    SY_PLUS            shift, and go to state 113
    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 13 (arglist)


State 133

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   17           | expression SY_DASH expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_COMMA, SY_RIGHT_BRACKET]
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_PLUS            shift, and go to state 113
    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 17 (binary_exp)

    Conflict between rule 17 and token SY_DASH resolved as reduce (%left SY_DASH).
    Conflict between rule 17 and token SY_PLUS resolved as shift (SY_DASH < SY_PLUS).
    Conflict between rule 17 and token SY_STAR resolved as shift (SY_DASH < SY_STAR).
    Conflict between rule 17 and token SY_SLASH resolved as shift (SY_DASH < SY_SLASH).
    Conflict between rule 17 and token SY_EQUALS resolved as shift (SY_DASH < SY_EQUALS).
    Conflict between rule 17 and token SY_LESS resolved as shift (SY_DASH < SY_LESS).
    Conflict between rule 17 and token SY_GREATER resolved as shift (SY_DASH < SY_GREATER).
    Conflict between rule 17 and token SY_LESS_EQUALS resolved as shift (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_GREATER_EQUALS resolved as shift (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 17 and token SY_LESS_BIGGER resolved as shift (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 17 and token SY_AND resolved as shift (SY_DASH < SY_AND).
    Conflict between rule 17 and token SY_OR resolved as shift (SY_DASH < SY_OR).
    Conflict between rule 17 and token SY_ASSIGN resolved as shift (SY_DASH < SY_ASSIGN).
    Conflict between rule 17 and token SY_NOT resolved as shift (SY_DASH < SY_NOT).


State 134

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   18           | expression SY_PLUS expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_COMMA, SY_RIGHT_BRACKET]
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 18 (binary_exp)

    Conflict between rule 18 and token SY_DASH resolved as reduce (SY_DASH < SY_PLUS).
    Conflict between rule 18 and token SY_PLUS resolved as reduce (%left SY_PLUS).
    Conflict between rule 18 and token SY_STAR resolved as shift (SY_PLUS < SY_STAR).
    Conflict between rule 18 and token SY_SLASH resolved as shift (SY_PLUS < SY_SLASH).
    Conflict between rule 18 and token SY_EQUALS resolved as shift (SY_PLUS < SY_EQUALS).
    Conflict between rule 18 and token SY_LESS resolved as shift (SY_PLUS < SY_LESS).
    Conflict between rule 18 and token SY_GREATER resolved as shift (SY_PLUS < SY_GREATER).
    Conflict between rule 18 and token SY_LESS_EQUALS resolved as shift (SY_PLUS < SY_LESS_EQUALS).
    Conflict between rule 18 and token SY_GREATER_EQUALS resolved as shift (SY_PLUS < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_LESS_BIGGER resolved as shift (SY_PLUS < SY_LESS_BIGGER).
    Conflict between rule 18 and token SY_AND resolved as shift (SY_PLUS < SY_AND).
    Conflict between rule 18 and token SY_OR resolved as shift (SY_PLUS < SY_OR).
    Conflict between rule 18 and token SY_ASSIGN resolved as shift (SY_PLUS < SY_ASSIGN).
    Conflict between rule 18 and token SY_NOT resolved as shift (SY_PLUS < SY_NOT).


State 135

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   19           | expression SY_STAR expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_COMMA, SY_RIGHT_BRACKET]
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 19 (binary_exp)

    Conflict between rule 19 and token SY_DASH resolved as reduce (SY_DASH < SY_STAR).
    Conflict between rule 19 and token SY_PLUS resolved as reduce (SY_PLUS < SY_STAR).
    Conflict between rule 19 and token SY_STAR resolved as reduce (%left SY_STAR).
    Conflict between rule 19 and token SY_SLASH resolved as shift (SY_STAR < SY_SLASH).
    Conflict between rule 19 and token SY_EQUALS resolved as shift (SY_STAR < SY_EQUALS).
    Conflict between rule 19 and token SY_LESS resolved as shift (SY_STAR < SY_LESS).
    Conflict between rule 19 and token SY_GREATER resolved as shift (SY_STAR < SY_GREATER).
    Conflict between rule 19 and token SY_LESS_EQUALS resolved as shift (SY_STAR < SY_LESS_EQUALS).
    Conflict between rule 19 and token SY_GREATER_EQUALS resolved as shift (SY_STAR < SY_GREATER_EQUALS).
    Conflict between rule 19 and token SY_LESS_BIGGER resolved as shift (SY_STAR < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_AND resolved as shift (SY_STAR < SY_AND).
    Conflict between rule 19 and token SY_OR resolved as shift (SY_STAR < SY_OR).
    Conflict between rule 19 and token SY_ASSIGN resolved as shift (SY_STAR < SY_ASSIGN).
    Conflict between rule 19 and token SY_NOT resolved as shift (SY_STAR < SY_NOT).


State 136

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   20           | expression SY_SLASH expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_COMMA, SY_RIGHT_BRACKET]
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 20 (binary_exp)

    Conflict between rule 20 and token SY_DASH resolved as reduce (SY_DASH < SY_SLASH).
    Conflict between rule 20 and token SY_PLUS resolved as reduce (SY_PLUS < SY_SLASH).
    Conflict between rule 20 and token SY_STAR resolved as reduce (SY_STAR < SY_SLASH).
    Conflict between rule 20 and token SY_SLASH resolved as reduce (%left SY_SLASH).
    Conflict between rule 20 and token SY_EQUALS resolved as shift (SY_SLASH < SY_EQUALS).
    Conflict between rule 20 and token SY_LESS resolved as shift (SY_SLASH < SY_LESS).
    Conflict between rule 20 and token SY_GREATER resolved as shift (SY_SLASH < SY_GREATER).
    Conflict between rule 20 and token SY_LESS_EQUALS resolved as shift (SY_SLASH < SY_LESS_EQUALS).
    Conflict between rule 20 and token SY_GREATER_EQUALS resolved as shift (SY_SLASH < SY_GREATER_EQUALS).
    Conflict between rule 20 and token SY_LESS_BIGGER resolved as shift (SY_SLASH < SY_LESS_BIGGER).
    Conflict between rule 20 and token SY_AND resolved as shift (SY_SLASH < SY_AND).
    Conflict between rule 20 and token SY_OR resolved as shift (SY_SLASH < SY_OR).
    Conflict between rule 20 and token SY_ASSIGN resolved as shift (SY_SLASH < SY_ASSIGN).
    Conflict between rule 20 and token SY_NOT resolved as shift (SY_SLASH < SY_NOT).


State 137

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   21           | expression SY_EQUALS expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_COMMA, SY_RIGHT_BRACKET]
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 21 (binary_exp)

    Conflict between rule 21 and token SY_DASH resolved as reduce (SY_DASH < SY_EQUALS).
    Conflict between rule 21 and token SY_PLUS resolved as reduce (SY_PLUS < SY_EQUALS).
    Conflict between rule 21 and token SY_STAR resolved as reduce (SY_STAR < SY_EQUALS).
    Conflict between rule 21 and token SY_SLASH resolved as reduce (SY_SLASH < SY_EQUALS).
    Conflict between rule 21 and token SY_EQUALS resolved as reduce (%left SY_EQUALS).
    Conflict between rule 21 and token SY_LESS resolved as shift (SY_EQUALS < SY_LESS).
    Conflict between rule 21 and token SY_GREATER resolved as shift (SY_EQUALS < SY_GREATER).
    Conflict between rule 21 and token SY_LESS_EQUALS resolved as shift (SY_EQUALS < SY_LESS_EQUALS).
    Conflict between rule 21 and token SY_GREATER_EQUALS resolved as shift (SY_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 21 and token SY_LESS_BIGGER resolved as shift (SY_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 21 and token SY_AND resolved as shift (SY_EQUALS < SY_AND).
    Conflict between rule 21 and token SY_OR resolved as shift (SY_EQUALS < SY_OR).
    Conflict between rule 21 and token SY_ASSIGN resolved as shift (SY_EQUALS < SY_ASSIGN).
    Conflict between rule 21 and token SY_NOT resolved as shift (SY_EQUALS < SY_NOT).


State 138

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   22           | expression SY_LESS expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_COMMA, SY_RIGHT_BRACKET]
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 22 (binary_exp)

    Conflict between rule 22 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS).
    Conflict between rule 22 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS).
    Conflict between rule 22 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS).
    Conflict between rule 22 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS).
    Conflict between rule 22 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS).
    Conflict between rule 22 and token SY_LESS resolved as reduce (%left SY_LESS).
    Conflict between rule 22 and token SY_GREATER resolved as shift (SY_LESS < SY_GREATER).
    Conflict between rule 22 and token SY_LESS_EQUALS resolved as shift (SY_LESS < SY_LESS_EQUALS).
    Conflict between rule 22 and token SY_GREATER_EQUALS resolved as shift (SY_LESS < SY_GREATER_EQUALS).
    Conflict between rule 22 and token SY_LESS_BIGGER resolved as shift (SY_LESS < SY_LESS_BIGGER).
    Conflict between rule 22 and token SY_AND resolved as shift (SY_LESS < SY_AND).
    Conflict between rule 22 and token SY_OR resolved as shift (SY_LESS < SY_OR).
    Conflict between rule 22 and token SY_ASSIGN resolved as shift (SY_LESS < SY_ASSIGN).
    Conflict between rule 22 and token SY_NOT resolved as shift (SY_LESS < SY_NOT).


State 139

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   23           | expression SY_GREATER expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_COMMA, SY_RIGHT_BRACKET]
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 23 (binary_exp)

    Conflict between rule 23 and token SY_DASH resolved as reduce (SY_DASH < SY_GREATER).
    Conflict between rule 23 and token SY_PLUS resolved as reduce (SY_PLUS < SY_GREATER).
    Conflict between rule 23 and token SY_STAR resolved as reduce (SY_STAR < SY_GREATER).
    Conflict between rule 23 and token SY_SLASH resolved as reduce (SY_SLASH < SY_GREATER).
    Conflict between rule 23 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_GREATER).
    Conflict between rule 23 and token SY_LESS resolved as reduce (SY_LESS < SY_GREATER).
    Conflict between rule 23 and token SY_GREATER resolved as reduce (%left SY_GREATER).
    Conflict between rule 23 and token SY_LESS_EQUALS resolved as shift (SY_GREATER < SY_LESS_EQUALS).
    Conflict between rule 23 and token SY_GREATER_EQUALS resolved as shift (SY_GREATER < SY_GREATER_EQUALS).
    Conflict between rule 23 and token SY_LESS_BIGGER resolved as shift (SY_GREATER < SY_LESS_BIGGER).
    Conflict between rule 23 and token SY_AND resolved as shift (SY_GREATER < SY_AND).
    Conflict between rule 23 and token SY_OR resolved as shift (SY_GREATER < SY_OR).
    Conflict between rule 23 and token SY_ASSIGN resolved as shift (SY_GREATER < SY_ASSIGN).
    Conflict between rule 23 and token SY_NOT resolved as shift (SY_GREATER < SY_NOT).


State 140

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   24           | expression SY_LESS_EQUALS expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_COMMA, SY_RIGHT_BRACKET]
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 24 (binary_exp)

    Conflict between rule 24 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_LESS resolved as reduce (SY_LESS < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_GREATER resolved as reduce (SY_GREATER < SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_LESS_EQUALS resolved as reduce (%left SY_LESS_EQUALS).
    Conflict between rule 24 and token SY_GREATER_EQUALS resolved as shift (SY_LESS_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 24 and token SY_LESS_BIGGER resolved as shift (SY_LESS_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 24 and token SY_AND resolved as shift (SY_LESS_EQUALS < SY_AND).
    Conflict between rule 24 and token SY_OR resolved as shift (SY_LESS_EQUALS < SY_OR).
    Conflict between rule 24 and token SY_ASSIGN resolved as shift (SY_LESS_EQUALS < SY_ASSIGN).
    Conflict between rule 24 and token SY_NOT resolved as shift (SY_LESS_EQUALS < SY_NOT).


State 141

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   25           | expression SY_GREATER_EQUALS expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_COMMA, SY_RIGHT_BRACKET]
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_LESS_BIGGER  shift, and go to state 121
    SY_AND          shift, and go to state 122
    SY_OR           shift, and go to state 123
    SY_ASSIGN       shift, and go to state 124
    SY_NOT          shift, and go to state 125

    $default  reduce using rule 25 (binary_exp)

    Conflict between rule 25 and token SY_DASH resolved as reduce (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_PLUS resolved as reduce (SY_PLUS < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_STAR resolved as reduce (SY_STAR < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_SLASH resolved as reduce (SY_SLASH < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_LESS resolved as reduce (SY_LESS < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_GREATER resolved as reduce (SY_GREATER < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_GREATER_EQUALS resolved as reduce (%left SY_GREATER_EQUALS).
    Conflict between rule 25 and token SY_LESS_BIGGER resolved as shift (SY_GREATER_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 25 and token SY_AND resolved as shift (SY_GREATER_EQUALS < SY_AND).
    Conflict between rule 25 and token SY_OR resolved as shift (SY_GREATER_EQUALS < SY_OR).
    Conflict between rule 25 and token SY_ASSIGN resolved as shift (SY_GREATER_EQUALS < SY_ASSIGN).
    Conflict between rule 25 and token SY_NOT resolved as shift (SY_GREATER_EQUALS < SY_NOT).


State 142

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   26           | expression SY_LESS_BIGGER expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_COMMA, SY_RIGHT_BRACKET]
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_AND     shift, and go to state 122
    SY_OR      shift, and go to state 123
    SY_ASSIGN  shift, and go to state 124
    SY_NOT     shift, and go to state 125

    $default  reduce using rule 26 (binary_exp)

    Conflict between rule 26 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_LESS resolved as reduce (SY_LESS < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_GREATER resolved as reduce (SY_GREATER < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_LESS_BIGGER resolved as reduce (%left SY_LESS_BIGGER).
    Conflict between rule 26 and token SY_AND resolved as shift (SY_LESS_BIGGER < SY_AND).
    Conflict between rule 26 and token SY_OR resolved as shift (SY_LESS_BIGGER < SY_OR).
    Conflict between rule 26 and token SY_ASSIGN resolved as shift (SY_LESS_BIGGER < SY_ASSIGN).
    Conflict between rule 26 and token SY_NOT resolved as shift (SY_LESS_BIGGER < SY_NOT).


State 143

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   27           | expression SY_AND expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_COMMA, SY_RIGHT_BRACKET]
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression

    SY_OR      shift, and go to state 123
    SY_ASSIGN  shift, and go to state 124
    SY_NOT     shift, and go to state 125

    $default  reduce using rule 27 (binary_exp)

    Conflict between rule 27 and token SY_DASH resolved as reduce (SY_DASH < SY_AND).
    Conflict between rule 27 and token SY_PLUS resolved as reduce (SY_PLUS < SY_AND).
    Conflict between rule 27 and token SY_STAR resolved as reduce (SY_STAR < SY_AND).
    Conflict between rule 27 and token SY_SLASH resolved as reduce (SY_SLASH < SY_AND).
    Conflict between rule 27 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_AND).
    Conflict between rule 27 and token SY_LESS resolved as reduce (SY_LESS < SY_AND).
    Conflict between rule 27 and token SY_GREATER resolved as reduce (SY_GREATER < SY_AND).
    Conflict between rule 27 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_AND).
    Conflict between rule 27 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_AND).
    Conflict between rule 27 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_AND).
    Conflict between rule 27 and token SY_AND resolved as reduce (%left SY_AND).
    Conflict between rule 27 and token SY_OR resolved as shift (SY_AND < SY_OR).
    Conflict between rule 27 and token SY_ASSIGN resolved as shift (SY_AND < SY_ASSIGN).
    Conflict between rule 27 and token SY_NOT resolved as shift (SY_AND < SY_NOT).


State 144

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   28           | expression SY_OR expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_COMMA, SY_RIGHT_BRACKET]
   29           | expression . SY_ASSIGN expression

    SY_ASSIGN  shift, and go to state 124
    SY_NOT     shift, and go to state 125

    $default  reduce using rule 28 (binary_exp)

    Conflict between rule 28 and token SY_DASH resolved as reduce (SY_DASH < SY_OR).
    Conflict between rule 28 and token SY_PLUS resolved as reduce (SY_PLUS < SY_OR).
    Conflict between rule 28 and token SY_STAR resolved as reduce (SY_STAR < SY_OR).
    Conflict between rule 28 and token SY_SLASH resolved as reduce (SY_SLASH < SY_OR).
    Conflict between rule 28 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_OR).
    Conflict between rule 28 and token SY_LESS resolved as reduce (SY_LESS < SY_OR).
    Conflict between rule 28 and token SY_GREATER resolved as reduce (SY_GREATER < SY_OR).
    Conflict between rule 28 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_OR).
    Conflict between rule 28 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_OR).
    Conflict between rule 28 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_OR).
    Conflict between rule 28 and token SY_AND resolved as reduce (SY_AND < SY_OR).
    Conflict between rule 28 and token SY_OR resolved as reduce (%left SY_OR).
    Conflict between rule 28 and token SY_ASSIGN resolved as shift (SY_OR < SY_ASSIGN).
    Conflict between rule 28 and token SY_NOT resolved as shift (SY_OR < SY_NOT).


State 145

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   29           | expression SY_ASSIGN expression .  [KW_END, KW_DO, KW_THEN, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_COMMA, SY_RIGHT_BRACKET]

    SY_NOT  shift, and go to state 125

    $default  reduce using rule 29 (binary_exp)

    Conflict between rule 29 and token SY_DASH resolved as reduce (SY_DASH < SY_ASSIGN).
    Conflict between rule 29 and token SY_PLUS resolved as reduce (SY_PLUS < SY_ASSIGN).
    Conflict between rule 29 and token SY_STAR resolved as reduce (SY_STAR < SY_ASSIGN).
    Conflict between rule 29 and token SY_SLASH resolved as reduce (SY_SLASH < SY_ASSIGN).
    Conflict between rule 29 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_ASSIGN).
    Conflict between rule 29 and token SY_LESS resolved as reduce (SY_LESS < SY_ASSIGN).
    Conflict between rule 29 and token SY_GREATER resolved as reduce (SY_GREATER < SY_ASSIGN).
    Conflict between rule 29 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_ASSIGN).
    Conflict between rule 29 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_ASSIGN).
    Conflict between rule 29 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_ASSIGN).
    Conflict between rule 29 and token SY_AND resolved as reduce (SY_AND < SY_ASSIGN).
    Conflict between rule 29 and token SY_OR resolved as reduce (SY_OR < SY_ASSIGN).
    Conflict between rule 29 and token SY_ASSIGN resolved as reduce (%left SY_ASSIGN).
    Conflict between rule 29 and token SY_NOT resolved as shift (SY_ASSIGN < SY_NOT).


State 146

   71 args_decl_list: args_decl_list SY_COMMA IDENT SY_COLON advanced_data_type .

    $default  reduce using rule 71 (args_decl_list)


State 147

   63 subprogram: . %empty  [KW_BEGIN]
   64           | . procedure_header
   65           | . function_header
   66 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   67 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   75 function_body: var_decl . subprogram command

    KW_FUNCTION   shift, and go to state 20
    KW_PROCEDURE  shift, and go to state 21

    $default  reduce using rule 63 (subprogram)

    subprogram        go to state 150
    procedure_header  go to state 23
    function_header   go to state 24


State 148

   67 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body .

    $default  reduce using rule 67 (function_header)


State 149

   74 procedure_body: var_decl subprogram . command
   76 command: . complex_cmd
   77 complex_cmd: . KW_BEGIN simple_cmd KW_END

    KW_BEGIN  shift, and go to state 151

    command      go to state 152
    complex_cmd  go to state 153


State 150

   75 function_body: var_decl subprogram . command
   76 command: . complex_cmd
   77 complex_cmd: . KW_BEGIN simple_cmd KW_END

    KW_BEGIN  shift, and go to state 151

    command      go to state 154
    complex_cmd  go to state 153


State 151

   77 complex_cmd: KW_BEGIN . simple_cmd KW_END
   78 simple_cmd: . SY_SEMICOLON
   79           | . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . if_cmd
   82           | . for_cmd
   83           | . while_cmd
   84           | . IDENT SY_COLON complex_cmd
   85           | . KW_GOTO IDENT
   86           | . KW_RETURN
   87           | . IDENT SY_LEFT_BRACKET arglist
   88 while_cmd: . KW_WHILE expression KW_DO complex_cmd
   89          | . KW_REPEAT complex_cmd KW_UNTIL expression
   90 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO complex_cmd
   91        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO complex_cmd
   92 if_cmd: . KW_IF expression KW_THEN complex_cmd else_state

    IDENT         shift, and go to state 155
    KW_RESULT     shift, and go to state 156
    KW_GOTO       shift, and go to state 157
    KW_RETURN     shift, and go to state 158
    KW_IF         shift, and go to state 159
    KW_FOR        shift, and go to state 160
    KW_REPEAT     shift, and go to state 161
    KW_WHILE      shift, and go to state 162
    SY_SEMICOLON  shift, and go to state 163

    simple_cmd  go to state 164
    while_cmd   go to state 165
    for_cmd     go to state 166
    if_cmd      go to state 167


State 152

   74 procedure_body: var_decl subprogram command .

    $default  reduce using rule 74 (procedure_body)


State 153

   76 command: complex_cmd .

    $default  reduce using rule 76 (command)


State 154

   75 function_body: var_decl subprogram command .

    $default  reduce using rule 75 (function_body)


State 155

   79 simple_cmd: IDENT . SY_ASSIGN expression
   84           | IDENT . SY_COLON complex_cmd
   87           | IDENT . SY_LEFT_BRACKET arglist

    SY_ASSIGN        shift, and go to state 168
    SY_COLON         shift, and go to state 169
    SY_LEFT_BRACKET  shift, and go to state 170


State 156

   80 simple_cmd: KW_RESULT . SY_ASSIGN expression

    SY_ASSIGN  shift, and go to state 171


State 157

   85 simple_cmd: KW_GOTO . IDENT

    IDENT  shift, and go to state 172


State 158

   86 simple_cmd: KW_RETURN .

    $default  reduce using rule 86 (simple_cmd)


State 159

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   92 if_cmd: KW_IF . expression KW_THEN complex_cmd else_state

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 173


State 160

   90 for_cmd: KW_FOR . IDENT SY_ASSIGN expression KW_TO expression KW_DO complex_cmd
   91        | KW_FOR . IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO complex_cmd

    IDENT  shift, and go to state 174


State 161

   77 complex_cmd: . KW_BEGIN simple_cmd KW_END
   89 while_cmd: KW_REPEAT . complex_cmd KW_UNTIL expression

    KW_BEGIN  shift, and go to state 151

    complex_cmd  go to state 175


State 162

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   88 while_cmd: KW_WHILE . expression KW_DO complex_cmd

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 176


State 163

   78 simple_cmd: SY_SEMICOLON .

    $default  reduce using rule 78 (simple_cmd)


State 164

   77 complex_cmd: KW_BEGIN simple_cmd . KW_END

    KW_END  shift, and go to state 177


State 165

   83 simple_cmd: while_cmd .

    $default  reduce using rule 83 (simple_cmd)


State 166

   82 simple_cmd: for_cmd .

    $default  reduce using rule 82 (simple_cmd)


State 167

   81 simple_cmd: if_cmd .

    $default  reduce using rule 81 (simple_cmd)


State 168

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   79 simple_cmd: IDENT SY_ASSIGN . expression

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 178


State 169

   77 complex_cmd: . KW_BEGIN simple_cmd KW_END
   84 simple_cmd: IDENT SY_COLON . complex_cmd

    KW_BEGIN  shift, and go to state 151

    complex_cmd  go to state 179


State 170

   12 arglist: . expression
   13        | . arglist SY_COMMA expression
   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   87 simple_cmd: IDENT SY_LEFT_BRACKET . arglist

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    arglist     go to state 180
    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 98


State 171

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   80 simple_cmd: KW_RESULT SY_ASSIGN . expression

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 181


State 172

   85 simple_cmd: KW_GOTO IDENT .

    $default  reduce using rule 85 (simple_cmd)


State 173

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   92 if_cmd: KW_IF expression . KW_THEN complex_cmd else_state

    KW_THEN            shift, and go to state 182
    SY_DASH            shift, and go to state 112
    SY_PLUS            shift, and go to state 113
    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125


State 174

   90 for_cmd: KW_FOR IDENT . SY_ASSIGN expression KW_TO expression KW_DO complex_cmd
   91        | KW_FOR IDENT . SY_ASSIGN expression KW_DOWNTO expression KW_DO complex_cmd

    SY_ASSIGN  shift, and go to state 183


State 175

   89 while_cmd: KW_REPEAT complex_cmd . KW_UNTIL expression

    KW_UNTIL  shift, and go to state 184


State 176

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   88 while_cmd: KW_WHILE expression . KW_DO complex_cmd

    KW_DO              shift, and go to state 185
    SY_DASH            shift, and go to state 112
    SY_PLUS            shift, and go to state 113
    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125


State 177

   77 complex_cmd: KW_BEGIN simple_cmd KW_END .

    $default  reduce using rule 77 (complex_cmd)


State 178

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   79 simple_cmd: IDENT SY_ASSIGN expression .  [KW_END]

    SY_DASH            shift, and go to state 112
    SY_PLUS            shift, and go to state 113
    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 79 (simple_cmd)


State 179

   84 simple_cmd: IDENT SY_COLON complex_cmd .

    $default  reduce using rule 84 (simple_cmd)


State 180

   13 arglist: arglist . SY_COMMA expression
   87 simple_cmd: IDENT SY_LEFT_BRACKET arglist .  [KW_END]

    SY_COMMA  shift, and go to state 111

    $default  reduce using rule 87 (simple_cmd)


State 181

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   80 simple_cmd: KW_RESULT SY_ASSIGN expression .  [KW_END]

    SY_DASH            shift, and go to state 112
    SY_PLUS            shift, and go to state 113
    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 80 (simple_cmd)


State 182

   77 complex_cmd: . KW_BEGIN simple_cmd KW_END
   92 if_cmd: KW_IF expression KW_THEN . complex_cmd else_state

    KW_BEGIN  shift, and go to state 151

    complex_cmd  go to state 186


State 183

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   90 for_cmd: KW_FOR IDENT SY_ASSIGN . expression KW_TO expression KW_DO complex_cmd
   91        | KW_FOR IDENT SY_ASSIGN . expression KW_DOWNTO expression KW_DO complex_cmd

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 187


State 184

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   89 while_cmd: KW_REPEAT complex_cmd KW_UNTIL . expression

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 188


State 185

   77 complex_cmd: . KW_BEGIN simple_cmd KW_END
   88 while_cmd: KW_WHILE expression KW_DO . complex_cmd

    KW_BEGIN  shift, and go to state 151

    complex_cmd  go to state 189


State 186

   92 if_cmd: KW_IF expression KW_THEN complex_cmd . else_state
   93 else_state: . %empty  [KW_END]
   94           | . KW_ELSE complex_cmd

    KW_ELSE  shift, and go to state 190

    $default  reduce using rule 93 (else_state)

    else_state  go to state 191


State 187

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   90 for_cmd: KW_FOR IDENT SY_ASSIGN expression . KW_TO expression KW_DO complex_cmd
   91        | KW_FOR IDENT SY_ASSIGN expression . KW_DOWNTO expression KW_DO complex_cmd

    KW_TO              shift, and go to state 192
    KW_DOWNTO          shift, and go to state 193
    SY_DASH            shift, and go to state 112
    SY_PLUS            shift, and go to state 113
    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125


State 188

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   89 while_cmd: KW_REPEAT complex_cmd KW_UNTIL expression .  [KW_END]

    SY_DASH            shift, and go to state 112
    SY_PLUS            shift, and go to state 113
    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125

    $default  reduce using rule 89 (while_cmd)


State 189

   88 while_cmd: KW_WHILE expression KW_DO complex_cmd .

    $default  reduce using rule 88 (while_cmd)


State 190

   77 complex_cmd: . KW_BEGIN simple_cmd KW_END
   94 else_state: KW_ELSE . complex_cmd

    KW_BEGIN  shift, and go to state 151

    complex_cmd  go to state 194


State 191

   92 if_cmd: KW_IF expression KW_THEN complex_cmd else_state .

    $default  reduce using rule 92 (if_cmd)


State 192

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   90 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO . expression KW_DO complex_cmd

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 195


State 193

   14 unary_exp: . SY_DASH expression
   15          | . SY_NOT expression
   16          | . expression SY_NOT
   17 binary_exp: . expression SY_DASH expression
   18           | . expression SY_PLUS expression
   19           | . expression SY_STAR expression
   20           | . expression SY_SLASH expression
   21           | . expression SY_EQUALS expression
   22           | . expression SY_LESS expression
   23           | . expression SY_GREATER expression
   24           | . expression SY_LESS_EQUALS expression
   25           | . expression SY_GREATER_EQUALS expression
   26           | . expression SY_LESS_BIGGER expression
   27           | . expression SY_AND expression
   28           | . expression SY_OR expression
   29           | . expression SY_ASSIGN expression
   30 expression: . POSINT
   31           | . REAL
   32           | . STRING
   33           | . IDENT
   34           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   35           | . unary_exp
   36           | . binary_exp
   91 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO . expression KW_DO complex_cmd

    IDENT            shift, and go to state 87
    POSINT           shift, and go to state 88
    REAL             shift, and go to state 89
    STRING           shift, and go to state 90
    SY_DASH          shift, and go to state 91
    SY_NOT           shift, and go to state 92
    SY_LEFT_BRACKET  shift, and go to state 93

    unary_exp   go to state 96
    binary_exp  go to state 97
    expression  go to state 196


State 194

   94 else_state: KW_ELSE complex_cmd .

    $default  reduce using rule 94 (else_state)


State 195

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   90 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression . KW_DO complex_cmd

    KW_DO              shift, and go to state 197
    SY_DASH            shift, and go to state 112
    SY_PLUS            shift, and go to state 113
    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125


State 196

   16 unary_exp: expression . SY_NOT
   17 binary_exp: expression . SY_DASH expression
   18           | expression . SY_PLUS expression
   19           | expression . SY_STAR expression
   20           | expression . SY_SLASH expression
   21           | expression . SY_EQUALS expression
   22           | expression . SY_LESS expression
   23           | expression . SY_GREATER expression
   24           | expression . SY_LESS_EQUALS expression
   25           | expression . SY_GREATER_EQUALS expression
   26           | expression . SY_LESS_BIGGER expression
   27           | expression . SY_AND expression
   28           | expression . SY_OR expression
   29           | expression . SY_ASSIGN expression
   91 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression . KW_DO complex_cmd

    KW_DO              shift, and go to state 198
    SY_DASH            shift, and go to state 112
    SY_PLUS            shift, and go to state 113
    SY_STAR            shift, and go to state 114
    SY_SLASH           shift, and go to state 115
    SY_EQUALS          shift, and go to state 116
    SY_LESS            shift, and go to state 117
    SY_GREATER         shift, and go to state 118
    SY_LESS_EQUALS     shift, and go to state 119
    SY_GREATER_EQUALS  shift, and go to state 120
    SY_LESS_BIGGER     shift, and go to state 121
    SY_AND             shift, and go to state 122
    SY_OR              shift, and go to state 123
    SY_ASSIGN          shift, and go to state 124
    SY_NOT             shift, and go to state 125


State 197

   77 complex_cmd: . KW_BEGIN simple_cmd KW_END
   90 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO . complex_cmd

    KW_BEGIN  shift, and go to state 151

    complex_cmd  go to state 199


State 198

   77 complex_cmd: . KW_BEGIN simple_cmd KW_END
   91 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO . complex_cmd

    KW_BEGIN  shift, and go to state 151

    complex_cmd  go to state 200


State 199

   90 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO complex_cmd .

    $default  reduce using rule 90 (for_cmd)


State 200

   91 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO complex_cmd .

    $default  reduce using rule 91 (for_cmd)
