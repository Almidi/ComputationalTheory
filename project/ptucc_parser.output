Terminals unused in grammar

   CAST
   BOOL
   KW_AND
   KW_DIV
   KW_MOD
   KW_NOT
   KW_OR


State 153 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_decl type_def var_decl subprogram_list complex_cmd SY_PERIOD

    2 program_decl: KW_PROGRAM IDENT SY_SEMICOLON

    3 arguments: %empty
    4          | arglist

    5 arglist: expression
    6        | arglist SY_COMMA expression

    7 unary_exp: SY_DASH expression
    8          | SY_NOT expression
    9          | expression SY_NOT
   10          | SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression

   11 binary_exp: expression SY_DASH expression
   12           | expression SY_PLUS expression
   13           | expression SY_STAR expression
   14           | expression SY_SLASH expression
   15           | expression SY_EQUALS expression
   16           | expression SY_LESS expression
   17           | expression SY_GREATER expression
   18           | expression SY_LESS_EQUALS expression
   19           | expression SY_GREATER_EQUALS expression
   20           | expression SY_LESS_BIGGER expression
   21           | expression SY_AND expression
   22           | expression SY_OR expression
   23           | expression SY_ASSIGN expression

   24 expression: POSINT
   25           | REAL
   26           | STRING
   27           | IDENT
   28           | KW_RESULT
   29           | SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | unary_exp
   31           | binary_exp
   32           | proc_call

   33 type_def: %empty
   34         | KW_TYPE type_list

   35 type_list: shortcut_data_type
   36          | type_list shortcut_data_type

   37 shortcut_data_type: IDENT SY_EQUALS advanced_data_type SY_SEMICOLON

   38 advanced_data_type: simple_data_type
   39                   | KW_ARRAY KW_OF simple_data_type
   40                   | KW_ARRAY matrix_n KW_OF simple_data_type
   41                   | KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type

   42 matrix_n: SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   43         | matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

   44 simple_data_type: KW_INTEGER
   45                 | KW_CHAR
   46                 | KW_BOOLEAN
   47                 | KW_REAL
   48                 | DEF_TYPE

   49 var_decl: %empty
   50         | KW_VAR var_decl_list

   51 var_decl_list: var_decl1 var_decl2 var_decl3
   52              | var_decl_list var_decl1 var_decl2 var_decl3

   53 var_decl1: IDENT
   54          | var_decl1 SY_COMMA IDENT

   55 var_decl2: SY_COLON
   56          | SY_COLON KW_ARRAY matrix_n KW_OF
   57          | SY_COLON KW_ARRAY KW_OF

   58 var_decl3: simple_data_type SY_SEMICOLON

   59 subprogram: procedure_header
   60           | function_header

   61 subprogram_list: %empty
   62                | subprogram_list subprogram

   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

   65 args_decl: %empty
   66          | args_decl_list

   67 args_decl_list: IDENT SY_COLON advanced_data_type
   68               | args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type

   69 return_type: %empty
   70            | SY_COLON advanced_data_type

   71 procedure_body: var_decl subprogram_list complex_cmd SY_SEMICOLON

   72 function_body: var_decl subprogram_list complex_cmd SY_SEMICOLON

   73 all_commands: complex_cmd
   74             | simple_cmd

   75 complex_cmd: KW_BEGIN cmd_list KW_END

   76 cmd_list: %empty
   77         | simple_cmd
   78         | cmd_list SY_SEMICOLON simple_cmd

   79 simple_cmd: IDENT SY_ASSIGN expression
   80           | KW_RESULT SY_ASSIGN expression
   81           | if_cmd
   82           | for_cmd
   83           | while_cmd
   84           | IDENT SY_COLON all_commands
   85           | KW_GOTO IDENT
   86           | KW_RETURN
   87           | IDENT SY_LEFT_BRACKET arglist
   88           | proc_call

   89 proc_call: IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

   90 while_cmd: KW_WHILE expression KW_DO all_commands
   91          | KW_REPEAT all_commands KW_UNTIL expression

   92 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   93        | KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

   94 if_cmd: KW_IF expression KW_THEN all_commands else_state

   95 else_state: KW_ELSE all_commands
   96           | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 2 27 37 53 54 63 64 67 68 79 84 85 87 89 92 93
POSINT (259) 24 42 43
REAL (260) 25
STRING (261) 26
CAST (262)
BOOL (263)
DEF_TYPE (264) 48
KW_PROGRAM (265) 2
KW_BEGIN (266) 75
KW_END (267) 75
KW_AND (268)
KW_DIV (269)
KW_FUNCTION (270) 41 64
KW_MOD (271)
KW_PROCEDURE (272) 63
KW_RESULT (273) 28 80
KW_ARRAY (274) 39 40 56 57
KW_DO (275) 90 92 93
KW_GOTO (276) 85
KW_NOT (277)
KW_RETURN (278) 86
KW_BOOLEAN (279) 46
KW_ELSE (280) 95
KW_IF (281) 94
KW_OF (282) 39 40 56 57
KW_REAL (283) 47
KW_THEN (284) 94
KW_CHAR (285) 45
KW_FOR (286) 92 93
KW_INTEGER (287) 44
KW_OR (288)
KW_REPEAT (289) 91
KW_UNTIL (290) 91
KW_VAR (291) 50
KW_WHILE (292) 90
KW_TO (293) 92
KW_DOWNTO (294) 93
KW_TYPE (295) 34
SY_DASH (296) 7 11
SY_PLUS (297) 12
SY_STAR (298) 13
SY_SLASH (299) 14
SY_EQUALS (300) 15 37
SY_LESS (301) 16
SY_GREATER (302) 17
SY_LESS_EQUALS (303) 18
SY_GREATER_EQUALS (304) 19
SY_LESS_BIGGER (305) 20
SY_AND (306) 21
SY_OR (307) 22
SY_ASSIGN (308) 23 79 80 92 93
SY_NOT (309) 8 9
SY_COMMA (310) 6 54
SY_LEFT_SQR_BRACKET (311) 42 43
SY_RIGHT_SQR_BRACKET (312) 42 43
SY_COLON (313) 55 56 57 67 68 70 84
SY_SEMICOLON (314) 2 37 58 63 64 68 71 72 78
SY_PERIOD (315) 1
SY_LEFT_BRACKET (316) 10 29 41 63 64 87 89
SY_RIGHT_BRACKET (317) 10 29 41 63 64 89


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
program (64)
    on left: 1, on right: 0
program_decl (65)
    on left: 2, on right: 1
arguments (66)
    on left: 3 4, on right: 89
arglist (67)
    on left: 5 6, on right: 4 6 87
unary_exp (68)
    on left: 7 8 9 10, on right: 30
binary_exp (69)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22 23, on right: 31
expression (70)
    on left: 24 25 26 27 28 29 30 31 32, on right: 5 6 7 8 9 10 11
    12 13 14 15 16 17 18 19 20 21 22 23 29 79 80 90 91 92 93 94
type_def (71)
    on left: 33 34, on right: 1
type_list (72)
    on left: 35 36, on right: 34 36
shortcut_data_type (73)
    on left: 37, on right: 35 36
advanced_data_type (74)
    on left: 38 39 40 41, on right: 37 67 68 70
matrix_n (75)
    on left: 42 43, on right: 40 43 56
simple_data_type (76)
    on left: 44 45 46 47 48, on right: 10 38 39 40 58
var_decl (77)
    on left: 49 50, on right: 1 71 72
var_decl_list (78)
    on left: 51 52, on right: 50 52
var_decl1 (79)
    on left: 53 54, on right: 51 52 54
var_decl2 (80)
    on left: 55 56 57, on right: 51 52
var_decl3 (81)
    on left: 58, on right: 51 52
subprogram (82)
    on left: 59 60, on right: 62
subprogram_list (83)
    on left: 61 62, on right: 1 62 71 72
procedure_header (84)
    on left: 63, on right: 59
function_header (85)
    on left: 64, on right: 60
args_decl (86)
    on left: 65 66, on right: 41 63 64
args_decl_list (87)
    on left: 67 68, on right: 66 68
return_type (88)
    on left: 69 70, on right: 41 64
procedure_body (89)
    on left: 71, on right: 63
function_body (90)
    on left: 72, on right: 64
all_commands (91)
    on left: 73 74, on right: 84 90 91 92 93 94 95
complex_cmd (92)
    on left: 75, on right: 1 71 72 73
cmd_list (93)
    on left: 76 77 78, on right: 75 78
simple_cmd (94)
    on left: 79 80 81 82 83 84 85 86 87 88, on right: 74 77 78
proc_call (95)
    on left: 89, on right: 32 88
while_cmd (96)
    on left: 90 91, on right: 83
for_cmd (97)
    on left: 92 93, on right: 82
if_cmd (98)
    on left: 94, on right: 81
else_state (99)
    on left: 95 96, on right: 94


State 0

    0 $accept: . program $end
    1 program: . program_decl type_def var_decl subprogram_list complex_cmd SY_PERIOD
    2 program_decl: . KW_PROGRAM IDENT SY_SEMICOLON

    KW_PROGRAM  shift, and go to state 1

    program       go to state 2
    program_decl  go to state 3


State 1

    2 program_decl: KW_PROGRAM . IDENT SY_SEMICOLON

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: program_decl . type_def var_decl subprogram_list complex_cmd SY_PERIOD
   33 type_def: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   34         | . KW_TYPE type_list

    KW_TYPE  shift, and go to state 6

    $default  reduce using rule 33 (type_def)

    type_def  go to state 7


State 4

    2 program_decl: KW_PROGRAM IDENT . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 8


State 5

    0 $accept: program $end .

    $default  accept


State 6

   34 type_def: KW_TYPE . type_list
   35 type_list: . shortcut_data_type
   36          | . type_list shortcut_data_type
   37 shortcut_data_type: . IDENT SY_EQUALS advanced_data_type SY_SEMICOLON

    IDENT  shift, and go to state 9

    type_list           go to state 10
    shortcut_data_type  go to state 11


State 7

    1 program: program_decl type_def . var_decl subprogram_list complex_cmd SY_PERIOD
   49 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   50         | . KW_VAR var_decl_list

    KW_VAR  shift, and go to state 12

    $default  reduce using rule 49 (var_decl)

    var_decl  go to state 13


State 8

    2 program_decl: KW_PROGRAM IDENT SY_SEMICOLON .

    $default  reduce using rule 2 (program_decl)


State 9

   37 shortcut_data_type: IDENT . SY_EQUALS advanced_data_type SY_SEMICOLON

    SY_EQUALS  shift, and go to state 14


State 10

   34 type_def: KW_TYPE type_list .  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   36 type_list: type_list . shortcut_data_type
   37 shortcut_data_type: . IDENT SY_EQUALS advanced_data_type SY_SEMICOLON

    IDENT  shift, and go to state 9

    $default  reduce using rule 34 (type_def)

    shortcut_data_type  go to state 15


State 11

   35 type_list: shortcut_data_type .

    $default  reduce using rule 35 (type_list)


State 12

   50 var_decl: KW_VAR . var_decl_list
   51 var_decl_list: . var_decl1 var_decl2 var_decl3
   52              | . var_decl_list var_decl1 var_decl2 var_decl3
   53 var_decl1: . IDENT
   54          | . var_decl1 SY_COMMA IDENT

    IDENT  shift, and go to state 16

    var_decl_list  go to state 17
    var_decl1      go to state 18


State 13

    1 program: program_decl type_def var_decl . subprogram_list complex_cmd SY_PERIOD
   61 subprogram_list: . %empty
   62                | . subprogram_list subprogram

    $default  reduce using rule 61 (subprogram_list)

    subprogram_list  go to state 19


State 14

   37 shortcut_data_type: IDENT SY_EQUALS . advanced_data_type SY_SEMICOLON
   38 advanced_data_type: . simple_data_type
   39                   | . KW_ARRAY KW_OF simple_data_type
   40                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   41                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . DEF_TYPE

    DEF_TYPE     shift, and go to state 20
    KW_FUNCTION  shift, and go to state 21
    KW_ARRAY     shift, and go to state 22
    KW_BOOLEAN   shift, and go to state 23
    KW_REAL      shift, and go to state 24
    KW_CHAR      shift, and go to state 25
    KW_INTEGER   shift, and go to state 26

    advanced_data_type  go to state 27
    simple_data_type    go to state 28


State 15

   36 type_list: type_list shortcut_data_type .

    $default  reduce using rule 36 (type_list)


State 16

   53 var_decl1: IDENT .

    $default  reduce using rule 53 (var_decl1)


State 17

   50 var_decl: KW_VAR var_decl_list .  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   52 var_decl_list: var_decl_list . var_decl1 var_decl2 var_decl3
   53 var_decl1: . IDENT
   54          | . var_decl1 SY_COMMA IDENT

    IDENT  shift, and go to state 16

    $default  reduce using rule 50 (var_decl)

    var_decl1  go to state 29


State 18

   51 var_decl_list: var_decl1 . var_decl2 var_decl3
   54 var_decl1: var_decl1 . SY_COMMA IDENT
   55 var_decl2: . SY_COLON
   56          | . SY_COLON KW_ARRAY matrix_n KW_OF
   57          | . SY_COLON KW_ARRAY KW_OF

    SY_COMMA  shift, and go to state 30
    SY_COLON  shift, and go to state 31

    var_decl2  go to state 32


State 19

    1 program: program_decl type_def var_decl subprogram_list . complex_cmd SY_PERIOD
   59 subprogram: . procedure_header
   60           | . function_header
   62 subprogram_list: subprogram_list . subprogram
   63 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   64 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   75 complex_cmd: . KW_BEGIN cmd_list KW_END

    KW_BEGIN      shift, and go to state 33
    KW_FUNCTION   shift, and go to state 34
    KW_PROCEDURE  shift, and go to state 35

    subprogram        go to state 36
    procedure_header  go to state 37
    function_header   go to state 38
    complex_cmd       go to state 39


State 20

   48 simple_data_type: DEF_TYPE .

    $default  reduce using rule 48 (simple_data_type)


State 21

   41 advanced_data_type: KW_FUNCTION . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type

    SY_LEFT_BRACKET  shift, and go to state 40


State 22

   39 advanced_data_type: KW_ARRAY . KW_OF simple_data_type
   40                   | KW_ARRAY . matrix_n KW_OF simple_data_type
   42 matrix_n: . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   43         | . matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

    KW_OF                shift, and go to state 41
    SY_LEFT_SQR_BRACKET  shift, and go to state 42

    matrix_n  go to state 43


State 23

   46 simple_data_type: KW_BOOLEAN .

    $default  reduce using rule 46 (simple_data_type)


State 24

   47 simple_data_type: KW_REAL .

    $default  reduce using rule 47 (simple_data_type)


State 25

   45 simple_data_type: KW_CHAR .

    $default  reduce using rule 45 (simple_data_type)


State 26

   44 simple_data_type: KW_INTEGER .

    $default  reduce using rule 44 (simple_data_type)


State 27

   37 shortcut_data_type: IDENT SY_EQUALS advanced_data_type . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 44


State 28

   38 advanced_data_type: simple_data_type .

    $default  reduce using rule 38 (advanced_data_type)


State 29

   52 var_decl_list: var_decl_list var_decl1 . var_decl2 var_decl3
   54 var_decl1: var_decl1 . SY_COMMA IDENT
   55 var_decl2: . SY_COLON
   56          | . SY_COLON KW_ARRAY matrix_n KW_OF
   57          | . SY_COLON KW_ARRAY KW_OF

    SY_COMMA  shift, and go to state 30
    SY_COLON  shift, and go to state 31

    var_decl2  go to state 45


State 30

   54 var_decl1: var_decl1 SY_COMMA . IDENT

    IDENT  shift, and go to state 46


State 31

   55 var_decl2: SY_COLON .  [DEF_TYPE, KW_BOOLEAN, KW_REAL, KW_CHAR, KW_INTEGER]
   56          | SY_COLON . KW_ARRAY matrix_n KW_OF
   57          | SY_COLON . KW_ARRAY KW_OF

    KW_ARRAY  shift, and go to state 47

    $default  reduce using rule 55 (var_decl2)


State 32

   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . DEF_TYPE
   51 var_decl_list: var_decl1 var_decl2 . var_decl3
   58 var_decl3: . simple_data_type SY_SEMICOLON

    DEF_TYPE    shift, and go to state 20
    KW_BOOLEAN  shift, and go to state 23
    KW_REAL     shift, and go to state 24
    KW_CHAR     shift, and go to state 25
    KW_INTEGER  shift, and go to state 26

    simple_data_type  go to state 48
    var_decl3         go to state 49


State 33

   75 complex_cmd: KW_BEGIN . cmd_list KW_END
   76 cmd_list: . %empty  [KW_END, SY_SEMICOLON]
   77         | . simple_cmd
   78         | . cmd_list SY_SEMICOLON simple_cmd
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . if_cmd
   82           | . for_cmd
   83           | . while_cmd
   84           | . IDENT SY_COLON all_commands
   85           | . KW_GOTO IDENT
   86           | . KW_RETURN
   87           | . IDENT SY_LEFT_BRACKET arglist
   88           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   90 while_cmd: . KW_WHILE expression KW_DO all_commands
   91          | . KW_REPEAT all_commands KW_UNTIL expression
   92 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   93        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   94 if_cmd: . KW_IF expression KW_THEN all_commands else_state

    IDENT      shift, and go to state 50
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_IF      shift, and go to state 54
    KW_FOR     shift, and go to state 55
    KW_REPEAT  shift, and go to state 56
    KW_WHILE   shift, and go to state 57

    $default  reduce using rule 76 (cmd_list)

    cmd_list    go to state 58
    simple_cmd  go to state 59
    proc_call   go to state 60
    while_cmd   go to state 61
    for_cmd     go to state 62
    if_cmd      go to state 63


State 34

   64 function_header: KW_FUNCTION . IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

    IDENT  shift, and go to state 64


State 35

   63 procedure_header: KW_PROCEDURE . IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    IDENT  shift, and go to state 65


State 36

   62 subprogram_list: subprogram_list subprogram .

    $default  reduce using rule 62 (subprogram_list)


State 37

   59 subprogram: procedure_header .

    $default  reduce using rule 59 (subprogram)


State 38

   60 subprogram: function_header .

    $default  reduce using rule 60 (subprogram)


State 39

    1 program: program_decl type_def var_decl subprogram_list complex_cmd . SY_PERIOD

    SY_PERIOD  shift, and go to state 66


State 40

   41 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET return_type
   65 args_decl: . %empty  [SY_RIGHT_BRACKET]
   66          | . args_decl_list
   67 args_decl_list: . IDENT SY_COLON advanced_data_type
   68               | . args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 67

    $default  reduce using rule 65 (args_decl)

    args_decl       go to state 68
    args_decl_list  go to state 69


State 41

   39 advanced_data_type: KW_ARRAY KW_OF . simple_data_type
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . DEF_TYPE

    DEF_TYPE    shift, and go to state 20
    KW_BOOLEAN  shift, and go to state 23
    KW_REAL     shift, and go to state 24
    KW_CHAR     shift, and go to state 25
    KW_INTEGER  shift, and go to state 26

    simple_data_type  go to state 70


State 42

   42 matrix_n: SY_LEFT_SQR_BRACKET . POSINT SY_RIGHT_SQR_BRACKET

    POSINT  shift, and go to state 71


State 43

   40 advanced_data_type: KW_ARRAY matrix_n . KW_OF simple_data_type
   43 matrix_n: matrix_n . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

    KW_OF                shift, and go to state 72
    SY_LEFT_SQR_BRACKET  shift, and go to state 73


State 44

   37 shortcut_data_type: IDENT SY_EQUALS advanced_data_type SY_SEMICOLON .

    $default  reduce using rule 37 (shortcut_data_type)


State 45

   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . DEF_TYPE
   52 var_decl_list: var_decl_list var_decl1 var_decl2 . var_decl3
   58 var_decl3: . simple_data_type SY_SEMICOLON

    DEF_TYPE    shift, and go to state 20
    KW_BOOLEAN  shift, and go to state 23
    KW_REAL     shift, and go to state 24
    KW_CHAR     shift, and go to state 25
    KW_INTEGER  shift, and go to state 26

    simple_data_type  go to state 48
    var_decl3         go to state 74


State 46

   54 var_decl1: var_decl1 SY_COMMA IDENT .

    $default  reduce using rule 54 (var_decl1)


State 47

   42 matrix_n: . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   43         | . matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   56 var_decl2: SY_COLON KW_ARRAY . matrix_n KW_OF
   57          | SY_COLON KW_ARRAY . KW_OF

    KW_OF                shift, and go to state 75
    SY_LEFT_SQR_BRACKET  shift, and go to state 42

    matrix_n  go to state 76


State 48

   58 var_decl3: simple_data_type . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 77


State 49

   51 var_decl_list: var_decl1 var_decl2 var_decl3 .

    $default  reduce using rule 51 (var_decl_list)


State 50

   79 simple_cmd: IDENT . SY_ASSIGN expression
   84           | IDENT . SY_COLON all_commands
   87           | IDENT . SY_LEFT_BRACKET arglist
   89 proc_call: IDENT . SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    SY_ASSIGN        shift, and go to state 78
    SY_COLON         shift, and go to state 79
    SY_LEFT_BRACKET  shift, and go to state 80


State 51

   80 simple_cmd: KW_RESULT . SY_ASSIGN expression

    SY_ASSIGN  shift, and go to state 81


State 52

   85 simple_cmd: KW_GOTO . IDENT

    IDENT  shift, and go to state 82


State 53

   86 simple_cmd: KW_RETURN .

    $default  reduce using rule 86 (simple_cmd)


State 54

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   94 if_cmd: KW_IF . expression KW_THEN all_commands else_state

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 93
    proc_call   go to state 94


State 55

   92 for_cmd: KW_FOR . IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   93        | KW_FOR . IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

    IDENT  shift, and go to state 95


State 56

   73 all_commands: . complex_cmd
   74             | . simple_cmd
   75 complex_cmd: . KW_BEGIN cmd_list KW_END
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . if_cmd
   82           | . for_cmd
   83           | . while_cmd
   84           | . IDENT SY_COLON all_commands
   85           | . KW_GOTO IDENT
   86           | . KW_RETURN
   87           | . IDENT SY_LEFT_BRACKET arglist
   88           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   90 while_cmd: . KW_WHILE expression KW_DO all_commands
   91          | . KW_REPEAT all_commands KW_UNTIL expression
   91          | KW_REPEAT . all_commands KW_UNTIL expression
   92 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   93        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   94 if_cmd: . KW_IF expression KW_THEN all_commands else_state

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_IF      shift, and go to state 54
    KW_FOR     shift, and go to state 55
    KW_REPEAT  shift, and go to state 56
    KW_WHILE   shift, and go to state 57

    all_commands  go to state 96
    complex_cmd   go to state 97
    simple_cmd    go to state 98
    proc_call     go to state 60
    while_cmd     go to state 61
    for_cmd       go to state 62
    if_cmd        go to state 63


State 57

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   90 while_cmd: KW_WHILE . expression KW_DO all_commands

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 99
    proc_call   go to state 94


State 58

   75 complex_cmd: KW_BEGIN cmd_list . KW_END
   78 cmd_list: cmd_list . SY_SEMICOLON simple_cmd

    KW_END        shift, and go to state 100
    SY_SEMICOLON  shift, and go to state 101


State 59

   77 cmd_list: simple_cmd .

    $default  reduce using rule 77 (cmd_list)


State 60

   88 simple_cmd: proc_call .

    $default  reduce using rule 88 (simple_cmd)


State 61

   83 simple_cmd: while_cmd .

    $default  reduce using rule 83 (simple_cmd)


State 62

   82 simple_cmd: for_cmd .

    $default  reduce using rule 82 (simple_cmd)


State 63

   81 simple_cmd: if_cmd .

    $default  reduce using rule 81 (simple_cmd)


State 64

   64 function_header: KW_FUNCTION IDENT . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

    SY_LEFT_BRACKET  shift, and go to state 102


State 65

   63 procedure_header: KW_PROCEDURE IDENT . SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    SY_LEFT_BRACKET  shift, and go to state 103


State 66

    1 program: program_decl type_def var_decl subprogram_list complex_cmd SY_PERIOD .

    $default  reduce using rule 1 (program)


State 67

   67 args_decl_list: IDENT . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 104


State 68

   41 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET return_type

    SY_RIGHT_BRACKET  shift, and go to state 105


State 69

   66 args_decl: args_decl_list .  [SY_RIGHT_BRACKET]
   68 args_decl_list: args_decl_list . SY_SEMICOLON IDENT SY_COLON advanced_data_type

    SY_SEMICOLON  shift, and go to state 106

    $default  reduce using rule 66 (args_decl)


State 70

   39 advanced_data_type: KW_ARRAY KW_OF simple_data_type .

    $default  reduce using rule 39 (advanced_data_type)


State 71

   42 matrix_n: SY_LEFT_SQR_BRACKET POSINT . SY_RIGHT_SQR_BRACKET

    SY_RIGHT_SQR_BRACKET  shift, and go to state 107


State 72

   40 advanced_data_type: KW_ARRAY matrix_n KW_OF . simple_data_type
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . DEF_TYPE

    DEF_TYPE    shift, and go to state 20
    KW_BOOLEAN  shift, and go to state 23
    KW_REAL     shift, and go to state 24
    KW_CHAR     shift, and go to state 25
    KW_INTEGER  shift, and go to state 26

    simple_data_type  go to state 108


State 73

   43 matrix_n: matrix_n SY_LEFT_SQR_BRACKET . POSINT SY_RIGHT_SQR_BRACKET

    POSINT  shift, and go to state 109


State 74

   52 var_decl_list: var_decl_list var_decl1 var_decl2 var_decl3 .

    $default  reduce using rule 52 (var_decl_list)


State 75

   57 var_decl2: SY_COLON KW_ARRAY KW_OF .

    $default  reduce using rule 57 (var_decl2)


State 76

   43 matrix_n: matrix_n . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   56 var_decl2: SY_COLON KW_ARRAY matrix_n . KW_OF

    KW_OF                shift, and go to state 110
    SY_LEFT_SQR_BRACKET  shift, and go to state 73


State 77

   58 var_decl3: simple_data_type SY_SEMICOLON .

    $default  reduce using rule 58 (var_decl3)


State 78

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   79 simple_cmd: IDENT SY_ASSIGN . expression
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 111
    proc_call   go to state 94


State 79

   73 all_commands: . complex_cmd
   74             | . simple_cmd
   75 complex_cmd: . KW_BEGIN cmd_list KW_END
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . if_cmd
   82           | . for_cmd
   83           | . while_cmd
   84           | . IDENT SY_COLON all_commands
   84           | IDENT SY_COLON . all_commands
   85           | . KW_GOTO IDENT
   86           | . KW_RETURN
   87           | . IDENT SY_LEFT_BRACKET arglist
   88           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   90 while_cmd: . KW_WHILE expression KW_DO all_commands
   91          | . KW_REPEAT all_commands KW_UNTIL expression
   92 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   93        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   94 if_cmd: . KW_IF expression KW_THEN all_commands else_state

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_IF      shift, and go to state 54
    KW_FOR     shift, and go to state 55
    KW_REPEAT  shift, and go to state 56
    KW_WHILE   shift, and go to state 57

    all_commands  go to state 112
    complex_cmd   go to state 97
    simple_cmd    go to state 98
    proc_call     go to state 60
    while_cmd     go to state 61
    for_cmd       go to state 62
    if_cmd        go to state 63


State 80

    3 arguments: . %empty  [SY_RIGHT_BRACKET]
    4          | . arglist
    5 arglist: . expression
    6        | . arglist SY_COMMA expression
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   87 simple_cmd: IDENT SY_LEFT_BRACKET . arglist
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   89          | IDENT SY_LEFT_BRACKET . arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    $default  reduce using rule 3 (arguments)

    arguments   go to state 113
    arglist     go to state 114
    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 115
    proc_call   go to state 94


State 81

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   80 simple_cmd: KW_RESULT SY_ASSIGN . expression
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 116
    proc_call   go to state 94


State 82

   85 simple_cmd: KW_GOTO IDENT .

    $default  reduce using rule 85 (simple_cmd)


State 83

   27 expression: IDENT .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_NOT, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   89 proc_call: IDENT . SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    SY_LEFT_BRACKET  shift, and go to state 117

    $default  reduce using rule 27 (expression)


State 84

   24 expression: POSINT .

    $default  reduce using rule 24 (expression)


State 85

   25 expression: REAL .

    $default  reduce using rule 25 (expression)


State 86

   26 expression: STRING .

    $default  reduce using rule 26 (expression)


State 87

   28 expression: KW_RESULT .

    $default  reduce using rule 28 (expression)


State 88

    7 unary_exp: . SY_DASH expression
    7          | SY_DASH . expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 118
    proc_call   go to state 94


State 89

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    8          | SY_NOT . expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 119
    proc_call   go to state 94


State 90

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   10          | SY_LEFT_BRACKET . simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   29           | SY_LEFT_BRACKET . expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . DEF_TYPE
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    DEF_TYPE         shift, and go to state 20
    KW_RESULT        shift, and go to state 87
    KW_BOOLEAN       shift, and go to state 23
    KW_REAL          shift, and go to state 24
    KW_CHAR          shift, and go to state 25
    KW_INTEGER       shift, and go to state 26
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp         go to state 91
    binary_exp        go to state 92
    expression        go to state 120
    simple_data_type  go to state 121
    proc_call         go to state 94


State 91

   30 expression: unary_exp .

    $default  reduce using rule 30 (expression)


State 92

   31 expression: binary_exp .

    $default  reduce using rule 31 (expression)


State 93

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   94 if_cmd: KW_IF expression . KW_THEN all_commands else_state

    KW_THEN            shift, and go to state 122
    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136


State 94

   32 expression: proc_call .

    $default  reduce using rule 32 (expression)


State 95

   92 for_cmd: KW_FOR IDENT . SY_ASSIGN expression KW_TO expression KW_DO all_commands
   93        | KW_FOR IDENT . SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands

    SY_ASSIGN  shift, and go to state 137


State 96

   91 while_cmd: KW_REPEAT all_commands . KW_UNTIL expression

    KW_UNTIL  shift, and go to state 138


State 97

   73 all_commands: complex_cmd .

    $default  reduce using rule 73 (all_commands)


State 98

   74 all_commands: simple_cmd .

    $default  reduce using rule 74 (all_commands)


State 99

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   90 while_cmd: KW_WHILE expression . KW_DO all_commands

    KW_DO              shift, and go to state 139
    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136


State 100

   75 complex_cmd: KW_BEGIN cmd_list KW_END .

    $default  reduce using rule 75 (complex_cmd)


State 101

   78 cmd_list: cmd_list SY_SEMICOLON . simple_cmd
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . if_cmd
   82           | . for_cmd
   83           | . while_cmd
   84           | . IDENT SY_COLON all_commands
   85           | . KW_GOTO IDENT
   86           | . KW_RETURN
   87           | . IDENT SY_LEFT_BRACKET arglist
   88           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   90 while_cmd: . KW_WHILE expression KW_DO all_commands
   91          | . KW_REPEAT all_commands KW_UNTIL expression
   92 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   93        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   94 if_cmd: . KW_IF expression KW_THEN all_commands else_state

    IDENT      shift, and go to state 50
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_IF      shift, and go to state 54
    KW_FOR     shift, and go to state 55
    KW_REPEAT  shift, and go to state 56
    KW_WHILE   shift, and go to state 57

    simple_cmd  go to state 140
    proc_call   go to state 60
    while_cmd   go to state 61
    for_cmd     go to state 62
    if_cmd      go to state 63


State 102

   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   65 args_decl: . %empty  [SY_RIGHT_BRACKET]
   66          | . args_decl_list
   67 args_decl_list: . IDENT SY_COLON advanced_data_type
   68               | . args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 67

    $default  reduce using rule 65 (args_decl)

    args_decl       go to state 141
    args_decl_list  go to state 69


State 103

   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET . args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   65 args_decl: . %empty  [SY_RIGHT_BRACKET]
   66          | . args_decl_list
   67 args_decl_list: . IDENT SY_COLON advanced_data_type
   68               | . args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 67

    $default  reduce using rule 65 (args_decl)

    args_decl       go to state 142
    args_decl_list  go to state 69


State 104

   38 advanced_data_type: . simple_data_type
   39                   | . KW_ARRAY KW_OF simple_data_type
   40                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   41                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . DEF_TYPE
   67 args_decl_list: IDENT SY_COLON . advanced_data_type

    DEF_TYPE     shift, and go to state 20
    KW_FUNCTION  shift, and go to state 21
    KW_ARRAY     shift, and go to state 22
    KW_BOOLEAN   shift, and go to state 23
    KW_REAL      shift, and go to state 24
    KW_CHAR      shift, and go to state 25
    KW_INTEGER   shift, and go to state 26

    advanced_data_type  go to state 143
    simple_data_type    go to state 28


State 105

   41 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . return_type
   69 return_type: . %empty  [SY_SEMICOLON, SY_RIGHT_BRACKET]
   70            | . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 144

    $default  reduce using rule 69 (return_type)

    return_type  go to state 145


State 106

   68 args_decl_list: args_decl_list SY_SEMICOLON . IDENT SY_COLON advanced_data_type

    IDENT  shift, and go to state 146


State 107

   42 matrix_n: SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET .

    $default  reduce using rule 42 (matrix_n)


State 108

   40 advanced_data_type: KW_ARRAY matrix_n KW_OF simple_data_type .

    $default  reduce using rule 40 (advanced_data_type)


State 109

   43 matrix_n: matrix_n SY_LEFT_SQR_BRACKET POSINT . SY_RIGHT_SQR_BRACKET

    SY_RIGHT_SQR_BRACKET  shift, and go to state 147


State 110

   56 var_decl2: SY_COLON KW_ARRAY matrix_n KW_OF .

    $default  reduce using rule 56 (var_decl2)


State 111

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   79 simple_cmd: IDENT SY_ASSIGN expression .  [KW_END, KW_ELSE, KW_UNTIL, SY_SEMICOLON]

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 79 (simple_cmd)


State 112

   84 simple_cmd: IDENT SY_COLON all_commands .

    $default  reduce using rule 84 (simple_cmd)


State 113

   89 proc_call: IDENT SY_LEFT_BRACKET arguments . SY_RIGHT_BRACKET

    SY_RIGHT_BRACKET  shift, and go to state 148


State 114

    4 arguments: arglist .  [SY_RIGHT_BRACKET]
    6 arglist: arglist . SY_COMMA expression
   87 simple_cmd: IDENT SY_LEFT_BRACKET arglist .  [KW_END, KW_ELSE, KW_UNTIL, SY_SEMICOLON]

    SY_COMMA  shift, and go to state 149

    SY_RIGHT_BRACKET  reduce using rule 4 (arguments)
    $default          reduce using rule 87 (simple_cmd)


State 115

    5 arglist: expression .  [KW_END, KW_ELSE, KW_UNTIL, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 5 (arglist)


State 116

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   80 simple_cmd: KW_RESULT SY_ASSIGN expression .  [KW_END, KW_ELSE, KW_UNTIL, SY_SEMICOLON]

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 80 (simple_cmd)


State 117

    3 arguments: . %empty  [SY_RIGHT_BRACKET]
    4          | . arglist
    5 arglist: . expression
    6        | . arglist SY_COMMA expression
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   89          | IDENT SY_LEFT_BRACKET . arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    $default  reduce using rule 3 (arguments)

    arguments   go to state 113
    arglist     go to state 150
    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 115
    proc_call   go to state 94


State 118

    7 unary_exp: SY_DASH expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
    9          | expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 7 (unary_exp)

    Conflict between rule 7 and token SY_DASH resolved as shift (%right SY_DASH).
    Conflict between rule 7 and token SY_PLUS resolved as shift (SY_DASH < SY_PLUS).
    Conflict between rule 7 and token SY_STAR resolved as shift (SY_DASH < SY_STAR).
    Conflict between rule 7 and token SY_SLASH resolved as shift (SY_DASH < SY_SLASH).
    Conflict between rule 7 and token SY_EQUALS resolved as shift (SY_DASH < SY_EQUALS).
    Conflict between rule 7 and token SY_LESS resolved as shift (SY_DASH < SY_LESS).
    Conflict between rule 7 and token SY_GREATER resolved as shift (SY_DASH < SY_GREATER).
    Conflict between rule 7 and token SY_LESS_EQUALS resolved as shift (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 7 and token SY_GREATER_EQUALS resolved as shift (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 7 and token SY_LESS_BIGGER resolved as shift (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 7 and token SY_AND resolved as shift (SY_DASH < SY_AND).
    Conflict between rule 7 and token SY_OR resolved as shift (SY_DASH < SY_OR).
    Conflict between rule 7 and token SY_ASSIGN resolved as shift (SY_DASH < SY_ASSIGN).
    Conflict between rule 7 and token SY_NOT resolved as shift (SY_DASH < SY_NOT).


State 119

    8 unary_exp: SY_NOT expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
    9          | expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_NOT  shift, and go to state 136

    $default  reduce using rule 8 (unary_exp)

    Conflict between rule 8 and token SY_DASH resolved as reduce (SY_DASH < SY_NOT).
    Conflict between rule 8 and token SY_PLUS resolved as reduce (SY_PLUS < SY_NOT).
    Conflict between rule 8 and token SY_STAR resolved as reduce (SY_STAR < SY_NOT).
    Conflict between rule 8 and token SY_SLASH resolved as reduce (SY_SLASH < SY_NOT).
    Conflict between rule 8 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_NOT).
    Conflict between rule 8 and token SY_LESS resolved as reduce (SY_LESS < SY_NOT).
    Conflict between rule 8 and token SY_GREATER resolved as reduce (SY_GREATER < SY_NOT).
    Conflict between rule 8 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_NOT).
    Conflict between rule 8 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_NOT).
    Conflict between rule 8 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_NOT).
    Conflict between rule 8 and token SY_AND resolved as reduce (SY_AND < SY_NOT).
    Conflict between rule 8 and token SY_OR resolved as reduce (SY_OR < SY_NOT).
    Conflict between rule 8 and token SY_ASSIGN resolved as reduce (SY_ASSIGN < SY_NOT).
    Conflict between rule 8 and token SY_NOT resolved as shift (%right SY_NOT).


State 120

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   29 expression: SY_LEFT_BRACKET expression . SY_RIGHT_BRACKET

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136
    SY_RIGHT_BRACKET   shift, and go to state 151


State 121

   10 unary_exp: SY_LEFT_BRACKET simple_data_type . SY_RIGHT_BRACKET expression

    SY_RIGHT_BRACKET  shift, and go to state 152


State 122

   73 all_commands: . complex_cmd
   74             | . simple_cmd
   75 complex_cmd: . KW_BEGIN cmd_list KW_END
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . if_cmd
   82           | . for_cmd
   83           | . while_cmd
   84           | . IDENT SY_COLON all_commands
   85           | . KW_GOTO IDENT
   86           | . KW_RETURN
   87           | . IDENT SY_LEFT_BRACKET arglist
   88           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   90 while_cmd: . KW_WHILE expression KW_DO all_commands
   91          | . KW_REPEAT all_commands KW_UNTIL expression
   92 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   93        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   94 if_cmd: . KW_IF expression KW_THEN all_commands else_state
   94       | KW_IF expression KW_THEN . all_commands else_state

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_IF      shift, and go to state 54
    KW_FOR     shift, and go to state 55
    KW_REPEAT  shift, and go to state 56
    KW_WHILE   shift, and go to state 57

    all_commands  go to state 153
    complex_cmd   go to state 97
    simple_cmd    go to state 98
    proc_call     go to state 60
    while_cmd     go to state 61
    for_cmd       go to state 62
    if_cmd        go to state 63


State 123

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   11           | expression SY_DASH . expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 154
    proc_call   go to state 94


State 124

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   12           | expression SY_PLUS . expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 155
    proc_call   go to state 94


State 125

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   13           | expression SY_STAR . expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 156
    proc_call   go to state 94


State 126

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   14           | expression SY_SLASH . expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 157
    proc_call   go to state 94


State 127

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   15           | expression SY_EQUALS . expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 158
    proc_call   go to state 94


State 128

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   16           | expression SY_LESS . expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 159
    proc_call   go to state 94


State 129

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   17           | expression SY_GREATER . expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 160
    proc_call   go to state 94


State 130

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   18           | expression SY_LESS_EQUALS . expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 161
    proc_call   go to state 94


State 131

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   19           | expression SY_GREATER_EQUALS . expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 162
    proc_call   go to state 94


State 132

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   20           | expression SY_LESS_BIGGER . expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 163
    proc_call   go to state 94


State 133

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   21           | expression SY_AND . expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 164
    proc_call   go to state 94


State 134

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   22           | expression SY_OR . expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 165
    proc_call   go to state 94


State 135

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   23           | expression SY_ASSIGN . expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 166
    proc_call   go to state 94


State 136

    9 unary_exp: expression SY_NOT .

    $default  reduce using rule 9 (unary_exp)


State 137

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   92 for_cmd: KW_FOR IDENT SY_ASSIGN . expression KW_TO expression KW_DO all_commands
   93        | KW_FOR IDENT SY_ASSIGN . expression KW_DOWNTO expression KW_DO all_commands

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 167
    proc_call   go to state 94


State 138

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   91 while_cmd: KW_REPEAT all_commands KW_UNTIL . expression

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 168
    proc_call   go to state 94


State 139

   73 all_commands: . complex_cmd
   74             | . simple_cmd
   75 complex_cmd: . KW_BEGIN cmd_list KW_END
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . if_cmd
   82           | . for_cmd
   83           | . while_cmd
   84           | . IDENT SY_COLON all_commands
   85           | . KW_GOTO IDENT
   86           | . KW_RETURN
   87           | . IDENT SY_LEFT_BRACKET arglist
   88           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   90 while_cmd: . KW_WHILE expression KW_DO all_commands
   90          | KW_WHILE expression KW_DO . all_commands
   91          | . KW_REPEAT all_commands KW_UNTIL expression
   92 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   93        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   94 if_cmd: . KW_IF expression KW_THEN all_commands else_state

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_IF      shift, and go to state 54
    KW_FOR     shift, and go to state 55
    KW_REPEAT  shift, and go to state 56
    KW_WHILE   shift, and go to state 57

    all_commands  go to state 169
    complex_cmd   go to state 97
    simple_cmd    go to state 98
    proc_call     go to state 60
    while_cmd     go to state 61
    for_cmd       go to state 62
    if_cmd        go to state 63


State 140

   78 cmd_list: cmd_list SY_SEMICOLON simple_cmd .

    $default  reduce using rule 78 (cmd_list)


State 141

   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body

    SY_RIGHT_BRACKET  shift, and go to state 170


State 142

   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl . SY_RIGHT_BRACKET SY_SEMICOLON procedure_body

    SY_RIGHT_BRACKET  shift, and go to state 171


State 143

   67 args_decl_list: IDENT SY_COLON advanced_data_type .

    $default  reduce using rule 67 (args_decl_list)


State 144

   38 advanced_data_type: . simple_data_type
   39                   | . KW_ARRAY KW_OF simple_data_type
   40                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   41                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . DEF_TYPE
   70 return_type: SY_COLON . advanced_data_type

    DEF_TYPE     shift, and go to state 20
    KW_FUNCTION  shift, and go to state 21
    KW_ARRAY     shift, and go to state 22
    KW_BOOLEAN   shift, and go to state 23
    KW_REAL      shift, and go to state 24
    KW_CHAR      shift, and go to state 25
    KW_INTEGER   shift, and go to state 26

    advanced_data_type  go to state 172
    simple_data_type    go to state 28


State 145

   41 advanced_data_type: KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type .

    $default  reduce using rule 41 (advanced_data_type)


State 146

   68 args_decl_list: args_decl_list SY_SEMICOLON IDENT . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 173


State 147

   43 matrix_n: matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET .

    $default  reduce using rule 43 (matrix_n)


State 148

   89 proc_call: IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET .

    $default  reduce using rule 89 (proc_call)


State 149

    6 arglist: arglist SY_COMMA . expression
    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 174
    proc_call   go to state 94


State 150

    4 arguments: arglist .  [SY_RIGHT_BRACKET]
    6 arglist: arglist . SY_COMMA expression

    SY_COMMA  shift, and go to state 149

    $default  reduce using rule 4 (arguments)


State 151

   29 expression: SY_LEFT_BRACKET expression SY_RIGHT_BRACKET .

    $default  reduce using rule 29 (expression)


State 152

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   10          | SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET . expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 175
    proc_call   go to state 94


State 153

   94 if_cmd: KW_IF expression KW_THEN all_commands . else_state
   95 else_state: . KW_ELSE all_commands
   96           | . %empty  [KW_END, KW_ELSE, KW_UNTIL, SY_SEMICOLON]

    KW_ELSE  shift, and go to state 176

    KW_ELSE   [reduce using rule 96 (else_state)]
    $default  reduce using rule 96 (else_state)

    else_state  go to state 177


State 154

    9 unary_exp : expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   11           | expression SY_DASH expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 11 (binary_exp)

    Conflict between rule 11 and token SY_DASH resolved as shift (%right SY_DASH).
    Conflict between rule 11 and token SY_PLUS resolved as shift (SY_DASH < SY_PLUS).
    Conflict between rule 11 and token SY_STAR resolved as shift (SY_DASH < SY_STAR).
    Conflict between rule 11 and token SY_SLASH resolved as shift (SY_DASH < SY_SLASH).
    Conflict between rule 11 and token SY_EQUALS resolved as shift (SY_DASH < SY_EQUALS).
    Conflict between rule 11 and token SY_LESS resolved as shift (SY_DASH < SY_LESS).
    Conflict between rule 11 and token SY_GREATER resolved as shift (SY_DASH < SY_GREATER).
    Conflict between rule 11 and token SY_LESS_EQUALS resolved as shift (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 11 and token SY_GREATER_EQUALS resolved as shift (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 11 and token SY_LESS_BIGGER resolved as shift (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 11 and token SY_AND resolved as shift (SY_DASH < SY_AND).
    Conflict between rule 11 and token SY_OR resolved as shift (SY_DASH < SY_OR).
    Conflict between rule 11 and token SY_ASSIGN resolved as shift (SY_DASH < SY_ASSIGN).
    Conflict between rule 11 and token SY_NOT resolved as shift (SY_DASH < SY_NOT).


State 155

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   12           | expression SY_PLUS expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 12 (binary_exp)

    Conflict between rule 12 and token SY_DASH resolved as reduce (SY_DASH < SY_PLUS).
    Conflict between rule 12 and token SY_PLUS resolved as shift (%right SY_PLUS).
    Conflict between rule 12 and token SY_STAR resolved as shift (SY_PLUS < SY_STAR).
    Conflict between rule 12 and token SY_SLASH resolved as shift (SY_PLUS < SY_SLASH).
    Conflict between rule 12 and token SY_EQUALS resolved as shift (SY_PLUS < SY_EQUALS).
    Conflict between rule 12 and token SY_LESS resolved as shift (SY_PLUS < SY_LESS).
    Conflict between rule 12 and token SY_GREATER resolved as shift (SY_PLUS < SY_GREATER).
    Conflict between rule 12 and token SY_LESS_EQUALS resolved as shift (SY_PLUS < SY_LESS_EQUALS).
    Conflict between rule 12 and token SY_GREATER_EQUALS resolved as shift (SY_PLUS < SY_GREATER_EQUALS).
    Conflict between rule 12 and token SY_LESS_BIGGER resolved as shift (SY_PLUS < SY_LESS_BIGGER).
    Conflict between rule 12 and token SY_AND resolved as shift (SY_PLUS < SY_AND).
    Conflict between rule 12 and token SY_OR resolved as shift (SY_PLUS < SY_OR).
    Conflict between rule 12 and token SY_ASSIGN resolved as shift (SY_PLUS < SY_ASSIGN).
    Conflict between rule 12 and token SY_NOT resolved as shift (SY_PLUS < SY_NOT).


State 156

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   13           | expression SY_STAR expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 13 (binary_exp)

    Conflict between rule 13 and token SY_DASH resolved as reduce (SY_DASH < SY_STAR).
    Conflict between rule 13 and token SY_PLUS resolved as reduce (SY_PLUS < SY_STAR).
    Conflict between rule 13 and token SY_STAR resolved as reduce (%left SY_STAR).
    Conflict between rule 13 and token SY_SLASH resolved as shift (SY_STAR < SY_SLASH).
    Conflict between rule 13 and token SY_EQUALS resolved as shift (SY_STAR < SY_EQUALS).
    Conflict between rule 13 and token SY_LESS resolved as shift (SY_STAR < SY_LESS).
    Conflict between rule 13 and token SY_GREATER resolved as shift (SY_STAR < SY_GREATER).
    Conflict between rule 13 and token SY_LESS_EQUALS resolved as shift (SY_STAR < SY_LESS_EQUALS).
    Conflict between rule 13 and token SY_GREATER_EQUALS resolved as shift (SY_STAR < SY_GREATER_EQUALS).
    Conflict between rule 13 and token SY_LESS_BIGGER resolved as shift (SY_STAR < SY_LESS_BIGGER).
    Conflict between rule 13 and token SY_AND resolved as shift (SY_STAR < SY_AND).
    Conflict between rule 13 and token SY_OR resolved as shift (SY_STAR < SY_OR).
    Conflict between rule 13 and token SY_ASSIGN resolved as shift (SY_STAR < SY_ASSIGN).
    Conflict between rule 13 and token SY_NOT resolved as shift (SY_STAR < SY_NOT).


State 157

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   14           | expression SY_SLASH expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 14 (binary_exp)

    Conflict between rule 14 and token SY_DASH resolved as reduce (SY_DASH < SY_SLASH).
    Conflict between rule 14 and token SY_PLUS resolved as reduce (SY_PLUS < SY_SLASH).
    Conflict between rule 14 and token SY_STAR resolved as reduce (SY_STAR < SY_SLASH).
    Conflict between rule 14 and token SY_SLASH resolved as reduce (%left SY_SLASH).
    Conflict between rule 14 and token SY_EQUALS resolved as shift (SY_SLASH < SY_EQUALS).
    Conflict between rule 14 and token SY_LESS resolved as shift (SY_SLASH < SY_LESS).
    Conflict between rule 14 and token SY_GREATER resolved as shift (SY_SLASH < SY_GREATER).
    Conflict between rule 14 and token SY_LESS_EQUALS resolved as shift (SY_SLASH < SY_LESS_EQUALS).
    Conflict between rule 14 and token SY_GREATER_EQUALS resolved as shift (SY_SLASH < SY_GREATER_EQUALS).
    Conflict between rule 14 and token SY_LESS_BIGGER resolved as shift (SY_SLASH < SY_LESS_BIGGER).
    Conflict between rule 14 and token SY_AND resolved as shift (SY_SLASH < SY_AND).
    Conflict between rule 14 and token SY_OR resolved as shift (SY_SLASH < SY_OR).
    Conflict between rule 14 and token SY_ASSIGN resolved as shift (SY_SLASH < SY_ASSIGN).
    Conflict between rule 14 and token SY_NOT resolved as shift (SY_SLASH < SY_NOT).


State 158

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   15           | expression SY_EQUALS expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 15 (binary_exp)

    Conflict between rule 15 and token SY_DASH resolved as reduce (SY_DASH < SY_EQUALS).
    Conflict between rule 15 and token SY_PLUS resolved as reduce (SY_PLUS < SY_EQUALS).
    Conflict between rule 15 and token SY_STAR resolved as reduce (SY_STAR < SY_EQUALS).
    Conflict between rule 15 and token SY_SLASH resolved as reduce (SY_SLASH < SY_EQUALS).
    Conflict between rule 15 and token SY_EQUALS resolved as reduce (%left SY_EQUALS).
    Conflict between rule 15 and token SY_LESS resolved as shift (SY_EQUALS < SY_LESS).
    Conflict between rule 15 and token SY_GREATER resolved as shift (SY_EQUALS < SY_GREATER).
    Conflict between rule 15 and token SY_LESS_EQUALS resolved as shift (SY_EQUALS < SY_LESS_EQUALS).
    Conflict between rule 15 and token SY_GREATER_EQUALS resolved as shift (SY_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 15 and token SY_LESS_BIGGER resolved as shift (SY_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 15 and token SY_AND resolved as shift (SY_EQUALS < SY_AND).
    Conflict between rule 15 and token SY_OR resolved as shift (SY_EQUALS < SY_OR).
    Conflict between rule 15 and token SY_ASSIGN resolved as shift (SY_EQUALS < SY_ASSIGN).
    Conflict between rule 15 and token SY_NOT resolved as shift (SY_EQUALS < SY_NOT).


State 159

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   16           | expression SY_LESS expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 16 (binary_exp)

    Conflict between rule 16 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS).
    Conflict between rule 16 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS).
    Conflict between rule 16 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS).
    Conflict between rule 16 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS).
    Conflict between rule 16 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS).
    Conflict between rule 16 and token SY_LESS resolved as reduce (%left SY_LESS).
    Conflict between rule 16 and token SY_GREATER resolved as shift (SY_LESS < SY_GREATER).
    Conflict between rule 16 and token SY_LESS_EQUALS resolved as shift (SY_LESS < SY_LESS_EQUALS).
    Conflict between rule 16 and token SY_GREATER_EQUALS resolved as shift (SY_LESS < SY_GREATER_EQUALS).
    Conflict between rule 16 and token SY_LESS_BIGGER resolved as shift (SY_LESS < SY_LESS_BIGGER).
    Conflict between rule 16 and token SY_AND resolved as shift (SY_LESS < SY_AND).
    Conflict between rule 16 and token SY_OR resolved as shift (SY_LESS < SY_OR).
    Conflict between rule 16 and token SY_ASSIGN resolved as shift (SY_LESS < SY_ASSIGN).
    Conflict between rule 16 and token SY_NOT resolved as shift (SY_LESS < SY_NOT).


State 160

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   17           | expression SY_GREATER expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 17 (binary_exp)

    Conflict between rule 17 and token SY_DASH resolved as reduce (SY_DASH < SY_GREATER).
    Conflict between rule 17 and token SY_PLUS resolved as reduce (SY_PLUS < SY_GREATER).
    Conflict between rule 17 and token SY_STAR resolved as reduce (SY_STAR < SY_GREATER).
    Conflict between rule 17 and token SY_SLASH resolved as reduce (SY_SLASH < SY_GREATER).
    Conflict between rule 17 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_GREATER).
    Conflict between rule 17 and token SY_LESS resolved as reduce (SY_LESS < SY_GREATER).
    Conflict between rule 17 and token SY_GREATER resolved as reduce (%left SY_GREATER).
    Conflict between rule 17 and token SY_LESS_EQUALS resolved as shift (SY_GREATER < SY_LESS_EQUALS).
    Conflict between rule 17 and token SY_GREATER_EQUALS resolved as shift (SY_GREATER < SY_GREATER_EQUALS).
    Conflict between rule 17 and token SY_LESS_BIGGER resolved as shift (SY_GREATER < SY_LESS_BIGGER).
    Conflict between rule 17 and token SY_AND resolved as shift (SY_GREATER < SY_AND).
    Conflict between rule 17 and token SY_OR resolved as shift (SY_GREATER < SY_OR).
    Conflict between rule 17 and token SY_ASSIGN resolved as shift (SY_GREATER < SY_ASSIGN).
    Conflict between rule 17 and token SY_NOT resolved as shift (SY_GREATER < SY_NOT).


State 161

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   18           | expression SY_LESS_EQUALS expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 18 (binary_exp)

    Conflict between rule 18 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS_EQUALS).
    Conflict between rule 18 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS_EQUALS).
    Conflict between rule 18 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS_EQUALS).
    Conflict between rule 18 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS_EQUALS).
    Conflict between rule 18 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS_EQUALS).
    Conflict between rule 18 and token SY_LESS resolved as reduce (SY_LESS < SY_LESS_EQUALS).
    Conflict between rule 18 and token SY_GREATER resolved as reduce (SY_GREATER < SY_LESS_EQUALS).
    Conflict between rule 18 and token SY_LESS_EQUALS resolved as reduce (%left SY_LESS_EQUALS).
    Conflict between rule 18 and token SY_GREATER_EQUALS resolved as shift (SY_LESS_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 18 and token SY_LESS_BIGGER resolved as shift (SY_LESS_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 18 and token SY_AND resolved as shift (SY_LESS_EQUALS < SY_AND).
    Conflict between rule 18 and token SY_OR resolved as shift (SY_LESS_EQUALS < SY_OR).
    Conflict between rule 18 and token SY_ASSIGN resolved as shift (SY_LESS_EQUALS < SY_ASSIGN).
    Conflict between rule 18 and token SY_NOT resolved as shift (SY_LESS_EQUALS < SY_NOT).


State 162

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   19           | expression SY_GREATER_EQUALS expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_LESS_BIGGER  shift, and go to state 132
    SY_AND          shift, and go to state 133
    SY_OR           shift, and go to state 134
    SY_ASSIGN       shift, and go to state 135
    SY_NOT          shift, and go to state 136

    $default  reduce using rule 19 (binary_exp)

    Conflict between rule 19 and token SY_DASH resolved as reduce (SY_DASH < SY_GREATER_EQUALS).
    Conflict between rule 19 and token SY_PLUS resolved as reduce (SY_PLUS < SY_GREATER_EQUALS).
    Conflict between rule 19 and token SY_STAR resolved as reduce (SY_STAR < SY_GREATER_EQUALS).
    Conflict between rule 19 and token SY_SLASH resolved as reduce (SY_SLASH < SY_GREATER_EQUALS).
    Conflict between rule 19 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 19 and token SY_LESS resolved as reduce (SY_LESS < SY_GREATER_EQUALS).
    Conflict between rule 19 and token SY_GREATER resolved as reduce (SY_GREATER < SY_GREATER_EQUALS).
    Conflict between rule 19 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_GREATER_EQUALS).
    Conflict between rule 19 and token SY_GREATER_EQUALS resolved as reduce (%left SY_GREATER_EQUALS).
    Conflict between rule 19 and token SY_LESS_BIGGER resolved as shift (SY_GREATER_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 19 and token SY_AND resolved as shift (SY_GREATER_EQUALS < SY_AND).
    Conflict between rule 19 and token SY_OR resolved as shift (SY_GREATER_EQUALS < SY_OR).
    Conflict between rule 19 and token SY_ASSIGN resolved as shift (SY_GREATER_EQUALS < SY_ASSIGN).
    Conflict between rule 19 and token SY_NOT resolved as shift (SY_GREATER_EQUALS < SY_NOT).


State 163

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   20           | expression SY_LESS_BIGGER expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_AND     shift, and go to state 133
    SY_OR      shift, and go to state 134
    SY_ASSIGN  shift, and go to state 135
    SY_NOT     shift, and go to state 136

    $default  reduce using rule 20 (binary_exp)

    Conflict between rule 20 and token SY_DASH resolved as reduce (SY_DASH < SY_LESS_BIGGER).
    Conflict between rule 20 and token SY_PLUS resolved as reduce (SY_PLUS < SY_LESS_BIGGER).
    Conflict between rule 20 and token SY_STAR resolved as reduce (SY_STAR < SY_LESS_BIGGER).
    Conflict between rule 20 and token SY_SLASH resolved as reduce (SY_SLASH < SY_LESS_BIGGER).
    Conflict between rule 20 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 20 and token SY_LESS resolved as reduce (SY_LESS < SY_LESS_BIGGER).
    Conflict between rule 20 and token SY_GREATER resolved as reduce (SY_GREATER < SY_LESS_BIGGER).
    Conflict between rule 20 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 20 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_LESS_BIGGER).
    Conflict between rule 20 and token SY_LESS_BIGGER resolved as reduce (%left SY_LESS_BIGGER).
    Conflict between rule 20 and token SY_AND resolved as shift (SY_LESS_BIGGER < SY_AND).
    Conflict between rule 20 and token SY_OR resolved as shift (SY_LESS_BIGGER < SY_OR).
    Conflict between rule 20 and token SY_ASSIGN resolved as shift (SY_LESS_BIGGER < SY_ASSIGN).
    Conflict between rule 20 and token SY_NOT resolved as shift (SY_LESS_BIGGER < SY_NOT).


State 164

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   21           | expression SY_AND expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_OR      shift, and go to state 134
    SY_ASSIGN  shift, and go to state 135
    SY_NOT     shift, and go to state 136

    $default  reduce using rule 21 (binary_exp)

    Conflict between rule 21 and token SY_DASH resolved as reduce (SY_DASH < SY_AND).
    Conflict between rule 21 and token SY_PLUS resolved as reduce (SY_PLUS < SY_AND).
    Conflict between rule 21 and token SY_STAR resolved as reduce (SY_STAR < SY_AND).
    Conflict between rule 21 and token SY_SLASH resolved as reduce (SY_SLASH < SY_AND).
    Conflict between rule 21 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_AND).
    Conflict between rule 21 and token SY_LESS resolved as reduce (SY_LESS < SY_AND).
    Conflict between rule 21 and token SY_GREATER resolved as reduce (SY_GREATER < SY_AND).
    Conflict between rule 21 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_AND).
    Conflict between rule 21 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_AND).
    Conflict between rule 21 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_AND).
    Conflict between rule 21 and token SY_AND resolved as reduce (%left SY_AND).
    Conflict between rule 21 and token SY_OR resolved as shift (SY_AND < SY_OR).
    Conflict between rule 21 and token SY_ASSIGN resolved as shift (SY_AND < SY_ASSIGN).
    Conflict between rule 21 and token SY_NOT resolved as shift (SY_AND < SY_NOT).


State 165

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   22           | expression SY_OR expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   23           | expression . SY_ASSIGN expression

    SY_ASSIGN  shift, and go to state 135
    SY_NOT     shift, and go to state 136

    $default  reduce using rule 22 (binary_exp)

    Conflict between rule 22 and token SY_DASH resolved as reduce (SY_DASH < SY_OR).
    Conflict between rule 22 and token SY_PLUS resolved as reduce (SY_PLUS < SY_OR).
    Conflict between rule 22 and token SY_STAR resolved as reduce (SY_STAR < SY_OR).
    Conflict between rule 22 and token SY_SLASH resolved as reduce (SY_SLASH < SY_OR).
    Conflict between rule 22 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_OR).
    Conflict between rule 22 and token SY_LESS resolved as reduce (SY_LESS < SY_OR).
    Conflict between rule 22 and token SY_GREATER resolved as reduce (SY_GREATER < SY_OR).
    Conflict between rule 22 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_OR).
    Conflict between rule 22 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_OR).
    Conflict between rule 22 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_OR).
    Conflict between rule 22 and token SY_AND resolved as reduce (SY_AND < SY_OR).
    Conflict between rule 22 and token SY_OR resolved as reduce (%left SY_OR).
    Conflict between rule 22 and token SY_ASSIGN resolved as shift (SY_OR < SY_ASSIGN).
    Conflict between rule 22 and token SY_NOT resolved as shift (SY_OR < SY_NOT).


State 166

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   23           | expression SY_ASSIGN expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]

    SY_NOT  shift, and go to state 136

    $default  reduce using rule 23 (binary_exp)

    Conflict between rule 23 and token SY_DASH resolved as reduce (SY_DASH < SY_ASSIGN).
    Conflict between rule 23 and token SY_PLUS resolved as reduce (SY_PLUS < SY_ASSIGN).
    Conflict between rule 23 and token SY_STAR resolved as reduce (SY_STAR < SY_ASSIGN).
    Conflict between rule 23 and token SY_SLASH resolved as reduce (SY_SLASH < SY_ASSIGN).
    Conflict between rule 23 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_ASSIGN).
    Conflict between rule 23 and token SY_LESS resolved as reduce (SY_LESS < SY_ASSIGN).
    Conflict between rule 23 and token SY_GREATER resolved as reduce (SY_GREATER < SY_ASSIGN).
    Conflict between rule 23 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_ASSIGN).
    Conflict between rule 23 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_ASSIGN).
    Conflict between rule 23 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_ASSIGN).
    Conflict between rule 23 and token SY_AND resolved as reduce (SY_AND < SY_ASSIGN).
    Conflict between rule 23 and token SY_OR resolved as reduce (SY_OR < SY_ASSIGN).
    Conflict between rule 23 and token SY_ASSIGN resolved as reduce (%left SY_ASSIGN).
    Conflict between rule 23 and token SY_NOT resolved as shift (SY_ASSIGN < SY_NOT).


State 167

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   92 for_cmd: KW_FOR IDENT SY_ASSIGN expression . KW_TO expression KW_DO all_commands
   93        | KW_FOR IDENT SY_ASSIGN expression . KW_DOWNTO expression KW_DO all_commands

    KW_TO              shift, and go to state 178
    KW_DOWNTO          shift, and go to state 179
    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136


State 168

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   91 while_cmd: KW_REPEAT all_commands KW_UNTIL expression .  [KW_END, KW_ELSE, KW_UNTIL, SY_SEMICOLON]

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 91 (while_cmd)


State 169

   90 while_cmd: KW_WHILE expression KW_DO all_commands .

    $default  reduce using rule 90 (while_cmd)


State 170

   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . return_type SY_SEMICOLON function_body
   69 return_type: . %empty  [SY_SEMICOLON]
   70            | . SY_COLON advanced_data_type

    SY_COLON  shift, and go to state 144

    $default  reduce using rule 69 (return_type)

    return_type  go to state 180


State 171

   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET . SY_SEMICOLON procedure_body

    SY_SEMICOLON  shift, and go to state 181


State 172

   70 return_type: SY_COLON advanced_data_type .

    $default  reduce using rule 70 (return_type)


State 173

   38 advanced_data_type: . simple_data_type
   39                   | . KW_ARRAY KW_OF simple_data_type
   40                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   41                   | . KW_FUNCTION SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type
   44 simple_data_type: . KW_INTEGER
   45                 | . KW_CHAR
   46                 | . KW_BOOLEAN
   47                 | . KW_REAL
   48                 | . DEF_TYPE
   68 args_decl_list: args_decl_list SY_SEMICOLON IDENT SY_COLON . advanced_data_type

    DEF_TYPE     shift, and go to state 20
    KW_FUNCTION  shift, and go to state 21
    KW_ARRAY     shift, and go to state 22
    KW_BOOLEAN   shift, and go to state 23
    KW_REAL      shift, and go to state 24
    KW_CHAR      shift, and go to state 25
    KW_INTEGER   shift, and go to state 26

    advanced_data_type  go to state 182
    simple_data_type    go to state 28


State 174

    6 arglist: arglist SY_COMMA expression .  [KW_END, KW_ELSE, KW_UNTIL, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136

    $default  reduce using rule 6 (arglist)


State 175

    9 unary_exp: expression . SY_NOT
   10          | SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_UNTIL, KW_TO, KW_DOWNTO, SY_DASH, SY_PLUS, SY_STAR, SY_SLASH, SY_EQUALS, SY_LESS, SY_GREATER, SY_LESS_EQUALS, SY_GREATER_EQUALS, SY_LESS_BIGGER, SY_AND, SY_OR, SY_ASSIGN, SY_NOT, SY_COMMA, SY_SEMICOLON, SY_RIGHT_BRACKET]
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression

    $default  reduce using rule 10 (unary_exp)

    Conflict between rule 10 and token SY_DASH resolved as reduce (SY_DASH < SY_RIGHT_BRACKET).
    Conflict between rule 10 and token SY_PLUS resolved as reduce (SY_PLUS < SY_RIGHT_BRACKET).
    Conflict between rule 10 and token SY_STAR resolved as reduce (SY_STAR < SY_RIGHT_BRACKET).
    Conflict between rule 10 and token SY_SLASH resolved as reduce (SY_SLASH < SY_RIGHT_BRACKET).
    Conflict between rule 10 and token SY_EQUALS resolved as reduce (SY_EQUALS < SY_RIGHT_BRACKET).
    Conflict between rule 10 and token SY_LESS resolved as reduce (SY_LESS < SY_RIGHT_BRACKET).
    Conflict between rule 10 and token SY_GREATER resolved as reduce (SY_GREATER < SY_RIGHT_BRACKET).
    Conflict between rule 10 and token SY_LESS_EQUALS resolved as reduce (SY_LESS_EQUALS < SY_RIGHT_BRACKET).
    Conflict between rule 10 and token SY_GREATER_EQUALS resolved as reduce (SY_GREATER_EQUALS < SY_RIGHT_BRACKET).
    Conflict between rule 10 and token SY_LESS_BIGGER resolved as reduce (SY_LESS_BIGGER < SY_RIGHT_BRACKET).
    Conflict between rule 10 and token SY_AND resolved as reduce (SY_AND < SY_RIGHT_BRACKET).
    Conflict between rule 10 and token SY_OR resolved as reduce (SY_OR < SY_RIGHT_BRACKET).
    Conflict between rule 10 and token SY_ASSIGN resolved as reduce (SY_ASSIGN < SY_RIGHT_BRACKET).
    Conflict between rule 10 and token SY_NOT resolved as reduce (SY_NOT < SY_RIGHT_BRACKET).


State 176

   73 all_commands: . complex_cmd
   74             | . simple_cmd
   75 complex_cmd: . KW_BEGIN cmd_list KW_END
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . if_cmd
   82           | . for_cmd
   83           | . while_cmd
   84           | . IDENT SY_COLON all_commands
   85           | . KW_GOTO IDENT
   86           | . KW_RETURN
   87           | . IDENT SY_LEFT_BRACKET arglist
   88           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   90 while_cmd: . KW_WHILE expression KW_DO all_commands
   91          | . KW_REPEAT all_commands KW_UNTIL expression
   92 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   93        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   94 if_cmd: . KW_IF expression KW_THEN all_commands else_state
   95 else_state: KW_ELSE . all_commands

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_IF      shift, and go to state 54
    KW_FOR     shift, and go to state 55
    KW_REPEAT  shift, and go to state 56
    KW_WHILE   shift, and go to state 57

    all_commands  go to state 183
    complex_cmd   go to state 97
    simple_cmd    go to state 98
    proc_call     go to state 60
    while_cmd     go to state 61
    for_cmd       go to state 62
    if_cmd        go to state 63


State 177

   94 if_cmd: KW_IF expression KW_THEN all_commands else_state .

    $default  reduce using rule 94 (if_cmd)


State 178

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   92 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO . expression KW_DO all_commands

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 184
    proc_call   go to state 94


State 179

    7 unary_exp: . SY_DASH expression
    8          | . SY_NOT expression
    9          | . expression SY_NOT
   10          | . SY_LEFT_BRACKET simple_data_type SY_RIGHT_BRACKET expression
   11 binary_exp: . expression SY_DASH expression
   12           | . expression SY_PLUS expression
   13           | . expression SY_STAR expression
   14           | . expression SY_SLASH expression
   15           | . expression SY_EQUALS expression
   16           | . expression SY_LESS expression
   17           | . expression SY_GREATER expression
   18           | . expression SY_LESS_EQUALS expression
   19           | . expression SY_GREATER_EQUALS expression
   20           | . expression SY_LESS_BIGGER expression
   21           | . expression SY_AND expression
   22           | . expression SY_OR expression
   23           | . expression SY_ASSIGN expression
   24 expression: . POSINT
   25           | . REAL
   26           | . STRING
   27           | . IDENT
   28           | . KW_RESULT
   29           | . SY_LEFT_BRACKET expression SY_RIGHT_BRACKET
   30           | . unary_exp
   31           | . binary_exp
   32           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   93 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO . expression KW_DO all_commands

    IDENT            shift, and go to state 83
    POSINT           shift, and go to state 84
    REAL             shift, and go to state 85
    STRING           shift, and go to state 86
    KW_RESULT        shift, and go to state 87
    SY_DASH          shift, and go to state 88
    SY_NOT           shift, and go to state 89
    SY_LEFT_BRACKET  shift, and go to state 90

    unary_exp   go to state 91
    binary_exp  go to state 92
    expression  go to state 185
    proc_call   go to state 94


State 180

   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type . SY_SEMICOLON function_body

    SY_SEMICOLON  shift, and go to state 186


State 181

   49 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   50         | . KW_VAR var_decl_list
   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON . procedure_body
   71 procedure_body: . var_decl subprogram_list complex_cmd SY_SEMICOLON

    KW_VAR  shift, and go to state 12

    $default  reduce using rule 49 (var_decl)

    var_decl        go to state 187
    procedure_body  go to state 188


State 182

   68 args_decl_list: args_decl_list SY_SEMICOLON IDENT SY_COLON advanced_data_type .

    $default  reduce using rule 68 (args_decl_list)


State 183

   95 else_state: KW_ELSE all_commands .

    $default  reduce using rule 95 (else_state)


State 184

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   92 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression . KW_DO all_commands

    KW_DO              shift, and go to state 189
    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136


State 185

    9 unary_exp: expression . SY_NOT
   11 binary_exp: expression . SY_DASH expression
   12           | expression . SY_PLUS expression
   13           | expression . SY_STAR expression
   14           | expression . SY_SLASH expression
   15           | expression . SY_EQUALS expression
   16           | expression . SY_LESS expression
   17           | expression . SY_GREATER expression
   18           | expression . SY_LESS_EQUALS expression
   19           | expression . SY_GREATER_EQUALS expression
   20           | expression . SY_LESS_BIGGER expression
   21           | expression . SY_AND expression
   22           | expression . SY_OR expression
   23           | expression . SY_ASSIGN expression
   93 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression . KW_DO all_commands

    KW_DO              shift, and go to state 190
    SY_DASH            shift, and go to state 123
    SY_PLUS            shift, and go to state 124
    SY_STAR            shift, and go to state 125
    SY_SLASH           shift, and go to state 126
    SY_EQUALS          shift, and go to state 127
    SY_LESS            shift, and go to state 128
    SY_GREATER         shift, and go to state 129
    SY_LESS_EQUALS     shift, and go to state 130
    SY_GREATER_EQUALS  shift, and go to state 131
    SY_LESS_BIGGER     shift, and go to state 132
    SY_AND             shift, and go to state 133
    SY_OR              shift, and go to state 134
    SY_ASSIGN          shift, and go to state 135
    SY_NOT             shift, and go to state 136


State 186

   49 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   50         | . KW_VAR var_decl_list
   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON . function_body
   72 function_body: . var_decl subprogram_list complex_cmd SY_SEMICOLON

    KW_VAR  shift, and go to state 12

    $default  reduce using rule 49 (var_decl)

    var_decl       go to state 191
    function_body  go to state 192


State 187

   61 subprogram_list: . %empty
   62                | . subprogram_list subprogram
   71 procedure_body: var_decl . subprogram_list complex_cmd SY_SEMICOLON

    $default  reduce using rule 61 (subprogram_list)

    subprogram_list  go to state 193


State 188

   63 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body .

    $default  reduce using rule 63 (procedure_header)


State 189

   73 all_commands: . complex_cmd
   74             | . simple_cmd
   75 complex_cmd: . KW_BEGIN cmd_list KW_END
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . if_cmd
   82           | . for_cmd
   83           | . while_cmd
   84           | . IDENT SY_COLON all_commands
   85           | . KW_GOTO IDENT
   86           | . KW_RETURN
   87           | . IDENT SY_LEFT_BRACKET arglist
   88           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   90 while_cmd: . KW_WHILE expression KW_DO all_commands
   91          | . KW_REPEAT all_commands KW_UNTIL expression
   92 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   92        | KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO . all_commands
   93        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   94 if_cmd: . KW_IF expression KW_THEN all_commands else_state

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_IF      shift, and go to state 54
    KW_FOR     shift, and go to state 55
    KW_REPEAT  shift, and go to state 56
    KW_WHILE   shift, and go to state 57

    all_commands  go to state 194
    complex_cmd   go to state 97
    simple_cmd    go to state 98
    proc_call     go to state 60
    while_cmd     go to state 61
    for_cmd       go to state 62
    if_cmd        go to state 63


State 190

   73 all_commands: . complex_cmd
   74             | . simple_cmd
   75 complex_cmd: . KW_BEGIN cmd_list KW_END
   79 simple_cmd: . IDENT SY_ASSIGN expression
   80           | . KW_RESULT SY_ASSIGN expression
   81           | . if_cmd
   82           | . for_cmd
   83           | . while_cmd
   84           | . IDENT SY_COLON all_commands
   85           | . KW_GOTO IDENT
   86           | . KW_RETURN
   87           | . IDENT SY_LEFT_BRACKET arglist
   88           | . proc_call
   89 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET
   90 while_cmd: . KW_WHILE expression KW_DO all_commands
   91          | . KW_REPEAT all_commands KW_UNTIL expression
   92 for_cmd: . KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands
   93        | . KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands
   93        | KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO . all_commands
   94 if_cmd: . KW_IF expression KW_THEN all_commands else_state

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 33
    KW_RESULT  shift, and go to state 51
    KW_GOTO    shift, and go to state 52
    KW_RETURN  shift, and go to state 53
    KW_IF      shift, and go to state 54
    KW_FOR     shift, and go to state 55
    KW_REPEAT  shift, and go to state 56
    KW_WHILE   shift, and go to state 57

    all_commands  go to state 195
    complex_cmd   go to state 97
    simple_cmd    go to state 98
    proc_call     go to state 60
    while_cmd     go to state 61
    for_cmd       go to state 62
    if_cmd        go to state 63


State 191

   61 subprogram_list: . %empty
   62                | . subprogram_list subprogram
   72 function_body: var_decl . subprogram_list complex_cmd SY_SEMICOLON

    $default  reduce using rule 61 (subprogram_list)

    subprogram_list  go to state 196


State 192

   64 function_header: KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body .

    $default  reduce using rule 64 (function_header)


State 193

   59 subprogram: . procedure_header
   60           | . function_header
   62 subprogram_list: subprogram_list . subprogram
   63 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   64 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   71 procedure_body: var_decl subprogram_list . complex_cmd SY_SEMICOLON
   75 complex_cmd: . KW_BEGIN cmd_list KW_END

    KW_BEGIN      shift, and go to state 33
    KW_FUNCTION   shift, and go to state 34
    KW_PROCEDURE  shift, and go to state 35

    subprogram        go to state 36
    procedure_header  go to state 37
    function_header   go to state 38
    complex_cmd       go to state 197


State 194

   92 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_TO expression KW_DO all_commands .

    $default  reduce using rule 92 (for_cmd)


State 195

   93 for_cmd: KW_FOR IDENT SY_ASSIGN expression KW_DOWNTO expression KW_DO all_commands .

    $default  reduce using rule 93 (for_cmd)


State 196

   59 subprogram: . procedure_header
   60           | . function_header
   62 subprogram_list: subprogram_list . subprogram
   63 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET SY_SEMICOLON procedure_body
   64 function_header: . KW_FUNCTION IDENT SY_LEFT_BRACKET args_decl SY_RIGHT_BRACKET return_type SY_SEMICOLON function_body
   72 function_body: var_decl subprogram_list . complex_cmd SY_SEMICOLON
   75 complex_cmd: . KW_BEGIN cmd_list KW_END

    KW_BEGIN      shift, and go to state 33
    KW_FUNCTION   shift, and go to state 34
    KW_PROCEDURE  shift, and go to state 35

    subprogram        go to state 36
    procedure_header  go to state 37
    function_header   go to state 38
    complex_cmd       go to state 198


State 197

   71 procedure_body: var_decl subprogram_list complex_cmd . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 199


State 198

   72 function_body: var_decl subprogram_list complex_cmd . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 200


State 199

   71 procedure_body: var_decl subprogram_list complex_cmd SY_SEMICOLON .

    $default  reduce using rule 71 (procedure_body)


State 200

   72 function_body: var_decl subprogram_list complex_cmd SY_SEMICOLON .

    $default  reduce using rule 72 (function_body)
