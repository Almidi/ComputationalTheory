Terminals unused in grammar

   CAST
   BOOL
   KW_AND
   KW_DIV
   KW_FUNCTION
   KW_MOD
   KW_RESULT
   KW_DO
   KW_GOTO
   KW_NOT
   KW_RETURN
   KW_ELSE
   KW_IF
   KW_THEN
   KW_FOR
   KW_OR
   KW_REPEAT
   KW_UNTIL
   KW_WHILE
   KW_TO
   KW_DOWNTO
   SY_DASH
   SY_SLASH
   SY_EQUALS
   SY_LESS
   SY_GREATER
   SY_LESS_EQUALS
   SY_GREATER_EQUALS
   SY_LESS_BIGGER
   SY_AND
   SY_OR
   SY_NOT
   SY_ASSIGN
   SY_PLUS
   SY_STAR


State 16 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_decl var_decl subprogram body SY_PERIOD

    2 program_decl: KW_PROGRAM IDENT SY_SEMICOLON

    3 body: KW_BEGIN statements KW_END

    4 statements: %empty
    5           | statement_list

    6 statement_list: statement
    7               | statement_list SY_SEMICOLON statement

    8 statement: proc_call

    9 proc_call: IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

   10 arguments: %empty
   11          | arglist

   12 arglist: expression
   13        | arglist SY_COMMA expression

   14 expression: POSINT
   15           | REAL
   16           | STRING

   17 simple_data_type: KW_INTEGER
   18                 | KW_CHAR
   19                 | KW_BOOLEAN
   20                 | KW_REAL

   21 advanced_data_type: simple_data_type
   22                   | KW_ARRAY matrix_n KW_OF simple_data_type

   23 matrix_n: SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   24         | matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

   25 var_decl: %empty
   26         | KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   27         | var_decl1 var_decl2 var_decl3 var_decl

   28 var_decl1: IDENT
   29          | var_decl1 SY_COMMA IDENT

   30 var_decl2: SY_COLON
   31          | SY_COLON KW_ARRAY matrix_n KW_OF
   32          | SY_COLON KW_ARRAY KW_OF

   33 var_decl3: advanced_data_type SY_SEMICOLON

   34 subprogram: %empty
   35           | procedure_header

   36 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args SY_RIGHT_BRACKET SY_SEMICOLON

   37 args: %empty
   38     | var_decl1 SY_COLON advanced_data_type


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 2 9 28 29 36
POSINT (259) 14 23 24
REAL (260) 15
STRING (261) 16
CAST (262)
BOOL (263)
KW_PROGRAM (264) 2
KW_BEGIN (265) 3
KW_END (266) 3
KW_AND (267)
KW_DIV (268)
KW_FUNCTION (269)
KW_MOD (270)
KW_PROCEDURE (271) 36
KW_RESULT (272)
KW_ARRAY (273) 22 31 32
KW_DO (274)
KW_GOTO (275)
KW_NOT (276)
KW_RETURN (277)
KW_BOOLEAN (278) 19
KW_ELSE (279)
KW_IF (280)
KW_OF (281) 22 31 32
KW_REAL (282) 20
KW_THEN (283)
KW_CHAR (284) 18
KW_FOR (285)
KW_INTEGER (286) 17
KW_OR (287)
KW_REPEAT (288)
KW_UNTIL (289)
KW_VAR (290) 26
KW_WHILE (291)
KW_TO (292)
KW_DOWNTO (293)
SY_DASH (294)
SY_SLASH (295)
SY_EQUALS (296)
SY_LESS (297)
SY_GREATER (298)
SY_LESS_EQUALS (299)
SY_GREATER_EQUALS (300)
SY_LESS_BIGGER (301)
SY_AND (302)
SY_OR (303)
SY_NOT (304)
SY_ASSIGN (305)
SY_COMMA (306) 13 29
SY_LEFT_SQR_BRACKET (307) 23 24
SY_RIGHT_SQR_BRACKET (308) 23 24
SY_COLON (309) 30 31 32 38
SY_PLUS (310)
SY_STAR (311)
SY_SEMICOLON (312) 2 7 33 36
SY_PERIOD (313) 1
SY_LEFT_BRACKET (314) 9 36
SY_RIGHT_BRACKET (315) 9 36


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
program_decl (63)
    on left: 2, on right: 1
body (64)
    on left: 3, on right: 1
statements (65)
    on left: 4 5, on right: 3
statement_list (66)
    on left: 6 7, on right: 5 7
statement (67)
    on left: 8, on right: 6 7
proc_call (68)
    on left: 9, on right: 8
arguments (69)
    on left: 10 11, on right: 9
arglist (70)
    on left: 12 13, on right: 11 13
expression (71)
    on left: 14 15 16, on right: 12 13
simple_data_type (72)
    on left: 17 18 19 20, on right: 21 22
advanced_data_type (73)
    on left: 21 22, on right: 33 38
matrix_n (74)
    on left: 23 24, on right: 22 24 31
var_decl (75)
    on left: 25 26 27, on right: 1 26 27
var_decl1 (76)
    on left: 28 29, on right: 26 27 29 38
var_decl2 (77)
    on left: 30 31 32, on right: 26 27
var_decl3 (78)
    on left: 33, on right: 26 27
subprogram (79)
    on left: 34 35, on right: 1
procedure_header (80)
    on left: 36, on right: 35
args (81)
    on left: 37 38, on right: 36


State 0

    0 $accept: . program $end
    1 program: . program_decl var_decl subprogram body SY_PERIOD
    2 program_decl: . KW_PROGRAM IDENT SY_SEMICOLON

    KW_PROGRAM  shift, and go to state 1

    program       go to state 2
    program_decl  go to state 3


State 1

    2 program_decl: KW_PROGRAM . IDENT SY_SEMICOLON

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: program_decl . var_decl subprogram body SY_PERIOD
   25 var_decl: . %empty  [KW_BEGIN, KW_PROCEDURE]
   26         | . KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   27         | . var_decl1 var_decl2 var_decl3 var_decl
   28 var_decl1: . IDENT
   29          | . var_decl1 SY_COMMA IDENT

    IDENT   shift, and go to state 6
    KW_VAR  shift, and go to state 7

    $default  reduce using rule 25 (var_decl)

    var_decl   go to state 8
    var_decl1  go to state 9


State 4

    2 program_decl: KW_PROGRAM IDENT . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 10


State 5

    0 $accept: program $end .

    $default  accept


State 6

   28 var_decl1: IDENT .

    $default  reduce using rule 28 (var_decl1)


State 7

   26 var_decl: KW_VAR . var_decl1 var_decl2 var_decl3 var_decl
   28 var_decl1: . IDENT
   29          | . var_decl1 SY_COMMA IDENT

    IDENT  shift, and go to state 6

    var_decl1  go to state 11


State 8

    1 program: program_decl var_decl . subprogram body SY_PERIOD
   34 subprogram: . %empty  [KW_BEGIN]
   35           | . procedure_header
   36 procedure_header: . KW_PROCEDURE IDENT SY_LEFT_BRACKET args SY_RIGHT_BRACKET SY_SEMICOLON

    KW_PROCEDURE  shift, and go to state 12

    $default  reduce using rule 34 (subprogram)

    subprogram        go to state 13
    procedure_header  go to state 14


State 9

   27 var_decl: var_decl1 . var_decl2 var_decl3 var_decl
   29 var_decl1: var_decl1 . SY_COMMA IDENT
   30 var_decl2: . SY_COLON
   31          | . SY_COLON KW_ARRAY matrix_n KW_OF
   32          | . SY_COLON KW_ARRAY KW_OF

    SY_COMMA  shift, and go to state 15
    SY_COLON  shift, and go to state 16

    var_decl2  go to state 17


State 10

    2 program_decl: KW_PROGRAM IDENT SY_SEMICOLON .

    $default  reduce using rule 2 (program_decl)


State 11

   26 var_decl: KW_VAR var_decl1 . var_decl2 var_decl3 var_decl
   29 var_decl1: var_decl1 . SY_COMMA IDENT
   30 var_decl2: . SY_COLON
   31          | . SY_COLON KW_ARRAY matrix_n KW_OF
   32          | . SY_COLON KW_ARRAY KW_OF

    SY_COMMA  shift, and go to state 15
    SY_COLON  shift, and go to state 16

    var_decl2  go to state 18


State 12

   36 procedure_header: KW_PROCEDURE . IDENT SY_LEFT_BRACKET args SY_RIGHT_BRACKET SY_SEMICOLON

    IDENT  shift, and go to state 19


State 13

    1 program: program_decl var_decl subprogram . body SY_PERIOD
    3 body: . KW_BEGIN statements KW_END

    KW_BEGIN  shift, and go to state 20

    body  go to state 21


State 14

   35 subprogram: procedure_header .

    $default  reduce using rule 35 (subprogram)


State 15

   29 var_decl1: var_decl1 SY_COMMA . IDENT

    IDENT  shift, and go to state 22


State 16

   30 var_decl2: SY_COLON .  [KW_ARRAY, KW_BOOLEAN, KW_REAL, KW_CHAR, KW_INTEGER]
   31          | SY_COLON . KW_ARRAY matrix_n KW_OF
   32          | SY_COLON . KW_ARRAY KW_OF

    KW_ARRAY  shift, and go to state 23

    KW_ARRAY  [reduce using rule 30 (var_decl2)]
    $default  reduce using rule 30 (var_decl2)


State 17

   17 simple_data_type: . KW_INTEGER
   18                 | . KW_CHAR
   19                 | . KW_BOOLEAN
   20                 | . KW_REAL
   21 advanced_data_type: . simple_data_type
   22                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   27 var_decl: var_decl1 var_decl2 . var_decl3 var_decl
   33 var_decl3: . advanced_data_type SY_SEMICOLON

    KW_ARRAY    shift, and go to state 24
    KW_BOOLEAN  shift, and go to state 25
    KW_REAL     shift, and go to state 26
    KW_CHAR     shift, and go to state 27
    KW_INTEGER  shift, and go to state 28

    simple_data_type    go to state 29
    advanced_data_type  go to state 30
    var_decl3           go to state 31


State 18

   17 simple_data_type: . KW_INTEGER
   18                 | . KW_CHAR
   19                 | . KW_BOOLEAN
   20                 | . KW_REAL
   21 advanced_data_type: . simple_data_type
   22                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   26 var_decl: KW_VAR var_decl1 var_decl2 . var_decl3 var_decl
   33 var_decl3: . advanced_data_type SY_SEMICOLON

    KW_ARRAY    shift, and go to state 24
    KW_BOOLEAN  shift, and go to state 25
    KW_REAL     shift, and go to state 26
    KW_CHAR     shift, and go to state 27
    KW_INTEGER  shift, and go to state 28

    simple_data_type    go to state 29
    advanced_data_type  go to state 30
    var_decl3           go to state 32


State 19

   36 procedure_header: KW_PROCEDURE IDENT . SY_LEFT_BRACKET args SY_RIGHT_BRACKET SY_SEMICOLON

    SY_LEFT_BRACKET  shift, and go to state 33


State 20

    3 body: KW_BEGIN . statements KW_END
    4 statements: . %empty  [KW_END]
    5           | . statement_list
    6 statement_list: . statement
    7               | . statement_list SY_SEMICOLON statement
    8 statement: . proc_call
    9 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT  shift, and go to state 34

    $default  reduce using rule 4 (statements)

    statements      go to state 35
    statement_list  go to state 36
    statement       go to state 37
    proc_call       go to state 38


State 21

    1 program: program_decl var_decl subprogram body . SY_PERIOD

    SY_PERIOD  shift, and go to state 39


State 22

   29 var_decl1: var_decl1 SY_COMMA IDENT .

    $default  reduce using rule 29 (var_decl1)


State 23

   23 matrix_n: . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   24         | . matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   31 var_decl2: SY_COLON KW_ARRAY . matrix_n KW_OF
   32          | SY_COLON KW_ARRAY . KW_OF

    KW_OF                shift, and go to state 40
    SY_LEFT_SQR_BRACKET  shift, and go to state 41

    matrix_n  go to state 42


State 24

   22 advanced_data_type: KW_ARRAY . matrix_n KW_OF simple_data_type
   23 matrix_n: . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   24         | . matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

    SY_LEFT_SQR_BRACKET  shift, and go to state 41

    matrix_n  go to state 43


State 25

   19 simple_data_type: KW_BOOLEAN .

    $default  reduce using rule 19 (simple_data_type)


State 26

   20 simple_data_type: KW_REAL .

    $default  reduce using rule 20 (simple_data_type)


State 27

   18 simple_data_type: KW_CHAR .

    $default  reduce using rule 18 (simple_data_type)


State 28

   17 simple_data_type: KW_INTEGER .

    $default  reduce using rule 17 (simple_data_type)


State 29

   21 advanced_data_type: simple_data_type .

    $default  reduce using rule 21 (advanced_data_type)


State 30

   33 var_decl3: advanced_data_type . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 44


State 31

   25 var_decl: . %empty  [KW_BEGIN, KW_PROCEDURE]
   26         | . KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   27         | . var_decl1 var_decl2 var_decl3 var_decl
   27         | var_decl1 var_decl2 var_decl3 . var_decl
   28 var_decl1: . IDENT
   29          | . var_decl1 SY_COMMA IDENT

    IDENT   shift, and go to state 6
    KW_VAR  shift, and go to state 7

    $default  reduce using rule 25 (var_decl)

    var_decl   go to state 45
    var_decl1  go to state 9


State 32

   25 var_decl: . %empty  [KW_BEGIN, KW_PROCEDURE]
   26         | . KW_VAR var_decl1 var_decl2 var_decl3 var_decl
   26         | KW_VAR var_decl1 var_decl2 var_decl3 . var_decl
   27         | . var_decl1 var_decl2 var_decl3 var_decl
   28 var_decl1: . IDENT
   29          | . var_decl1 SY_COMMA IDENT

    IDENT   shift, and go to state 6
    KW_VAR  shift, and go to state 7

    $default  reduce using rule 25 (var_decl)

    var_decl   go to state 46
    var_decl1  go to state 9


State 33

   28 var_decl1: . IDENT
   29          | . var_decl1 SY_COMMA IDENT
   36 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET . args SY_RIGHT_BRACKET SY_SEMICOLON
   37 args: . %empty  [SY_RIGHT_BRACKET]
   38     | . var_decl1 SY_COLON advanced_data_type

    IDENT  shift, and go to state 6

    $default  reduce using rule 37 (args)

    var_decl1  go to state 47
    args       go to state 48


State 34

    9 proc_call: IDENT . SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    SY_LEFT_BRACKET  shift, and go to state 49


State 35

    3 body: KW_BEGIN statements . KW_END

    KW_END  shift, and go to state 50


State 36

    5 statements: statement_list .  [KW_END]
    7 statement_list: statement_list . SY_SEMICOLON statement

    SY_SEMICOLON  shift, and go to state 51

    $default  reduce using rule 5 (statements)


State 37

    6 statement_list: statement .

    $default  reduce using rule 6 (statement_list)


State 38

    8 statement: proc_call .

    $default  reduce using rule 8 (statement)


State 39

    1 program: program_decl var_decl subprogram body SY_PERIOD .

    $default  reduce using rule 1 (program)


State 40

   32 var_decl2: SY_COLON KW_ARRAY KW_OF .

    $default  reduce using rule 32 (var_decl2)


State 41

   23 matrix_n: SY_LEFT_SQR_BRACKET . POSINT SY_RIGHT_SQR_BRACKET

    POSINT  shift, and go to state 52


State 42

   24 matrix_n: matrix_n . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET
   31 var_decl2: SY_COLON KW_ARRAY matrix_n . KW_OF

    KW_OF                shift, and go to state 53
    SY_LEFT_SQR_BRACKET  shift, and go to state 54


State 43

   22 advanced_data_type: KW_ARRAY matrix_n . KW_OF simple_data_type
   24 matrix_n: matrix_n . SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET

    KW_OF                shift, and go to state 55
    SY_LEFT_SQR_BRACKET  shift, and go to state 54


State 44

   33 var_decl3: advanced_data_type SY_SEMICOLON .

    $default  reduce using rule 33 (var_decl3)


State 45

   27 var_decl: var_decl1 var_decl2 var_decl3 var_decl .

    $default  reduce using rule 27 (var_decl)


State 46

   26 var_decl: KW_VAR var_decl1 var_decl2 var_decl3 var_decl .

    $default  reduce using rule 26 (var_decl)


State 47

   29 var_decl1: var_decl1 . SY_COMMA IDENT
   38 args: var_decl1 . SY_COLON advanced_data_type

    SY_COMMA  shift, and go to state 15
    SY_COLON  shift, and go to state 56


State 48

   36 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args . SY_RIGHT_BRACKET SY_SEMICOLON

    SY_RIGHT_BRACKET  shift, and go to state 57


State 49

    9 proc_call: IDENT SY_LEFT_BRACKET . arguments SY_RIGHT_BRACKET
   10 arguments: . %empty  [SY_RIGHT_BRACKET]
   11          | . arglist
   12 arglist: . expression
   13        | . arglist SY_COMMA expression
   14 expression: . POSINT
   15           | . REAL
   16           | . STRING

    POSINT  shift, and go to state 58
    REAL    shift, and go to state 59
    STRING  shift, and go to state 60

    $default  reduce using rule 10 (arguments)

    arguments   go to state 61
    arglist     go to state 62
    expression  go to state 63


State 50

    3 body: KW_BEGIN statements KW_END .

    $default  reduce using rule 3 (body)


State 51

    7 statement_list: statement_list SY_SEMICOLON . statement
    8 statement: . proc_call
    9 proc_call: . IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET

    IDENT  shift, and go to state 34

    statement  go to state 64
    proc_call  go to state 38


State 52

   23 matrix_n: SY_LEFT_SQR_BRACKET POSINT . SY_RIGHT_SQR_BRACKET

    SY_RIGHT_SQR_BRACKET  shift, and go to state 65


State 53

   31 var_decl2: SY_COLON KW_ARRAY matrix_n KW_OF .

    $default  reduce using rule 31 (var_decl2)


State 54

   24 matrix_n: matrix_n SY_LEFT_SQR_BRACKET . POSINT SY_RIGHT_SQR_BRACKET

    POSINT  shift, and go to state 66


State 55

   17 simple_data_type: . KW_INTEGER
   18                 | . KW_CHAR
   19                 | . KW_BOOLEAN
   20                 | . KW_REAL
   22 advanced_data_type: KW_ARRAY matrix_n KW_OF . simple_data_type

    KW_BOOLEAN  shift, and go to state 25
    KW_REAL     shift, and go to state 26
    KW_CHAR     shift, and go to state 27
    KW_INTEGER  shift, and go to state 28

    simple_data_type  go to state 67


State 56

   17 simple_data_type: . KW_INTEGER
   18                 | . KW_CHAR
   19                 | . KW_BOOLEAN
   20                 | . KW_REAL
   21 advanced_data_type: . simple_data_type
   22                   | . KW_ARRAY matrix_n KW_OF simple_data_type
   38 args: var_decl1 SY_COLON . advanced_data_type

    KW_ARRAY    shift, and go to state 24
    KW_BOOLEAN  shift, and go to state 25
    KW_REAL     shift, and go to state 26
    KW_CHAR     shift, and go to state 27
    KW_INTEGER  shift, and go to state 28

    simple_data_type    go to state 29
    advanced_data_type  go to state 68


State 57

   36 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args SY_RIGHT_BRACKET . SY_SEMICOLON

    SY_SEMICOLON  shift, and go to state 69


State 58

   14 expression: POSINT .

    $default  reduce using rule 14 (expression)


State 59

   15 expression: REAL .

    $default  reduce using rule 15 (expression)


State 60

   16 expression: STRING .

    $default  reduce using rule 16 (expression)


State 61

    9 proc_call: IDENT SY_LEFT_BRACKET arguments . SY_RIGHT_BRACKET

    SY_RIGHT_BRACKET  shift, and go to state 70


State 62

   11 arguments: arglist .  [SY_RIGHT_BRACKET]
   13 arglist: arglist . SY_COMMA expression

    SY_COMMA  shift, and go to state 71

    $default  reduce using rule 11 (arguments)


State 63

   12 arglist: expression .

    $default  reduce using rule 12 (arglist)


State 64

    7 statement_list: statement_list SY_SEMICOLON statement .

    $default  reduce using rule 7 (statement_list)


State 65

   23 matrix_n: SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET .

    $default  reduce using rule 23 (matrix_n)


State 66

   24 matrix_n: matrix_n SY_LEFT_SQR_BRACKET POSINT . SY_RIGHT_SQR_BRACKET

    SY_RIGHT_SQR_BRACKET  shift, and go to state 72


State 67

   22 advanced_data_type: KW_ARRAY matrix_n KW_OF simple_data_type .

    $default  reduce using rule 22 (advanced_data_type)


State 68

   38 args: var_decl1 SY_COLON advanced_data_type .

    $default  reduce using rule 38 (args)


State 69

   36 procedure_header: KW_PROCEDURE IDENT SY_LEFT_BRACKET args SY_RIGHT_BRACKET SY_SEMICOLON .

    $default  reduce using rule 36 (procedure_header)


State 70

    9 proc_call: IDENT SY_LEFT_BRACKET arguments SY_RIGHT_BRACKET .

    $default  reduce using rule 9 (proc_call)


State 71

   13 arglist: arglist SY_COMMA . expression
   14 expression: . POSINT
   15           | . REAL
   16           | . STRING

    POSINT  shift, and go to state 58
    REAL    shift, and go to state 59
    STRING  shift, and go to state 60

    expression  go to state 73


State 72

   24 matrix_n: matrix_n SY_LEFT_SQR_BRACKET POSINT SY_RIGHT_SQR_BRACKET .

    $default  reduce using rule 24 (matrix_n)


State 73

   13 arglist: arglist SY_COMMA expression .

    $default  reduce using rule 13 (arglist)
